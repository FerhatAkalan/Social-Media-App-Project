[{"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\index.js":"1","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\UserSignupPage.js":"3","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\api\\apiCalls.js":"4","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Input.js":"5","c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\index.js":"6","c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\reportWebVitals.js":"7","c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\UserSignupPage.js":"8","c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\api\\apiCalls.js":"9","c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Input.js":"10","c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\LoginPage.js":"11","c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\LanguageSelector.js":"12","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\LanguageSelector.js":"13","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\LoginPage.js":"14","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\ButtonWithProgress.js":"15","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\shared\\ApiProgress.js":"16","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\container\\App.js":"17","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\HomePage.js":"18","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\UserPage.js":"19","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\container\\TopBar.js":"20","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\container\\Footer.js":"21","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\ProfileCard.js":"22","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\redux\\configureStore.js":"23","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\redux\\authReducer.js":"24","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\redux\\authActions.js":"25","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\redux\\Constants.js":"26","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\UserList.js":"27","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\UserListItem.js":"28","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\ProfileImageWithDefault.js":"29","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Spinner.js":"30","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\PostSubmit.js":"31","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\PostFeed.js":"32","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\PostView.js":"33","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Sidebar.js":"34","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Sidebar2.js":"35","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\AutoUploadImage.js":"36","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Modal.js":"37","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\VerificationRequestsPage.js":"38","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\i18n.js":"39","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\index.js":"40","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\reportWebVitals.js":"41","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\i18n.js":"42","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\container\\App.js":"43","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\redux\\configureStore.js":"44","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\shared\\ApiProgress.js":"45","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\container\\Footer.js":"46","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\redux\\authReducer.js":"47","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\container\\TopBar.js":"48","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\api\\apiCalls.js":"49","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\LoginPage.js":"50","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\HomePage.js":"51","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\UserSignupPage.js":"52","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\UserPage.js":"53","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\VerificationRequestsPage.js":"54","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\redux\\Constants.js":"55","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\redux\\authActions.js":"56","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Input.js":"57","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\LanguageSelector.js":"58","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\ProfileImageWithDefault.js":"59","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\UserList.js":"60","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\PostSubmit.js":"61","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Sidebar.js":"62","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Sidebar2.js":"63","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\PostFeed.js":"64","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\ProfileCard.js":"65","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Spinner.js":"66","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\UserListItem.js":"67","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\AutoUploadImage.js":"68","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\PostView.js":"69","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Modal.js":"70","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\VerifiedBadge.js":"71","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\ButtonWithProgress.js":"72","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\LikedPostFeed.js":"73"},{"size":792,"mtime":1690461994081,"results":"74","hashOfConfig":"75"},{"size":362,"mtime":1687716106824,"results":"76","hashOfConfig":"75"},{"size":3775,"mtime":1691150615488,"results":"77","hashOfConfig":"75"},{"size":2936,"mtime":1691501278193,"results":"78","hashOfConfig":"75"},{"size":638,"mtime":1691137280202,"results":"79","hashOfConfig":"75"},{"size":776,"mtime":1690279872622,"results":"80","hashOfConfig":"81"},{"size":362,"mtime":1687716106824,"results":"82","hashOfConfig":"81"},{"size":3336,"mtime":1690281285841,"results":"83","hashOfConfig":"81"},{"size":359,"mtime":1690282378845,"results":"84","hashOfConfig":"81"},{"size":520,"mtime":1690271223468,"results":"85","hashOfConfig":"81"},{"size":1520,"mtime":1690281578728,"results":"86","hashOfConfig":"81"},{"size":897,"mtime":1690273319281,"results":"87","hashOfConfig":"81"},{"size":1534,"mtime":1691500953701,"results":"88","hashOfConfig":"75"},{"size":3405,"mtime":1691125669952,"results":"89","hashOfConfig":"75"},{"size":594,"mtime":1690973832479,"results":"90","hashOfConfig":"75"},{"size":1597,"mtime":1691052881865,"results":"91","hashOfConfig":"75"},{"size":1269,"mtime":1691493986326,"results":"92","hashOfConfig":"75"},{"size":1021,"mtime":1691410742692,"results":"93","hashOfConfig":"75"},{"size":2280,"mtime":1691417583211,"results":"94","hashOfConfig":"75"},{"size":3515,"mtime":1691474885570,"results":"95","hashOfConfig":"75"},{"size":946,"mtime":1691410533675,"results":"96","hashOfConfig":"75"},{"size":9758,"mtime":1691493888937,"results":"97","hashOfConfig":"75"},{"size":1254,"mtime":1690876820258,"results":"98","hashOfConfig":"75"},{"size":637,"mtime":1691417520378,"results":"99","hashOfConfig":"75"},{"size":1152,"mtime":1691415767801,"results":"100","hashOfConfig":"75"},{"size":141,"mtime":1691172411782,"results":"101","hashOfConfig":"75"},{"size":2096,"mtime":1691067435318,"results":"102","hashOfConfig":"75"},{"size":774,"mtime":1690982518023,"results":"103","hashOfConfig":"75"},{"size":517,"mtime":1691172411781,"results":"104","hashOfConfig":"75"},{"size":229,"mtime":1690889491664,"results":"105","hashOfConfig":"75"},{"size":4223,"mtime":1691491411826,"results":"106","hashOfConfig":"75"},{"size":4359,"mtime":1691147445438,"results":"107","hashOfConfig":"75"},{"size":5119,"mtime":1691485704796,"results":"108","hashOfConfig":"75"},{"size":5037,"mtime":1691058468330,"results":"109","hashOfConfig":"75"},{"size":6375,"mtime":1691490004457,"results":"110","hashOfConfig":"75"},{"size":658,"mtime":1691137801482,"results":"111","hashOfConfig":"75"},{"size":1264,"mtime":1691179466894,"results":"112","hashOfConfig":"75"},{"size":3356,"mtime":1691474926532,"results":"113","hashOfConfig":"75"},{"size":1516,"mtime":1691501299009,"results":"114","hashOfConfig":"75"},{"size":792,"mtime":1692357064396,"results":"115","hashOfConfig":"116"},{"size":362,"mtime":1687716106824,"results":"117","hashOfConfig":"116"},{"size":1516,"mtime":1691501299009,"results":"118","hashOfConfig":"116"},{"size":1296,"mtime":1692360348888,"results":"119","hashOfConfig":"116"},{"size":1246,"mtime":1692357065485,"results":"120","hashOfConfig":"116"},{"size":1597,"mtime":1691052881865,"results":"121","hashOfConfig":"116"},{"size":946,"mtime":1691410533675,"results":"122","hashOfConfig":"116"},{"size":1220,"mtime":1692360333727,"results":"123","hashOfConfig":"116"},{"size":4171,"mtime":1692262022703,"results":"124","hashOfConfig":"116"},{"size":5137,"mtime":1692438905258,"results":"125","hashOfConfig":"116"},{"size":3417,"mtime":1692014629677,"results":"126","hashOfConfig":"116"},{"size":972,"mtime":1691658467109,"results":"127","hashOfConfig":"116"},{"size":3826,"mtime":1692438736452,"results":"128","hashOfConfig":"116"},{"size":3201,"mtime":1692440071758,"results":"129","hashOfConfig":"116"},{"size":9181,"mtime":1692436709125,"results":"130","hashOfConfig":"116"},{"size":257,"mtime":1692358274014,"results":"131","hashOfConfig":"116"},{"size":1964,"mtime":1692360345047,"results":"132","hashOfConfig":"116"},{"size":685,"mtime":1692110290225,"results":"133","hashOfConfig":"116"},{"size":1534,"mtime":1691791713448,"results":"134","hashOfConfig":"116"},{"size":517,"mtime":1691172411781,"results":"135","hashOfConfig":"116"},{"size":2096,"mtime":1691067435318,"results":"136","hashOfConfig":"116"},{"size":4215,"mtime":1692014498930,"results":"137","hashOfConfig":"116"},{"size":5792,"mtime":1692353545153,"results":"138","hashOfConfig":"116"},{"size":6581,"mtime":1691654974944,"results":"139","hashOfConfig":"116"},{"size":4359,"mtime":1692368915611,"results":"140","hashOfConfig":"116"},{"size":11394,"mtime":1692262748425,"results":"141","hashOfConfig":"116"},{"size":229,"mtime":1690889491664,"results":"142","hashOfConfig":"116"},{"size":900,"mtime":1691764042959,"results":"143","hashOfConfig":"116"},{"size":658,"mtime":1691137801482,"results":"144","hashOfConfig":"116"},{"size":6874,"mtime":1692440013515,"results":"145","hashOfConfig":"116"},{"size":1707,"mtime":1692189303350,"results":"146","hashOfConfig":"116"},{"size":2066,"mtime":1692008120193,"results":"147","hashOfConfig":"116"},{"size":594,"mtime":1690973832479,"results":"148","hashOfConfig":"116"},{"size":1250,"mtime":1692453758722,"results":"149","hashOfConfig":"116"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},"2gcgok",{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},"1rrz8l9",{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"154"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"154"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"280"},"1v41490",{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"280"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"280"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"280"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"280"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"280"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"280"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"280"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"280"},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"280"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"280"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\index.js",["390"],[],"import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport \"./bootstrap-override.scss\";\r\nimport App from \"./container/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./i18n\";\r\nimport ApiProgress from \"./shared/ApiProgress\";\r\nimport { Provider } from \"react-redux\";\r\nimport configureStore from \"./redux/configureStore\";\r\n\r\nconst store = configureStore();\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\UserSignupPage.js",["391","392"],[],"import React, { useState } from \"react\";\r\nimport { signup } from \"../api/apiCalls\";\r\nimport Input from \"../components/Input\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ButtonWithProgress from \"./ButtonWithProgress\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport background from \"../assets/2.jpg\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signupHandler } from \"../redux/authActions\";\r\n\r\nconst UserSignupPage = (props) => {\r\n  const [form, setForm] = useState({\r\n    username: null,\r\n    displayName: null,\r\n    password: null,\r\n    passwordRepeat: null,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const dispatch = useDispatch();\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const errorsCopy = { ...errors };\r\n    errorsCopy[name] = undefined;\r\n    setErrors(errorsCopy);\r\n    const formCopy = { ...form };\r\n    formCopy[name] = value;\r\n    setForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n  };\r\n\r\n  const onClickSignup = async (event) => {\r\n    event.preventDefault();\r\n    const { history } = props;\r\n    const { push } = history;\r\n    const { username, displayName, password } = form;\r\n    const body = {\r\n      username,\r\n      displayName,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      const response = await dispatch(signupHandler(body));\r\n      push(\"/\");\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n  const { t } = useTranslation();\r\n\r\n  const {\r\n    username: usernameError,\r\n    displayName: displayNameError,\r\n    password: passwordError,\r\n  } = errors;\r\n  const pendingApiCallSignup = useApiProgress(\"post\", \"/api/1.0/users\");\r\n  const pendingApiCallLogin = useApiProgress(\"post\", \"/api/1.0/auth\");\r\n  const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n  let passwordRepeatError;\r\n  if (form.password !== form.passwordRepeat) {\r\n    passwordRepeatError = t(\"Password mismatch\");\r\n  }\r\n  return (\r\n    <div\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{\r\n        backgroundImage: `url(${background})`,\r\n        backgroundSize: \"cover\",\r\n        minHeight: \"80vh\",\r\n        backgroundColor: \"rgba(192, 192, 192, 1)\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"container p-4\"\r\n        style={{\r\n          backgroundColor: \"rgba(255, 255, 255, 0.7)\",\r\n          borderRadius: \"20px\",\r\n          maxWidth: \"500px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <form>\r\n          <h1 className=\"text-center mb-3\">{t(\"Sign Up\")}</h1>\r\n          <Input\r\n            name=\"username\"\r\n            label={t(\"Username\")}\r\n            error={usernameError}\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            name=\"displayName\"\r\n            label={t(\"Display Name\")}\r\n            error={displayNameError}\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            label={t(\"Password\")}\r\n            type=\"password\"\r\n            error={passwordError}\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            name=\"passwordRepeat\"\r\n            label={t(\"Password Repeat\")}\r\n            type=\"password\"\r\n            error={passwordRepeatError}\r\n            onChange={onChange}\r\n          />\r\n          <div className=\"text-center mt-3\">\r\n            <ButtonWithProgress\r\n              onClick={onClickSignup}\r\n              disabled={pendingApiCall || passwordRepeatError !== undefined}\r\n              pendingApiCall={pendingApiCall}\r\n              text={t(\"Sign Up\")}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSignupPage;\r\n","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\api\\apiCalls.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Input.js",[],[],"c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\index.js",["393","394"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './bootstrap-override.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport UserSignupPage from './pages/UserSignupPage';\nimport './i18n';\nimport LoginPage from './pages/LoginPage';\nimport LanguageSelector from './components/LanguageSelector';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <LanguageSelector/>\n    <LoginPage />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\reportWebVitals.js",[],[],[],"c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\UserSignupPage.js",["395"],[],"c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\api\\apiCalls.js",[],[],"c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Input.js",["396"],[],"c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\LoginPage.js",[],[],"c:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\LanguageSelector.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\LanguageSelector.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\LoginPage.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\ButtonWithProgress.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\shared\\ApiProgress.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\container\\App.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\HomePage.js",["397","398","399"],[],"import React from \"react\";\r\nimport maintenance from \"../assets/maintenance.jpg\";\r\nimport UserList from \"../components/UserList\";\r\nimport PostSubmit from \"../components/PostSubmit\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostFeed from \"../components/PostFeed\";\r\nimport logo from \"../assets/logo.png\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Sidebar2 from \"../components/Sidebar2\";\r\n\r\nconst HomePage = () => {\r\n  const { isLoggedIn } = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"container mt-3 pb-1\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-2 col-md-2 mb-3\">\r\n          <Sidebar2 />\r\n        </div>\r\n        <div className=\"col-lg-7 col-md-7 mb-3\">\r\n          <div className=\"mb-0\">{isLoggedIn && <PostSubmit />}</div>\r\n          <PostFeed />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-3 mb-3\">\r\n          <UserList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\UserPage.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\container\\TopBar.js",["400"],[],"import React from \"react\";\r\nimport LanguageSelector from \"../components/LanguageSelector\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutSucces } from \"../redux/authActions\";\r\nimport ProfileImageWithDefault from \"../components/ProfileImageWithDefault\";\r\nconst TopBar = (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { username, isLoggedIn, displayName, image } = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n    username: store.username,\r\n    displayName: store.displayName,\r\n    image: store.image,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogoutSuccess = () => {\r\n    dispatch(logoutSucces());\r\n  };\r\n\r\n  let links = (\r\n    <div className=\"ms-auto\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/\">\r\n            <i className=\"fa-solid fa-house me-1\"></i>\r\n            {t(\"Home Page\")}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            <i className=\"fa-solid fa-right-to-bracket me-1\"></i>\r\n            {t(\"Login\")}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/signup\">\r\n            <i className=\"fa-solid fa-user-plus me-1\"></i>\r\n            {t(\"Sign Up\")}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <LanguageSelector />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  if (isLoggedIn) {\r\n    links = (\r\n      <div className=\"ms-auto\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link d-flex\" to=\"/\">\r\n              <i className=\"material-icons text-secondary me-1\">home</i>\r\n              {t(\"Home Page\")}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <div className=\"nav-link d-flex\" style={{ cursor: \"pointer\" }}>\r\n              <ProfileImageWithDefault\r\n                image={image}\r\n                width=\"24\"\r\n                height=\"24\"\r\n                className=\"rounded-circle me-1\"\r\n              />\r\n              <span>{displayName}</span>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link d-flex\" to={\"/users/\" + username}>\r\n              <i className=\"material-icons text-info  me-1\">person</i>\r\n              {t(\"My Profile\")}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\" onClick={onLogoutSuccess}>\r\n            <Link className=\"nav-link d-flex\" to=\"/login\">\r\n              <i className=\"material-icons text-warning me-1\">logout</i>\r\n              {t(\"Logout\")}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <LanguageSelector />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"shadow-sm bg-light\">\r\n      <nav className=\"navbar navbar-light container navbar-expand\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          <img src={logo} width=\"65\" alt=\"Hoaxify logo\" />\r\n          <a className=\"navbar-brand ms-2\">Social Cafe </a>\r\n        </Link>\r\n        <em className=\"navbar-text ms-auto\">\r\n          {t(\"Share your coffee, explore the world!\")}\r\n        </em>\r\n        {links}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\container\\Footer.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\ProfileCard.js",["401","402","403","404"],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\redux\\configureStore.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\redux\\authReducer.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\redux\\authActions.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\redux\\Constants.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\UserList.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\UserListItem.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\ProfileImageWithDefault.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Spinner.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\PostSubmit.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\PostFeed.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\PostView.js",["405","406"],[],"import React from \"react\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"timeago.js\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { deletePost } from \"../api/apiCalls\";\r\nimport { useState } from \"react\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport Modal from \"../components/Modal\";\r\n\r\nconst PostView = (props) => {\r\n  const loggedInUser = useSelector((store) => store.username);\r\n  const { post, onDeletePost } = props;\r\n  const { user, content, timestamp, fileAttachment, id } = post;\r\n  const { username, displayName, image, admin } = user;\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const { i18n, t } = useTranslation();\r\n\r\n  const pendingApiCall = useApiProgress(\"delete\", `/api/1.0/posts/${id}`, true);\r\n\r\n  const onClickDelete = async () => {\r\n    await deletePost(id);\r\n    onDeletePost(id);\r\n  };\r\n\r\n  const onClickCancel = async () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const formatted = format(timestamp, i18n.language);\r\n  const isAdmin = useSelector((store) => store.admin);\r\n  const ownedByLoggedInUser = loggedInUser === username || isAdmin;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card p-1\">\r\n        <div className=\"d-flex\">\r\n          <ProfileImageWithDefault\r\n            Link={`/users/${username}`}\r\n            image={image}\r\n            width=\"32\"\r\n            height=\"32\"\r\n            className=\"rounded-circle m-1\"\r\n          />\r\n          <div className=\"flex-fill m-auto px-2\">\r\n            <Link\r\n              to={`/users/${username}`}\r\n              className=\"text-dark\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <div class=\"d-flex align-items-center\">\r\n                <h6 class=\"d-inline me-3\">\r\n                  <span>{displayName}</span>\r\n                  <span class=\"text-muted\"> @{username}</span>\r\n                </h6>\r\n\r\n                {admin && (\r\n                  <div class=\"d-inline\">\r\n                    <i class=\"material-icons text-secondary align-middle\">\r\n                      shield\r\n                    </i>\r\n                  </div>\r\n                )}\r\n\r\n                <i class=\"material-icons text-info\">\r\n                  verified\r\n                </i>\r\n\r\n                <span class=\"mx-2\"> · </span>\r\n                <span>{formatted}</span>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div class=\"dropdown\">\r\n            <button\r\n              class=\"btn btn-delete-link dropdown\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i class=\"fa-solid fa-ellipsis\"></i>\r\n            </button>\r\n            <ul class=\"dropdown-menu\">\r\n              {ownedByLoggedInUser ? (\r\n                <li>\r\n                  <a\r\n                    class=\"dropdown-item btn btn-delete-link\"\r\n                    onClick={() => setModalVisible(true)}\r\n                  >\r\n                    <i class=\"fa-regular fa-trash-can me-2\"></i>\r\n                    {t(\"Delete Post\")}\r\n                  </a>\r\n                </li>\r\n              ) : (\r\n                <li>\r\n                  <a class=\"dropdown-item btn btn-delete-link\">\r\n                    <i class=\"fa-solid fa-mug-hot me-2\"></i>\r\n                    {t(\"Social Cafe\")}\r\n                  </a>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"px-5 py-2\"> {content} </div>\r\n        {fileAttachment && (\r\n          <div className=\"ps-5\">\r\n            {fileAttachment.fileType.startsWith(\"image\") && (\r\n              <img\r\n                className=\"img-fluid img-thumbnail rounded\"\r\n                style={{ maxWidth: \"100%\", maxHeight: \"395px\" }}\r\n                src={\"images/attachment/\" + fileAttachment.name}\r\n                alt={content}\r\n              />\r\n            )}\r\n            {!fileAttachment.fileType.startsWith(\"image\") && (\r\n              <strong>\r\n                <em>Post has unkown attachment</em>\r\n              </strong>\r\n            )}\r\n          </div>\r\n        )}\r\n        <hr class=\"text-black-50 my-1\" />\r\n        <div className=\"d-flex justify-content-around pb-1 py-1\">\r\n          <i class=\"fa-regular fa-comment\"></i>\r\n          <i class=\"fa-solid fa-retweet\"></i>\r\n          <i class=\"fa-regular fa-heart\"></i>\r\n          <i class=\"fa-regular fa-bookmark\"></i>\r\n          <i class=\"fa-regular fa-share-from-square\"></i>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        visible={modalVisible}\r\n        title={t(\"Delete Post\")}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDelete}\r\n        message={\r\n          <div>\r\n            <div>\r\n              <strong>{t(\"Are you sure to delete Post?\")}</strong>\r\n            </div>\r\n            <span>{content}</span>\r\n          </div>\r\n        }\r\n        pendingApiCall={pendingApiCall}\r\n        okButton={t(\"Delete Post\")}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostView;\r\n","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Sidebar.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Sidebar2.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\AutoUploadImage.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\components\\Modal.js",[],[],"C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\pages\\VerificationRequestsPage.js",["407"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getVerificationRequests,\r\n  approveVerificationRequest,\r\n  rejectVerificationRequest,\r\n} from \"../api/apiCalls\";\r\n\r\nconst VerificationRequestsPage = () => {\r\n  const [verificationRequests, setVerificationRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    loadVerificationRequests();\r\n  }, []);\r\n\r\n  const loadVerificationRequests = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getVerificationRequests();\r\n      setVerificationRequests(response.data);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error.message || t(\"Error loading verification requests.\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async (requestId) => {\r\n    setLoading(true);\r\n    try {\r\n      await approveVerificationRequest(requestId);\r\n      setError(null);\r\n      loadVerificationRequests();\r\n    } catch (error) {\r\n      setError(error.message || t(\"Error approving verification request.\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReject = async (requestId) => {\r\n    setLoading(true);\r\n    try {\r\n      await rejectVerificationRequest(requestId);\r\n      setError(null);\r\n      loadVerificationRequests();\r\n    } catch (error) {\r\n      setError(error.message || t(\"Error rejecting verification request.\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{t(\"Unverified User Applications\")}</h2>\r\n      {loading && <div className=\"text-center\">{t(\"Loading...\")}</div>}\r\n      {error && <div className=\"text-center text-danger\">{error}</div>}\r\n      {!loading && !error && (\r\n        <table className=\"table table-striped\">\r\n          <thead>{/* ... (tablo başlıkları) */}</thead>\r\n          <tbody>\r\n            {verificationRequests.map((request) => (\r\n              <tr key={request.id}>\r\n                <td>{request.user.username}</td>\r\n                <td>{request.user.displayName}</td>\r\n                <td>{request.reason}</td>\r\n                <td>\r\n                  {request.attachment ? (\r\n                    <a\r\n                      href={`images/attachment/${request.attachment}`}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {t(\"View Attachment\")}\r\n                    </a>\r\n                  ) : (\r\n                    t(\"No Attachment\")\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-success me-2\"\r\n                    onClick={() => handleApprove(request.id)}\r\n                  >\r\n                    {t(\"Approve\")}\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => handleReject(request.id)}\r\n                  >\r\n                    {t(\"Reject\")}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationRequestsPage;\r\n","C:\\Users\\Ferhat\\ws-project\\wsfrontend\\src\\i18n.js",["408"],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\index.js",["409"],[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\i18n.js",["410"],[],"import React, {  useEffect } from \"react\";\r\nimport i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport { register } from \"timeago.js\";\r\nimport { fetchTranslationFromAPI } from \"../src/api/apiCalls\"; \r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: {}, \r\n  fallbackLng: \"en\",\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n  keySeperator: false,\r\n  interpolation: {\r\n    escapeValue: false,\r\n    formatSeperator: \",\",\r\n  },\r\n  react: {\r\n    wait: true,\r\n  },\r\n});\r\n\r\nconst timeagoTR = (number, index) => {\r\n  return [\r\n    [\"az önce\", \"şimdi\"],\r\n    [\"%s saniye önce\", \"%s saniye içinde\"],\r\n    [\"1 dakika önce\", \"1 dakika içinde\"],\r\n    [\"%s dakika önce\", \"%s dakika içinde\"],\r\n    [\"1 saat önce\", \"1 saat içinde\"],\r\n    [\"%s saat önce\", \"%s saat içinde\"],\r\n    [\"1 gün önce\", \"1 gün içinde\"],\r\n    [\"%s gün önce\", \"%s gün içinde\"],\r\n    [\"1 hafta önce\", \"1 hafta içinde\"],\r\n    [\"%s hafta önce\", \"%s hafta içinde\"],\r\n    [\"1 ay önce\", \"1 ay içinde\"],\r\n    [\"%s ay önce\", \"%s ay içinde\"],\r\n    [\"1 yıl önce\", \"1 yıl içinde\"],\r\n    [\"%s yıl önce\", \"%s yıl içinde\"],\r\n  ][index];\r\n};\r\n\r\nregister(\"tr\", timeagoTR);\r\nfunction I18nProvider() {\r\n  useEffect(() => {\r\n    loadTranslations(\"en\");\r\n  }, []);\r\n\r\n  async function loadTranslations(language) {\r\n    const translations = await fetchTranslationFromAPI(language);\r\n    i18n.addResourceBundle(language, \"translations\", translations, true, true);\r\n  }\r\n\r\n}\r\n\r\nexport default I18nProvider;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\container\\App.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\redux\\configureStore.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\shared\\ApiProgress.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\container\\Footer.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\redux\\authReducer.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\container\\TopBar.js",["411"],[],"import React from \"react\";\r\nimport LanguageSelector from \"../components/LanguageSelector\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutSucces } from \"../redux/authActions\";\r\nimport ProfileImageWithDefault from \"../components/ProfileImageWithDefault\";\r\nimport \"../assets/font.css\";\r\nimport VerifiedBadge from \"../components/VerifiedBadge\";\r\n\r\nconst TopBar = (props) => {\r\n  const { t } = useTranslation();\r\n\r\n  const { username, isLoggedIn, displayName, image,admin,verified } = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n    username: store.username,\r\n    displayName: store.displayName,\r\n    image: store.image,\r\n    admin:store.admin,\r\n    verified: store.verified\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogoutSuccess = () => {\r\n    dispatch(logoutSucces());\r\n  };\r\n\r\n  let links = (\r\n    <div className=\"ms-auto\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/\">\r\n            <i className=\"fa-solid fa-house me-1\"></i>\r\n            {t(\"Home Page\")}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            <i className=\"fa-solid fa-right-to-bracket me-1\"></i>\r\n            {t(\"Login\")}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/signup\">\r\n            <i className=\"fa-solid fa-user-plus me-1\"></i>\r\n            {t(\"Sign Up\")}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <LanguageSelector />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n  if (isLoggedIn) {\r\n    links = (\r\n      <div className=\"ms-auto\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link d-flex\" to=\"/\">\r\n              <i className=\"material-icons text-secondary me-1\">home</i>\r\n              {t(\"Home Page\")}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <div className=\"nav-link d-flex\" style={{ cursor: \"pointer\" }}>\r\n              <Link\r\n                to={\"/users/\" + username}\r\n                className=\"d-flex text-dark text-dark\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <ProfileImageWithDefault\r\n                  image={image}\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  className=\"rounded-circle me-1\"\r\n                />\r\n                <span>{displayName}</span>\r\n                {verified && <VerifiedBadge isAdmin={admin}/>}\r\n              </Link>\r\n            </div>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link d-flex\" to={\"/users/\" + username}>\r\n              <i className=\"material-icons text-info  me-1\">person</i>\r\n              {t(\"My Profile\")}\r\n            </Link>\r\n          </li> */}\r\n          <li className=\"nav-item\" onClick={onLogoutSuccess}>\r\n            <Link className=\"nav-link d-flex\" to=\"/login\">\r\n              <i className=\"material-icons text-secondary me-1\">logout</i>\r\n              {t(\"Logout\")}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item d-flex align-items-center\">\r\n            <LanguageSelector />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"shadow-sm bg-light\">\r\n      <nav className=\"navbar navbar-light container navbar-expand\">\r\n        <div className=\"d-flex d-inline align-items-center\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            <img src={logo} width=\"65\" alt=\"Hoaxify logo\" />\r\n            <a className=\"navbar-brand ms-2\" style={{ fontFamily: \"Pacifico\" }}>\r\n              Social Cafe{\" \"}\r\n            </a>\r\n          </Link>\r\n          \r\n        </div>\r\n        <em className=\"navbar-text ms-auto\">\r\n            {t(\"Share your coffee, explore the world!\")}\r\n          </em>\r\n        {links}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\api\\apiCalls.js",["412"],[],"import axios from \"axios\";\r\n\r\nexport const signup = (body) => {\r\n  return axios.post(\"/api/1.0/users\", body);\r\n};\r\n\r\nexport const login = (creds) => {\r\n  return axios.post(\"/api/1.0/auth\", creds);\r\n};\r\n\r\nexport const logout = () => {\r\n  return axios.post(\"/api/1.0/logout\");\r\n};\r\n\r\nexport const changeLanguage = (language) => {\r\n  axios.defaults.headers[\"accept-language\"] = language;\r\n};\r\n\r\nexport const getUsers = (page = 0, size = 10) => {\r\n  return axios.get(`/api/1.0/users?page=${page}&size=${size}`);\r\n};\r\n\r\nexport const setAuthorizationHeader = ({ isLoggedIn, token }) => {\r\n  if (isLoggedIn) {\r\n    const authorizationHeader = `Bearer ${token}`;\r\n    axios.defaults.headers[\"Authorization\"] = authorizationHeader;\r\n  } else {\r\n    delete axios.defaults.headers[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport const getUser = (username) => {\r\n  return axios.get(`/api/1.0/users/${username}`);\r\n};\r\n\r\nexport const updateUser = (username, body) => {\r\n  return axios.put(`/api/1.0/users/${username}`, body);\r\n};\r\n\r\nexport const postIt = (post) => {\r\n  return axios.post(\"/api/1.0/posts\", post);\r\n};\r\n\r\nexport const getPosts = (username, page = 0) => {\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/posts?page=`\r\n    : \"/api/1.0/posts?page=\";\r\n  return axios.get(path + page);\r\n};\r\n\r\nexport const getOldPosts = (id, username) => {\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/posts/${id}`\r\n    : `/api/1.0/posts/${id}`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const getNewPostCount = (id, username) => {\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/posts/${id}?count=true`\r\n    : `/api/1.0/posts/${id}?count=true`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const getNewPosts = (id, username) => {\r\n  const path = username\r\n    ? `/api/1.0/users/${username}/posts/${id}?direction=after`\r\n    : `/api/1.0/posts/${id}?direction=after`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const postPostAttachment = (attachment) => {\r\n  return axios.post(\"/api/1.0/post-attachments\", attachment);\r\n};\r\n\r\nexport const deletePost = (id) => {\r\n  return axios.delete(`/api/1.0/posts/${id}`);\r\n};\r\n\r\nexport const deleteUser = (username) => {\r\n  return axios.delete(`/api/1.0/users/${username}`);\r\n};\r\n\r\nexport const getVerificationRequests = () => {\r\n  return axios.get(\"/api/1.0/verifications/applications\");\r\n};\r\nexport const createVerificationRequest = async (username, requestData) => {\r\n  try {\r\n    const response = await axios.post(`/api/1.0/verifications/create/${username}`, requestData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const approveVerificationRequest = (requestId) => {\r\n  return axios.post(`/api/1.0/verifications/${requestId}/approve`);\r\n};\r\n\r\nexport const rejectVerificationRequest = (requestId) => {\r\n  return axios.post(`/api/1.0/verifications/${requestId}/reject`);\r\n};\r\nexport const unVerifyUser = (username) => {\r\n  return axios.post(`/api/1.0/verifications/${username}/unverify`); \r\n};\r\n\r\n\r\nexport const fetchTranslationFromAPI = async (language) => {\r\n  try {\r\n    const response = await axios.get(`/api/i18n`, {\r\n      params: {\r\n        language: language,\r\n      },\r\n    });\r\n    return response.data; \r\n  } catch (error) {\r\n    console.error(\"Error fetching translations:\", error);\r\n    return {}; \r\n  }\r\n};\r\n\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n  const uint8Array = new Uint8Array(arrayBuffer);\r\n  let binary = '';\r\n  uint8Array.forEach((byte) => {\r\n    binary += String.fromCharCode(byte);\r\n  });\r\n  return btoa(binary);\r\n}\r\n\r\nexport const getProtectedImage = async (filename) => {\r\n  try {\r\n    const response = await axios.get(`/images/verified/${filename}`, {\r\n      responseType: \"arraybuffer\",\r\n    });\r\n\r\n    if (response.status === 200 && response.data instanceof ArrayBuffer) {\r\n      return response; // Sadece yanıtı döndürüyoruz, veriyi ayrıca işlemeye gerek yok\r\n    } else {\r\n      throw new Error(\"Geçersiz yanıt verisi\");\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const likePostApi = (postId,username) => {\r\n  return axios.post(`/api/1.0/likes/like/${postId}/${username}`);\r\n};\r\n\r\nexport const unlikePostApi = (postId,username) => {\r\n  return axios.post(`/api/1.0/likes/unlike/${postId}/${username}`);\r\n};\r\n\r\nexport const fetchLikeCount = (postId) => {\r\n  return axios.get(`/api/1.0/likes/count/${postId}`);;\r\n};\r\n\r\nexport const getLikedPosts = async (username, page = 0) => {\r\n  const path = username\r\n    ? `/api/1.0/likes/user/${username}/liked-posts?page=`\r\n    : \"/api/1.0/likes/user/liked-posts?page=\";\r\n  try {\r\n    const response = await axios.get(path + page);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\nexport const checkLikeStatus = async (postId, username) => {\r\n  try {\r\n    const response = await axios.get(`/api/1.0/likes/check?postId=${postId}&username=${username}`);\r\n    return response.data; // True veya false değeri dönecektir\r\n  } catch (error) {\r\n    console.error(\"Error while checking like status:\", error);\r\n    throw error;\r\n  }\r\n};","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\LoginPage.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\HomePage.js",["413","414"],[],"import React from \"react\";\r\nimport maintenance from \"../assets/maintenance.jpg\";\r\nimport UserList from \"../components/UserList\";\r\nimport PostSubmit from \"../components/PostSubmit\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostFeed from \"../components/PostFeed\";\r\nimport logo from \"../assets/logo.png\";\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\nconst HomePage = () => {\r\n  const { isLoggedIn } = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n  }));\r\n\r\n  return (\r\n    <div className=\"container mt-3 pb-1\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-2 col-md-2 mb-3\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-lg-7 col-md-7 mb-3\">\r\n          <div className=\"mb-0\">{isLoggedIn && <PostSubmit />}</div>\r\n          <PostFeed />\r\n        </div>\r\n        <div className=\"col-lg-3 col-md-3 mb-3\">\r\n          <UserList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\UserSignupPage.js",["415"],[],"import React, { useState } from \"react\";\r\nimport { signup } from \"../api/apiCalls\";\r\nimport Input from \"../components/Input\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport background from \"../assets/2.jpg\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signupHandler } from \"../redux/authActions\";\r\n\r\nconst UserSignupPage = (props) => {\r\n  const [form, setForm] = useState({\r\n    username: null,\r\n    displayName: null,\r\n    password: null,\r\n    passwordRepeat: null,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const dispatch = useDispatch();\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const errorsCopy = { ...errors };\r\n    errorsCopy[name] = undefined;\r\n    setErrors(errorsCopy);\r\n    const formCopy = { ...form };\r\n    formCopy[name] = value;\r\n    setForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n  };\r\n\r\n  const onClickSignup = async (event) => {\r\n    event.preventDefault();\r\n    const { history } = props;\r\n    const { push } = history;\r\n    const { username, displayName, password } = form;\r\n    const body = {\r\n      username,\r\n      displayName,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      const response = await dispatch(signupHandler(body));\r\n      if (response.data) {\r\n        push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n  const { t } = useTranslation();\r\n\r\n  const {\r\n    username: usernameError,\r\n    displayName: displayNameError,\r\n    password: passwordError,\r\n  } = errors;\r\n  const pendingApiCallSignup = useApiProgress(\"post\", \"/api/1.0/users\");\r\n  const pendingApiCallLogin = useApiProgress(\"post\", \"/api/1.0/auth\");\r\n  const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n  let passwordRepeatError;\r\n  if (form.password !== form.passwordRepeat) {\r\n    passwordRepeatError = t(\"Password mismatch\");\r\n  }\r\n  return (\r\n    <div\r\n      className=\"d-flex align-items-center justify-content-center\"\r\n      style={{\r\n        backgroundImage: `url(${background})`,\r\n        backgroundSize: \"cover\",\r\n        minHeight: \"80vh\",\r\n        backgroundColor: \"rgba(192, 192, 192, 1)\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"container p-4\"\r\n        style={{\r\n          backgroundColor: \"rgba(255, 255, 255, 0.7)\",\r\n          borderRadius: \"20px\",\r\n          maxWidth: \"500px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <form>\r\n          <h1 className=\"text-center mb-3\">{t(\"Sign Up\")}</h1>\r\n          <Input\r\n            name=\"username\"\r\n            label={t(\"Username\")}\r\n            error={usernameError}\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            name=\"displayName\"\r\n            label={t(\"Display Name\")}\r\n            error={displayNameError}\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            label={t(\"Password\")}\r\n            type=\"password\"\r\n            error={passwordError}\r\n            onChange={onChange}\r\n          />\r\n          <Input\r\n            name=\"passwordRepeat\"\r\n            label={t(\"Password Repeat\")}\r\n            type=\"password\"\r\n            error={passwordRepeatError}\r\n            onChange={onChange}\r\n          />\r\n          <div className=\"text-center mt-3\">\r\n            <ButtonWithProgress\r\n              onClick={onClickSignup}\r\n              disabled={pendingApiCall || passwordRepeatError !== undefined}\r\n              pendingApiCall={pendingApiCall}\r\n              text={t(\"Sign Up\")}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSignupPage;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\UserPage.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\pages\\VerificationRequestsPage.js",["416","417"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  getVerificationRequests,\r\n  approveVerificationRequest,\r\n  rejectVerificationRequest,\r\n  unVerifyUser,\r\n} from \"../api/apiCalls\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Modal from \"../components/Modal\";\r\nimport { getProtectedImage } from \"../api/apiCalls\";\r\n\r\nconst VerificationRequestsPage = () => {\r\n  const [verificationRequests, setVerificationRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { t } = useTranslation();\r\n  const [selectedRequest, setSelectedRequest] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showFileModal, setShowFileModal] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [fileData, setFileData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // İlk yükleme ve belirli aralıklarla verileri yenile\r\n    const interval = setInterval(() => {\r\n      loadVerificationRequests();\r\n    }, 10000); // 10 saniyede bir güncelleme yap\r\n    return () => clearInterval(interval); // Komponent ayrıldığında interval'i temizle\r\n  }, []);\r\n\r\n  function arrayBufferToBase64(arrayBuffer) {\r\n    let binary = \"\";\r\n    const bytes = new Uint8Array(arrayBuffer);\r\n    const len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return btoa(binary);\r\n  }\r\n\r\n  const showDetails = (request) => {\r\n    setSelectedRequest(request);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const hideDetails = () => {\r\n    setShowModal(false);\r\n    setSelectedRequest(null);\r\n  };\r\n\r\n  const showFile = (fileUrl, request) => {\r\n    setSelectedRequest(request);\r\n    setSelectedFile(fileUrl);\r\n    handleFileClick(fileUrl);\r\n  };\r\n\r\n  const hideFileModal = () => {\r\n    setFileData(null);\r\n    setSelectedFile(null);\r\n    setShowFileModal(false);\r\n  };\r\n\r\n  const handleFileClick = async (fileUrl) => {\r\n    try {\r\n      const response = await getProtectedImage(fileUrl);\r\n      setFileData(response.data);\r\n      setShowFileModal(true);\r\n    } catch (error) {\r\n      console.error(\"Dosya alınırken hata oluştu:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadVerificationRequests();\r\n  }, []);\r\n\r\n  const loadVerificationRequests = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getVerificationRequests();\r\n      setVerificationRequests(response.data);\r\n      setError(null);\r\n    } catch (error) {\r\n      setError(error.message || t(\"Error loading verification requests.\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleApprove = async (requestId) => {\r\n    setLoading(true);\r\n    try {\r\n      await approveVerificationRequest(requestId);\r\n      setError(null);\r\n      loadVerificationRequests();\r\n    } catch (error) {\r\n      setError(error.message || t(\"Error approving verification request.\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReject = async (requestId) => {\r\n    setLoading(true);\r\n    try {\r\n      await rejectVerificationRequest(requestId);\r\n      setError(null);\r\n      loadVerificationRequests();\r\n    } catch (error) {\r\n      setError(error.message || t(\"Error rejecting verification request.\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUnverify = async (userId) => {\r\n    setLoading(true);\r\n    try {\r\n      await unVerifyUser(userId);\r\n      setError(null);\r\n      loadVerificationRequests();\r\n    } catch (error) {\r\n      setError(error.message || t(\"Error unverifying user.\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-2 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-lg-10 col-md-10\">\r\n          <h4 className=\"m-2 text-center\">\r\n            {t(\"Unverified User Applications\")}\r\n          </h4>\r\n          {loading && <div className=\"text-center\">{t(\"Loading...\")}</div>}\r\n          {error && <div className=\"text-center text-danger\">{error}</div>}\r\n          {!loading && !error && (\r\n            <table className=\"table table-striped table-bordered table-hover\">\r\n              <caption>{t(\"Unverified User Applications\")}</caption>\r\n              <thead>\r\n                <tr className=\"table-primary\">\r\n                  <th>{t(\"Request ID\")}</th>\r\n                  {/* <th>{t(\"User ID\")}</th> */}\r\n                  <th>{t(\"Username\")}</th>\r\n                  <th>{t(\"Reason\")}</th>\r\n                  <th>{t(\"Attachment\")}</th>\r\n                  <th>{t(\"Status\")}</th>\r\n                  <th>{t(\"Actions\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {verificationRequests.map((request) => (\r\n                  <tr key={request.id}>\r\n                    <td>{request.id}</td>\r\n                    {/* <td>{request.userId}</td> */}\r\n                    <td>\r\n                      <a\r\n                        href={`/#/users/${request.username}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        style={{ textDecoration: \"none\" }}\r\n                      >\r\n                        {request.username}\r\n                      </a>\r\n                    </td>\r\n                    <td>\r\n                      {request.reason.length > 30\r\n                        ? `${request.reason.slice(0, 30)}...`\r\n                        : request.reason}\r\n                    </td>\r\n\r\n                    <td>\r\n                      {request.verified ? (\r\n                        <span className=\"text-success btn-status\">\r\n                          <b>{t(\"Verified\")}</b>\r\n                        </span>\r\n                      ) : (\r\n                        <span className=\"text-warning btn-status\">\r\n                          <b>{t(\"Unverified\")}</b>\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {request.attachment ? (\r\n                        <button\r\n                          className=\"btn btn-view\"\r\n                          onClick={() =>\r\n                            showFile(`${request.attachment}`, request)\r\n                          }\r\n                        >\r\n                          {t(\"View Attachment\")}\r\n                        </button>\r\n                      ) : (\r\n                        <button className=\"btn btn-view\">\r\n                          {t(\"No Attachment\")}\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"btn btn-info mx-2\"\r\n                        onClick={() => showDetails(request)}\r\n                      >\r\n                        {t(\"Details\")}\r\n                      </button>\r\n                      {request.verified ? (\r\n                        <button\r\n                          className=\"btn btn-warning me-2\"\r\n                          onClick={() => handleUnverify(request.userId)}\r\n                        >\r\n                          {t(\"Unverify\")}\r\n                        </button>\r\n                      ) : (\r\n                        <>\r\n                          <button\r\n                            className=\"btn btn-success me-2\"\r\n                            onClick={() => handleApprove(request.id)}\r\n                          >\r\n                            {t(\"Approve\")}\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => handleReject(request.id)}\r\n                          >\r\n                            {t(\"Reject\")}\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        visible={showModal}\r\n        onClickCancel={hideDetails}\r\n        message={selectedRequest && selectedRequest.reason}\r\n        onClickOk={hideDetails}\r\n        pendingApiCall={false}\r\n        title={t(\"Application Details\")}\r\n        okButton={t(\"OK\")}\r\n      />\r\n      {/* Dosya Modalı */}\r\n      <Modal\r\n        visible={showFileModal}\r\n        showCloseButton={true}\r\n        cancelButtonText={t(\"OK\")}\r\n        onClickCancel={hideFileModal}\r\n        onClickOk={hideFileModal}\r\n        pendingApiCall={false}\r\n        title={\r\n          selectedFile && selectedRequest\r\n            ? `${t(\"View Attachment\")}: ${selectedRequest.username}`\r\n            : \"\"\r\n        }\r\n      >\r\n        {fileData && (\r\n          <iframe\r\n            src={`data:application/pdf;base64,${arrayBufferToBase64(fileData)}`}\r\n            title=\"PDF Görüntüleyici\"\r\n            style={{ width: \"100%\", height: \"72vh\" }}\r\n          />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerificationRequestsPage;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\redux\\Constants.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\redux\\authActions.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Input.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\LanguageSelector.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\ProfileImageWithDefault.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\UserList.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\PostSubmit.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Sidebar.js",["418","419","420","421","422"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutSucces } from \"../redux/authActions\";\r\nimport ProfileImageWithDefault from \"../components/ProfileImageWithDefault\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport LanguageSelector from \"./LanguageSelector\";\r\n\r\nconst Sidebar = () => {\r\n  const { displayName, isLoggedIn, image, username } = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n    displayName: store.displayName,\r\n    image: store.image,\r\n    username: store.username,\r\n  }));\r\n\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const onLogoutSuccess = () => {\r\n    dispatch(logoutSucces());\r\n  };\r\n  const history = useHistory();\r\n  const isAdmin = useSelector((store) => store.admin);\r\n\r\n  const getPage = async () => {\r\n    try {\r\n      history.push(\"/verifications/applications\");\r\n    } catch (error) {\r\n      console.error(\"Error getting verification requests:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"position-sticky top-0 start-0 bottom-1 bg-white\">\r\n      {isLoggedIn && (\r\n        <div className=\"\">\r\n          <div className=\"card-body\">\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item list-group-item-action\">\r\n                <Link\r\n                  to=\"/\"\r\n                  className=\"d-flex align-items-center text-dark\"\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <i className=\"fas fa-home fa-lg me-2\"></i>\r\n                  {t(\"Home\")}\r\n                </Link>\r\n              </li>\r\n              <li className=\"list-group-item list-group-item-action\">\r\n                <Link\r\n                  to={\"/users/\" + username}\r\n                  className=\"d-flex align-items-center text-dark\"\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <i className=\"fas fa-user fa-lg me-2\"></i>\r\n                  {t(\"Profile\")}\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-magnifying-glass fa-lg me-1\"></i> {t(\"Explore\")}\r\n              </li>\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-bell fa-lg me-2 text-dark\"></i>{\" \"}\r\n                {t(\"Notifications\")}\r\n              </li>\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-envelope fa-lg me-2 text-dark\"></i>{\" \"}\r\n                {t(\"Messages\")}\r\n              </li>\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-user-group fa-lg me-2\"></i> {t(\"Friends\")}\r\n              </li>\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-bookmark fa-lg me-2 text-dark\"></i>{\" \"}\r\n                {t(\"Bookmarks\")}\r\n              </li>\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-circle-check fa-lg me-auto text-dark\" onClick={()=>{}}></i>{\" \"}\r\n                {t(\"Verified User\")}\r\n              </li>\r\n              {isAdmin && (\r\n                <li\r\n                  className=\"list-group-item list-group-item-action\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={getPage}\r\n                >\r\n                  <i className=\"fas fa-square-check fa-lg text-dark\" ></i>{\" \"}\r\n                  {t(\"Verified User Application\")}\r\n                </li>\r\n              )}\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-circle-info fa-lg me-2 text-dark\"></i>{\" \"}\r\n                {t(\"Help\")}\r\n              </li>\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                <i className=\"fas fa-cog fa-lg me-2\"></i> {t(\"Settings\")}\r\n              </li>\r\n              <li\r\n                className=\"list-group-item list-group-item-action\"\r\n                onClick={onLogoutSuccess}\r\n              >\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"d-flex align-items-center text-dark\"\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <i class=\"fa-solid fa-right-from-bracket me-2 text-dark\"></i>\r\n                  {t(\"Logout\")}\r\n                </Link>\r\n              </li>\r\n              <li className=\"list-group-item list-group-item-action\"  style={{ cursor: \"pointer\" }}>\r\n                <em className=\"text-secondary\">\r\n                  {t(\"Share your coffee, explore the world!\")}\r\n                </em>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-center\">\r\n                <LanguageSelector />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Sidebar2.js",["423","424","425","426"],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\PostFeed.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\ProfileCard.js",["427","428"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Input from \"../components/Input\";\r\nimport {\r\n  updateUser,\r\n  deleteUser,\r\n  createVerificationRequest,\r\n} from \"../api/apiCalls\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\r\nimport { updateSuccess, logoutSucces } from \"../redux/authActions\";\r\nimport Modal from \"../components/Modal\";\r\nimport VerifiedBadge from \"./VerifiedBadge\";\r\n\r\nconst ProfileCard = (props) => {\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const { username: loggedInUsername } = useSelector((store) => ({\r\n    username: store.username,\r\n  }));\r\n  const routeParams = useParams();\r\n  const pathUsername = routeParams.username;\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [verifiedRequest, setVerifiedRequest] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id, username, displayName, image, admin, verified } = user;\r\n  const isAdmin = useSelector((store) => store.admin);\r\n\r\n  const { displayName: displayNameError, image: imageError } = validationErrors;\r\n\r\n  const [reason, setReason] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    setEditable(pathUsername === loggedInUsername);\r\n  }, [pathUsername, loggedInUsername]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors((previousValidationErrors) => ({\r\n      ...previousValidationErrors,\r\n      displayName: undefined,\r\n    }));\r\n  }, [updatedDisplayName]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors((previousValidationErrors) => ({\r\n      ...previousValidationErrors,\r\n      image: undefined,\r\n    }));\r\n  }, [newImage]);\r\n\r\n  const pendingApiCallDeleteUser = useApiProgress(\r\n    \"delete\",\r\n    `/api/1.0/users/${username}`,\r\n    true\r\n  );\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n\r\n  const onClickSave = async () => {\r\n    let image;\r\n    if (newImage) {\r\n      image = newImage.split(\",\")[1];\r\n    }\r\n    const body = {\r\n      displayName: updatedDisplayName,\r\n      image,\r\n    };\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data);\r\n      dispatch(updateSuccess(response.data));\r\n    } catch (error) {\r\n      setValidationErrors(error.response.data.validationErrors);\r\n    }\r\n  };\r\n\r\n  const pendingApiCall = useApiProgress(\"put\", \"/api/1.0/users/\" + username);\r\n\r\n  const onChangeFile = (event) => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onClickDeleteUser = async () => {\r\n    await deleteUser(username);\r\n    setModalVisible(false);\r\n    {\r\n      !isAdmin && dispatch(logoutSucces());\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n\r\n\r\n  const handleCreateRequest = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"reason\", reason);\r\n      formData.append(\"multipartFile\", attachment);\r\n\r\n      await createVerificationRequest(username, formData);\r\n      setVerifiedRequest(false);\r\n      console.log(\"Verification request created successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error creating verification request:\", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (!verifiedRequest) {\r\n      setReason(\"\");\r\n    } else {\r\n      setReason(reason);\r\n    }\r\n  }, [verifiedRequest, reason]);\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          tempImage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {!inEditMode && !verifiedRequest && (\r\n          <>\r\n            <h3>\r\n              <span style={{ padding: \"10px\" }}>{displayName}</span>\r\n              <span className=\"text-muted\">\r\n                <br /> @{username}\r\n              </span>\r\n              {verified && <VerifiedBadge isAdmin={admin} />}\r\n            </h3>\r\n            {(editable || isAdmin) && (\r\n              <>\r\n                {editable && <button\r\n                  className=\"btn btn-success d-inline-flex\"\r\n                  onClick={() => setInEditMode(true)}\r\n                >\r\n                  <i class=\"fa-regular fa-pen-to-square me-1 mt-1\"></i>\r\n                  {t(\"Edit\")}\r\n                </button>}\r\n                <div className=\"pt-2\">\r\n                  <button\r\n                    className=\"btn btn-danger d-inline-flex\"\r\n                    onClick={() => setModalVisible(true)}\r\n                  >\r\n                    <i className=\"material-icons me-2\">person_remove</i>\r\n                    {t(\"Delete Account\")}\r\n                  </button>\r\n                </div>\r\n                {(!verified || isAdmin) && (\r\n                  <div className=\"pt-2\">\r\n                    <button\r\n                      className=\"btn btn-primary d-inline-flex\"\r\n                      onClick={() => setVerifiedRequest(true)}\r\n                    >\r\n                      <i className=\"material-icons me-2\">verified</i>\r\n                      {t(\"Verified user request\")}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t(\"Change Display Name\")}\r\n              defaultValue={displayName}\r\n              onChange={(event) => {\r\n                setUpdatedDisplayName(event.target.value);\r\n              }}\r\n              error={displayNameError}\r\n            />\r\n            <Input\r\n              type=\"file\"\r\n              label={t(\"Change Profile Photo\")}\r\n              onChange={onChangeFile}\r\n              error={imageError}\r\n            />\r\n            <div className=\"mt-2\">\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex mr-2\"\r\n                onClick={onClickSave}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t(\"Save\")}\r\n                  </>\r\n                }\r\n              />\r\n              <button\r\n                className=\"btn btn-light d-inline-flex ml-1\"\r\n                onClick={() => setInEditMode(false)}\r\n                disabled={pendingApiCall}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n                {t(\"Cancel\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* VerifiedRequest Form */}\r\n        {verifiedRequest && (\r\n          <div className=\"mt-2\">\r\n            <textarea\r\n              className={`form-control ${reason === \"\" ? \"is-invalid\" : \"\"}`}\r\n              value={reason}\r\n              placeholder={t(\r\n                \"Reason to be verified: For example, I am a well-known person, I want my account verified.\"\r\n              )}\r\n              onChange={(event) => setReason(event.target.value)}\r\n              style={{ height: \"100px\" }}\r\n              required\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n              {reason === \"\" && t(\"Please provide a reason for verification.\")}\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"file\"\r\n                  className={`form-control ${\r\n                    attachment === null ||\r\n                    (attachment && attachment.type !== \"application/pdf\")\r\n                      ? \"is-invalid\"\r\n                      : \"\"\r\n                  }`}\r\n                  onChange={(event) => {\r\n                    const file = event.target.files[0];\r\n                    if (file) {\r\n                      if (file.type === \"application/pdf\") {\r\n                        setAttachment(file);\r\n                      } else {\r\n                        setAttachment(null);\r\n                      }\r\n                    }\r\n                  }}\r\n                  accept=\".pdf\"\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                {attachment === null\r\n                  ? t(\"Please select a PDF file.\")\r\n                  : attachment.type !== \"application/pdf\" &&\r\n                    t(\"Please select a valid PDF file.\")}\r\n              </div>\r\n                <label className=\"input-group-text\" htmlFor=\"inputGroupFile\">\r\n                  {t(\"Only PDF File\")}\r\n                </label>\r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <ButtonWithProgress\r\n                className=\"btn btn-info m-1\"\r\n                onClick={handleCreateRequest}\r\n                disabled={\r\n                  pendingApiCall || reason === \"\" || attachment === null\r\n                }\r\n                pendingApiCall={pendingApiCall}\r\n                icon=\"fa-regular fa-circle-check me-2 mr-2\"\r\n                text={<>{t(\"Send Request\")}</>}\r\n              />\r\n              <button\r\n                className=\"btn btn-light d-inline-flex ml-1\"\r\n                onClick={() => setVerifiedRequest(false)}\r\n                disabled={pendingApiCall}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n                {t(\"Cancel\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* Admin Alert */}\r\n        <h5>\r\n          {admin && (\r\n            <div class=\"alert alert-secondary d-inline-block m-2\" role=\"alert\">\r\n              <div className=\"ms-auto\">\r\n                {t(\"Be Careful This is Admin\")}\r\n                <i class=\"fa-regular fa-id-card m-1\"></i>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </h5>\r\n      </div>\r\n      <Modal\r\n        cancelButtonText={t(\"Cancel\")}\r\n        visible={modalVisible}\r\n        title={t(\"Delete Account\")}\r\n        okButton={t(\"Delete Account\")}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDeleteUser}\r\n        message={t(\"Are you sure to delete your account?\")}\r\n        pendingApiCall={pendingApiCallDeleteUser}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Spinner.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\UserListItem.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\AutoUploadImage.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\PostView.js",["429","430"],[],"import React,{useEffect} from \"react\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"timeago.js\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { deletePost,fetchLikeCount, checkLikeStatus } from \"../api/apiCalls\";\r\nimport { useState } from \"react\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport Modal from \"../components/Modal\";\r\nimport VerifiedBadge from \"./VerifiedBadge\";\r\nimport { likePost, unlikePost } from \"../redux/authActions\"; // Eklenen satır\r\nconst PostView = (props) => {\r\n  const loggedInUser = useSelector((store) => store.username);\r\n  const { post, onDeletePost } = props;\r\n  const { user, content, timestamp, fileAttachment, id } = post;\r\n  const { username, displayName, image, admin, verified } = user;\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const { i18n, t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const pendingApiCall = useApiProgress(\"delete\", `/api/1.0/posts/${id}`, true);\r\n  const onClickDelete = async () => {\r\n    await deletePost(id);\r\n    onDeletePost(id);\r\n  };\r\n  const onClickCancel = async () => {\r\n    setModalVisible(false);\r\n  };\r\n  const formatted = format(timestamp, i18n.language);\r\n  const isAdmin = useSelector((store) => store.admin);\r\n  const ownedByLoggedInUser = loggedInUser === username || isAdmin;\r\n  const [liked, setLiked] = useState();\r\n  const [likeCount, setLikeCount] = useState(0);\r\n  useEffect(() => {\r\n    const loadLikeStatus = async () => {\r\n      try {\r\n        const response = await checkLikeStatus(id, loggedInUser);\r\n        setLiked(response);\r\n      } catch (error) {\r\n        console.error(\"Error while loading like status:\", error);\r\n      }\r\n    };\r\n    loadLikeStatus();\r\n  }, [id, loggedInUser]);\r\n\r\n\r\n\r\n\r\n  const handleLikeClick = async () => {\r\n    if(loggedInUser){\r\n      try {\r\n        if (liked) {\r\n          console.log()\r\n          await dispatch(unlikePost(id, loggedInUser));\r\n        } else {\r\n          await dispatch(likePost(id, loggedInUser));\r\n        }\r\n        setLiked(!liked);\r\n      } catch (error) {\r\n        console.error(\"Error while liking/unliking the post:\", error);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const fetchLikeCountGet = async () => {\r\n      try {\r\n        const response = await fetchLikeCount(id);\r\n        setLikeCount(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching like count:\", error);\r\n      }\r\n    };\r\n    fetchLikeCountGet();\r\n  }, [id, liked,loggedInUser]);\r\n  return (\r\n    <>\r\n      <div className=\"card p-1\">\r\n        <div className=\"d-flex\">\r\n          <Link to={`/users/${username}`}>\r\n            <ProfileImageWithDefault\r\n              Link={`/users/${username}`}\r\n              image={image}\r\n              width=\"32\"\r\n              height=\"32\"\r\n              className=\"rounded-circle m-1\"\r\n            />\r\n          </Link>\r\n          <div className=\"flex-fill m-auto px-2\">\r\n            <Link\r\n              to={`/users/${username}`}\r\n              className=\"text-dark\"\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <h6 className=\"d-inline\">\r\n                <span>{displayName}</span>\r\n                <span className=\"text-muted\"> @{username}</span>\r\n              </h6>\r\n            </Link>\r\n           \r\n            {verified && <VerifiedBadge isAdmin={admin} />}\r\n            <span class=\"mx-2\"> · </span>\r\n            <span>{formatted}</span>\r\n          </div>\r\n          <div class=\"dropdown\">\r\n            <button\r\n              class=\"btn btn-delete-link dropdown\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i class=\"fa-solid fa-ellipsis\"></i>\r\n            </button>\r\n            <ul class=\"dropdown-menu\">\r\n              {ownedByLoggedInUser ? (\r\n                <li>\r\n                  <a\r\n                    class=\"dropdown-item btn btn-delete-link\"\r\n                    onClick={() => setModalVisible(true)}\r\n                  >\r\n                    <i class=\"fa-regular fa-trash-can me-2\"></i>\r\n                    {t(\"Delete Post\")}\r\n                  </a>\r\n                </li>\r\n              ) : (\r\n                <li>\r\n                  <a class=\"dropdown-item btn btn-delete-link\">\r\n                    <i class=\"fa-solid fa-mug-hot me-2\"></i>\r\n                    {t(\"Social Cafe\")}\r\n                  </a>\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"px-5 py-2\"> {content} </div>\r\n        {fileAttachment && (\r\n          <div className=\"ps-5\">\r\n            {fileAttachment.fileType.startsWith(\"image\") && (\r\n              <img\r\n                className=\"img-fluid img-thumbnail rounded\"\r\n                style={{ maxWidth: \"100%\", maxHeight: \"450px\" }}\r\n                src={\"images/attachment/\" + fileAttachment.name}\r\n                alt={content}\r\n              />\r\n            )}\r\n            {!fileAttachment.fileType.startsWith(\"image\") && (\r\n              <strong>\r\n                <em>Post has unkown attachment</em>\r\n              </strong>\r\n            )}\r\n          </div>\r\n        )}\r\n        <hr class=\"text-black-50 my-1\" />\r\n        <div className=\"d-flex justify-content-around pb-1 py-1\">\r\n          <button className=\"btn btn-comment-link\">\r\n            <i class=\"fa-regular fa-comment\"></i>\r\n          </button>\r\n          <button className=\"btn btn-retweet-link\">\r\n            <i class=\"fa-solid fa-retweet\"></i>\r\n          </button>\r\n          <button className=\"btn btn-fav-link\" onClick={handleLikeClick}>\r\n            {liked ? (\r\n              <i className=\"fa-solid fa-heart text-danger\"></i>\r\n            ) : (\r\n              <i className=\"fa-regular fa-heart\"></i>\r\n            )}\r\n            <span className=\"ms-1\">\r\n              {likeCount} {t(\"Like\")}\r\n            </span>\r\n          </button>\r\n          <button className=\"btn btn-bookmark-link\">\r\n            <i class=\"fa-regular fa-bookmark\"></i>\r\n          </button>\r\n          <button className=\"btn btn-share-link\">\r\n            <i class=\"fa-regular fa-share-from-square\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        visible={modalVisible}\r\n        title={t(\"Delete Post\")}\r\n        onClickCancel={onClickCancel}\r\n        cancelButtonText={t(\"Cancel\")}\r\n        onClickOk={onClickDelete}\r\n        message={\r\n          <div>\r\n            <div>\r\n              <strong>{t(\"Are you sure to delete Post?\")}</strong>\r\n            </div>\r\n            <span>{content}</span>\r\n          </div>\r\n        }\r\n        pendingApiCall={pendingApiCall}\r\n        okButton={t(\"Delete Post\")}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostView;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\Modal.js",["431"],[],"import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\n\r\nconst Modal = (props) => {\r\n  const { visible, onClickCancel, message, onClickOk, pendingApiCall, title, okButton, cancelButtonText,showCloseButton } = props;\r\n  const { t } = useTranslation();\r\n\r\n  let className = 'modal fade';\r\n  if (visible) {\r\n    className += ' show d-block';\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={{ backgroundColor: '#000000b0' }}>\r\n      <div className=\"modal-dialog modal-lg\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h6 className=\"modal-title\">{title}</h6>\r\n            {showCloseButton && (\r\n              <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={onClickCancel}></button>\r\n            )}\r\n          </div>\r\n          <div className=\"modal-body text-start embed-responsive embed-responsive-16by9\">\r\n            {message}\r\n            {props.children}\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            {cancelButtonText && (\r\n              <button className=\"btn btn-secondary\" disabled={pendingApiCall} onClick={onClickCancel}>\r\n                {cancelButtonText}\r\n              </button>\r\n            )}\r\n            {okButton && (\r\n              <ButtonWithProgress\r\n                className=\"btn btn-danger\"\r\n                onClick={onClickOk}\r\n                pendingApiCall={pendingApiCall}\r\n                disabled={pendingApiCall}\r\n                text={okButton}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\VerifiedBadge.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\ButtonWithProgress.js",[],[],"C:\\Users\\Ferhat\\Social-Media-App-Project\\wsfrontend\\src\\components\\LikedPostFeed.js",[],[],{"ruleId":"432","severity":1,"message":"433","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":19},{"ruleId":"432","severity":1,"message":"436","line":2,"column":10,"nodeType":"434","messageId":"435","endLine":2,"endColumn":16},{"ruleId":"432","severity":1,"message":"437","line":43,"column":13,"nodeType":"434","messageId":"435","endLine":43,"endColumn":21},{"ruleId":"432","severity":1,"message":"438","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":11},{"ruleId":"432","severity":1,"message":"439","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":22},{"ruleId":"432","severity":1,"message":"437","line":47,"column":13,"nodeType":"434","messageId":"435","endLine":47,"endColumn":21},{"ruleId":"432","severity":1,"message":"440","line":5,"column":11,"nodeType":"434","messageId":"435","endLine":5,"endColumn":20},{"ruleId":"432","severity":1,"message":"441","line":2,"column":8,"nodeType":"434","messageId":"435","endLine":2,"endColumn":19},{"ruleId":"432","severity":1,"message":"442","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":12},{"ruleId":"432","severity":1,"message":"443","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":15},{"ruleId":"444","severity":1,"message":"445","line":99,"column":11,"nodeType":"446","endLine":99,"endColumn":44},{"ruleId":"432","severity":1,"message":"447","line":16,"column":10,"nodeType":"434","messageId":"435","endLine":16,"endColumn":14},{"ruleId":"432","severity":1,"message":"448","line":17,"column":8,"nodeType":"434","messageId":"435","endLine":17,"endColumn":32},{"ruleId":"449","severity":1,"message":"450","line":45,"column":6,"nodeType":"451","endLine":45,"endColumn":38,"suggestions":"452"},{"ruleId":"453","severity":1,"message":"454","line":118,"column":5,"nodeType":"455","messageId":"456","endLine":120,"endColumn":6},{"ruleId":"444","severity":1,"message":"445","line":88,"column":19,"nodeType":"446","endLine":91,"endColumn":20},{"ruleId":"444","severity":1,"message":"445","line":98,"column":19,"nodeType":"446","endLine":98,"endColumn":64},{"ruleId":"449","severity":1,"message":"457","line":17,"column":6,"nodeType":"451","endLine":17,"endColumn":8,"suggestions":"458"},{"ruleId":"432","severity":1,"message":"459","line":1,"column":8,"nodeType":"434","messageId":"435","endLine":1,"endColumn":13},{"ruleId":"432","severity":1,"message":"433","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":19},{"ruleId":"432","severity":1,"message":"459","line":1,"column":8,"nodeType":"434","messageId":"435","endLine":1,"endColumn":13},{"ruleId":"444","severity":1,"message":"445","line":112,"column":13,"nodeType":"446","endLine":112,"endColumn":81},{"ruleId":"432","severity":1,"message":"460","line":127,"column":10,"nodeType":"434","messageId":"435","endLine":127,"endColumn":29},{"ruleId":"432","severity":1,"message":"441","line":2,"column":8,"nodeType":"434","messageId":"435","endLine":2,"endColumn":19},{"ruleId":"432","severity":1,"message":"442","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":12},{"ruleId":"432","severity":1,"message":"436","line":2,"column":10,"nodeType":"434","messageId":"435","endLine":2,"endColumn":16},{"ruleId":"449","severity":1,"message":"457","line":30,"column":6,"nodeType":"451","endLine":30,"endColumn":8,"suggestions":"461"},{"ruleId":"449","severity":1,"message":"457","line":76,"column":6,"nodeType":"451","endLine":76,"endColumn":8,"suggestions":"462"},{"ruleId":"432","severity":1,"message":"463","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":31},{"ruleId":"432","severity":1,"message":"442","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":12},{"ruleId":"432","severity":1,"message":"464","line":8,"column":10,"nodeType":"434","messageId":"435","endLine":8,"endColumn":19},{"ruleId":"432","severity":1,"message":"465","line":12,"column":11,"nodeType":"434","messageId":"435","endLine":12,"endColumn":22},{"ruleId":"432","severity":1,"message":"466","line":12,"column":36,"nodeType":"434","messageId":"435","endLine":12,"endColumn":41},{"ruleId":"432","severity":1,"message":"463","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":31},{"ruleId":"432","severity":1,"message":"442","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":12},{"ruleId":"432","severity":1,"message":"465","line":11,"column":11,"nodeType":"434","messageId":"435","endLine":11,"endColumn":22},{"ruleId":"432","severity":1,"message":"466","line":11,"column":36,"nodeType":"434","messageId":"435","endLine":11,"endColumn":41},{"ruleId":"432","severity":1,"message":"467","line":34,"column":11,"nodeType":"434","messageId":"435","endLine":34,"endColumn":13},{"ruleId":"453","severity":1,"message":"454","line":121,"column":5,"nodeType":"455","messageId":"456","endLine":123,"endColumn":6},{"ruleId":"444","severity":1,"message":"445","line":116,"column":19,"nodeType":"446","endLine":119,"endColumn":20},{"ruleId":"444","severity":1,"message":"445","line":126,"column":19,"nodeType":"446","endLine":126,"endColumn":64},{"ruleId":"432","severity":1,"message":"468","line":7,"column":11,"nodeType":"434","messageId":"435","endLine":7,"endColumn":12},"no-unused-vars","'ApiProgress' is defined but never used.","Identifier","unusedVar","'signup' is defined but never used.","'response' is assigned a value but never used.","'App' is defined but never used.","'UserSignupPage' is defined but never used.","'className' is assigned a value but never used.","'maintenance' is defined but never used.","'logo' is defined but never used.","'Sidebar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'VerificationRequestsPage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.","ArrayExpression",["469"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'loadVerificationRequests'. Either include it or remove the dependency array.",["470"],"'React' is defined but never used.","'arrayBufferToBase64' is defined but never used.",["471"],["472"],"'ProfileImageWithDefault' is defined but never used.","'useParams' is defined but never used.","'displayName' is assigned a value but never used.","'image' is assigned a value but never used.","'id' is assigned a value but never used.","'t' is assigned a value but never used.",{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"475","fix":"477"},{"desc":"475","fix":"478"},"Update the dependencies array to be: [pathUsername, loggedInUsername, isAdmin]",{"range":"479","text":"480"},"Update the dependencies array to be: [loadVerificationRequests]",{"range":"481","text":"482"},{"range":"483","text":"482"},{"range":"484","text":"482"},[1793,1825],"[pathUsername, loggedInUsername, isAdmin]",[536,538],"[loadVerificationRequests]",[1227,1229],[2325,2327]]