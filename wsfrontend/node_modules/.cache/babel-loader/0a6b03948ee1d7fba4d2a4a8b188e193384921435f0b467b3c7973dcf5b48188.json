{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\nvar ReactEventEmitterMixin = {\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\nmodule.exports = ReactEventEmitterMixin;","map":{"version":3,"names":["EventPluginHub","require","runEventQueueInBatch","events","enqueueEvents","processEventQueue","ReactEventEmitterMixin","handleTopLevel","topLevelType","topLevelTarget","topLevelTargetID","nativeEvent","nativeEventTarget","extractEvents","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactEventEmitterMixin.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEhD,SAASC,oBAAoBA,CAACC,MAAM,EAAE;EACpCH,cAAc,CAACI,aAAa,CAACD,MAAM,CAAC;EACpCH,cAAc,CAACK,iBAAiB,CAAC,KAAK,CAAC;AACzC;AAEA,IAAIC,sBAAsB,GAAG;EAE3B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,cAAc,EAAE,SAAAA,CAAUC,YAAY,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,WAAW,EAAEC,iBAAiB,EAAE;IACxG,IAAIT,MAAM,GAAGH,cAAc,CAACa,aAAa,CAACL,YAAY,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,WAAW,EAAEC,iBAAiB,CAAC;IACzHV,oBAAoB,CAACC,MAAM,CAAC;EAC9B;AACF,CAAC;AAEDW,MAAM,CAACC,OAAO,GAAGT,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}