{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\Social-Media-App-Project\\\\wsfrontend\\\\src\\\\components\\\\LikedPostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getLikedPosts } from \"../api/apiCalls\";\nimport PostView from \"./PostView\";\nimport Spinner from \"../components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikedPostFeed = _ref => {\n  _s();\n  let {\n    username\n  } = _ref;\n  const [postPage, setPostPage] = useState({\n    content: [],\n    last: true,\n    number: 0\n  });\n  const {\n    content,\n    last\n  } = postPage;\n  useEffect(() => {\n    const loadLikedPosts = async () => {\n      try {\n        const response = await getLikedPosts(username);\n        setPostPage(previousPostPage => ({\n          ...response.data,\n          content: [...previousPostPage.content, ...response.data.content]\n        }));\n      } catch (error) {\n        console.error(\"Error loading liked posts:\", error);\n      }\n    };\n    loadLikedPosts();\n  }, [username]);\n  const loadOldPosts = async () => {\n    const response = await getOldPosts(lastPostId, username);\n    setPostPage(previousPostPage => ({\n      ...response.data,\n      content: [...previousPostPage.content, ...response.data.content]\n    }));\n  };\n  const loadNewPosts = async () => {\n    const response = await getNewPosts(firstPostId);\n    setPostPage(previousPostPage => ({\n      ...previousPostPage,\n      content: [...response.data, ...previousPostPage.content]\n    }));\n    setNewPostCount(0);\n  };\n  const onDeletePostSuccess = id => {\n    setPostPage(previousPostPage => ({\n      ...previousPostPage,\n      content: previousPostPage.content.filter(post => post.id !== id)\n    }));\n  };\n  if (content.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary text-center\",\n      children: initialPostLoadProgress ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 36\n      }, this) : t(\"There are no posts\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hen\\xFCz be\\u011Fenilen g\\xF6nderi bulunmamaktad\\u0131r.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : content.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(LikedPostFeed, \"McdQGgc+vgdLPO1mn+bu7da1oKE=\");\n_c = LikedPostFeed;\nexport default LikedPostFeed;\nvar _c;\n$RefreshReg$(_c, \"LikedPostFeed\");","map":{"version":3,"names":["React","useEffect","useState","getLikedPosts","PostView","Spinner","useParams","jsxDEV","_jsxDEV","LikedPostFeed","_ref","_s","username","postPage","setPostPage","content","last","number","loadLikedPosts","response","previousPostPage","data","error","console","loadOldPosts","getOldPosts","lastPostId","loadNewPosts","getNewPosts","firstPostId","setNewPostCount","onDeletePostSuccess","id","filter","post","length","className","children","initialPostLoadProgress","fileName","_jsxFileName","lineNumber","columnNumber","t","map","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/components/LikedPostFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getLikedPosts } from \"../api/apiCalls\";\r\nimport PostView from \"./PostView\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst LikedPostFeed = ({ username }) => {\r\n    const [postPage, setPostPage] = useState({\r\n        content: [],\r\n        last: true,\r\n        number: 0,\r\n      });\r\n  const { content, last } = postPage;\r\n  useEffect(() => {\r\n    const loadLikedPosts = async () => {\r\n      try {\r\n        const response = await getLikedPosts(username);\r\n        setPostPage((previousPostPage) => ({\r\n            ...response.data,\r\n            content: [...previousPostPage.content, ...response.data.content],\r\n          }));\r\n      } catch (error) {\r\n        console.error(\"Error loading liked posts:\", error);\r\n      }\r\n    };\r\n    loadLikedPosts();\r\n  }, [username]);\r\n  const loadOldPosts = async () => {\r\n    const response = await getOldPosts(lastPostId, username);\r\n    setPostPage((previousPostPage) => ({\r\n      ...response.data,\r\n      content: [...previousPostPage.content, ...response.data.content],\r\n    }));\r\n  };\r\n\r\n  const loadNewPosts = async () => {\r\n    const response = await getNewPosts(firstPostId);\r\n    setPostPage((previousPostPage) => ({\r\n      ...previousPostPage,\r\n      content: [...response.data, ...previousPostPage.content],\r\n    }));\r\n    setNewPostCount(0);\r\n  };\r\n\r\n  const onDeletePostSuccess = (id) => {\r\n    setPostPage((previousPostPage) => ({\r\n      ...previousPostPage,\r\n      content: previousPostPage.content.filter((post) => post.id !== id),\r\n    }));\r\n  };\r\n\r\n  if (content.length === 0) {\r\n    return (\r\n      <div className=\"alert alert-secondary text-center\">\r\n        {initialPostLoadProgress ? <Spinner /> : t(\"There are no posts\")}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {content.length === 0 ? (\r\n        <p>Henüz beğenilen gönderi bulunmamaktadır.</p>\r\n      ) : (\r\n        content.map((post) => (\r\n          <div key={post.id} className=\"mb-\">\r\n            <PostView post={post}></PostView>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default LikedPostFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC/B,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACrCa,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;EACN,MAAM;IAAEF,OAAO;IAAEC;EAAK,CAAC,GAAGH,QAAQ;EAClCZ,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,aAAa,CAACS,QAAQ,CAAC;QAC9CE,WAAW,CAAEM,gBAAgB,KAAM;UAC/B,GAAGD,QAAQ,CAACE,IAAI;UAChBN,OAAO,EAAE,CAAC,GAAGK,gBAAgB,CAACL,OAAO,EAAE,GAAGI,QAAQ,CAACE,IAAI,CAACN,OAAO;QACjE,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDJ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAML,QAAQ,GAAG,MAAMM,WAAW,CAACC,UAAU,EAAEd,QAAQ,CAAC;IACxDE,WAAW,CAAEM,gBAAgB,KAAM;MACjC,GAAGD,QAAQ,CAACE,IAAI;MAChBN,OAAO,EAAE,CAAC,GAAGK,gBAAgB,CAACL,OAAO,EAAE,GAAGI,QAAQ,CAACE,IAAI,CAACN,OAAO;IACjE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMR,QAAQ,GAAG,MAAMS,WAAW,CAACC,WAAW,CAAC;IAC/Cf,WAAW,CAAEM,gBAAgB,KAAM;MACjC,GAAGA,gBAAgB;MACnBL,OAAO,EAAE,CAAC,GAAGI,QAAQ,CAACE,IAAI,EAAE,GAAGD,gBAAgB,CAACL,OAAO;IACzD,CAAC,CAAC,CAAC;IACHe,eAAe,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,mBAAmB,GAAIC,EAAE,IAAK;IAClClB,WAAW,CAAEM,gBAAgB,KAAM;MACjC,GAAGA,gBAAgB;MACnBL,OAAO,EAAEK,gBAAgB,CAACL,OAAO,CAACkB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE;IACnE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,IAAIjB,OAAO,CAACoB,MAAM,KAAK,CAAC,EAAE;IACxB,oBACE3B,OAAA;MAAK4B,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAC/CC,uBAAuB,gBAAG9B,OAAA,CAACH,OAAO;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAGC,CAAC,CAAC,oBAAoB;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAEV;EACA,oBACElC,OAAA;IAAA6B,QAAA,EACGtB,OAAO,CAACoB,MAAM,KAAK,CAAC,gBACnB3B,OAAA;MAAA6B,QAAA,EAAG;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE/C3B,OAAO,CAAC6B,GAAG,CAAEV,IAAI,iBACf1B,OAAA;MAAmB4B,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChC7B,OAAA,CAACJ,QAAQ;QAAC8B,IAAI,EAAEA;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC,GADzBR,IAAI,CAACF,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAAC/B,EAAA,CAlEIF,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAoEnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}