{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\ws-project\\\\wsfrontend\\\\src\\\\shared\\\\ApiProgress.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nexport function withApiProgress(WrappedComponent, apiPath) {\n  var _class;\n  return _class = class extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        pendingApiCall: false\n      };\n      this.updateApiCallFor = (url, inProgress) => {\n        if (url === apiPath) {\n          this.setState({\n            pendingApiCall: inProgress\n          });\n        }\n      };\n    }\n    componentDidMount() {\n      axios.interceptors.request.use(request => {\n        this.updateApiCallFor(request.url, true);\n        return request;\n      });\n      axios.interceptors.response.use(response => {\n        this.updateApiCallFor(response.config.url, false);\n        return response;\n      }, error => {\n        this.updateApiCallFor(error.config.url, false);\n        throw error;\n      });\n    }\n    render() {\n      const {\n        pendingApiCall\n      } = this.state;\n      /*return (\r\n        <div>\r\n          {React.cloneElement(this.props.children, {\r\n            pendingApiCall,\r\n          })}\r\n        </div>\r\n      );*/\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        pendingApiCall: pendingApiCall,\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  }, _class.displayName = 'ApiProgress(' + getDisplayName(WrappedComponent) + ')', _class;\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","getDisplayName","WrappedComponent","displayName","name","withApiProgress","apiPath","_class","constructor","arguments","state","pendingApiCall","updateApiCallFor","url","inProgress","setState","componentDidMount","interceptors","request","use","response","config","error","render","props","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/shared/ApiProgress.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction getDisplayName(WrappedComponent){\r\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\r\n}\r\n\r\n\r\nexport function withApiProgress(WrappedComponent, apiPath) {\r\n  return class extends Component {\r\n\r\n    static displayName = 'ApiProgress('+ getDisplayName(WrappedComponent)+')';\r\n\r\n    state = {\r\n      pendingApiCall: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n      axios.interceptors.request.use((request) => {\r\n        this.updateApiCallFor(request.url, true);\r\n        return request;\r\n      });\r\n\r\n      axios.interceptors.response.use(\r\n        (response) => {\r\n          this.updateApiCallFor(response.config.url, false);\r\n\r\n          return response;\r\n        },\r\n        (error) => {\r\n          this.updateApiCallFor(error.config.url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    }\r\n\r\n    updateApiCallFor = (url, inProgress) => {\r\n      if (url === apiPath) {\r\n        this.setState({ pendingApiCall: inProgress });\r\n      }\r\n    };\r\n    render() {\r\n      const { pendingApiCall } = this.state;\r\n      /*return (\r\n        <div>\r\n          {React.cloneElement(this.props.children, {\r\n            pendingApiCall,\r\n          })}\r\n        </div>\r\n      );*/\r\n      return (\r\n        <WrappedComponent pendingApiCall={pendingApiCall} {...this.props} />\r\n      );\r\n    }\r\n  };\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAACC,gBAAgB,EAAC;EACvC,OAAOA,gBAAgB,CAACC,WAAW,IAAID,gBAAgB,CAACE,IAAI,IAAI,WAAW;AAC7E;AAGA,OAAO,SAASC,eAAeA,CAACH,gBAAgB,EAAEI,OAAO,EAAE;EAAA,IAAAC,MAAA;EACzD,OAAAA,MAAA,GAAO,cAAcV,SAAS,CAAC;IAAAW,YAAA;MAAA,SAAAC,SAAA;MAAA,KAI7BC,KAAK,GAAG;QACNC,cAAc,EAAE;MAClB,CAAC;MAAA,KAqBDC,gBAAgB,GAAG,CAACC,GAAG,EAAEC,UAAU,KAAK;QACtC,IAAID,GAAG,KAAKP,OAAO,EAAE;UACnB,IAAI,CAACS,QAAQ,CAAC;YAAEJ,cAAc,EAAEG;UAAW,CAAC,CAAC;QAC/C;MACF,CAAC;IAAA;IAvBDE,iBAAiBA,CAAA,EAAG;MAClBlB,KAAK,CAACmB,YAAY,CAACC,OAAO,CAACC,GAAG,CAAED,OAAO,IAAK;QAC1C,IAAI,CAACN,gBAAgB,CAACM,OAAO,CAACL,GAAG,EAAE,IAAI,CAAC;QACxC,OAAOK,OAAO;MAChB,CAAC,CAAC;MAEFpB,KAAK,CAACmB,YAAY,CAACG,QAAQ,CAACD,GAAG,CAC5BC,QAAQ,IAAK;QACZ,IAAI,CAACR,gBAAgB,CAACQ,QAAQ,CAACC,MAAM,CAACR,GAAG,EAAE,KAAK,CAAC;QAEjD,OAAOO,QAAQ;MACjB,CAAC,EACAE,KAAK,IAAK;QACT,IAAI,CAACV,gBAAgB,CAACU,KAAK,CAACD,MAAM,CAACR,GAAG,EAAE,KAAK,CAAC;QAC9C,MAAMS,KAAK;MACb,CACF,CAAC;IACH;IAOAC,MAAMA,CAAA,EAAG;MACP,MAAM;QAAEZ;MAAe,CAAC,GAAG,IAAI,CAACD,KAAK;MACrC;AACN;AACA;AACA;AACA;AACA;AACA;MACM,oBACEV,OAAA,CAACE,gBAAgB;QAACS,cAAc,EAAEA,cAAe;QAAA,GAAK,IAAI,CAACa;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAExE;EACF,CAAC,EAAArB,MAAA,CA3CQJ,WAAW,GAAG,cAAc,GAAEF,cAAc,CAACC,gBAAgB,CAAC,GAAC,GAAG,EAAAK,MAAA;AA4C7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}