{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\nvar didWarnAboutMaps = false;\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} text Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n    }\n  }\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\nmodule.exports = traverseAllChildren;","map":{"version":3,"names":["ReactCurrentOwner","require","ReactElement","ReactInstanceHandles","getIteratorFn","invariant","warning","SEPARATOR","SUBSEPARATOR","userProvidedKeyEscaperLookup","userProvidedKeyEscapeRegex","didWarnAboutMaps","userProvidedKeyEscaper","match","getComponentKey","component","index","key","wrapUserProvidedKey","toString","escapeUserProvidedKey","text","replace","traverseAllChildrenImpl","children","nameSoFar","callback","traverseContext","type","isValidElement","child","nextName","subtreeCount","nextNamePrefix","Array","isArray","i","length","iteratorFn","iterator","call","step","entries","ii","next","done","value","process","env","NODE_ENV","undefined","entry","addendum","_isReactElement","current","name","getName","childrenString","String","Object","keys","join","traverseAllChildren","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/traverseAllChildren.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} text Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}