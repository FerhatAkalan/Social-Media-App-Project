{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n      nodeStart = nodeEnd;\n    }\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\nmodule.exports = getNodeForCharacterOffset;","map":{"version":3,"names":["getLeafNode","node","firstChild","getSiblingNode","nextSibling","parentNode","getNodeForCharacterOffset","root","offset","nodeStart","nodeEnd","nodeType","textContent","length","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/getNodeForCharacterOffset.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAWA,CAACC,IAAI,EAAE;EACzB,OAAOA,IAAI,IAAIA,IAAI,CAACC,UAAU,EAAE;IAC9BD,IAAI,GAAGA,IAAI,CAACC,UAAU;EACxB;EACA,OAAOD,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,cAAcA,CAACF,IAAI,EAAE;EAC5B,OAAOA,IAAI,EAAE;IACX,IAAIA,IAAI,CAACG,WAAW,EAAE;MACpB,OAAOH,IAAI,CAACG,WAAW;IACzB;IACAH,IAAI,GAAGA,IAAI,CAACI,UAAU;EACxB;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,yBAAyBA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAC/C,IAAIP,IAAI,GAAGD,WAAW,CAACO,IAAI,CAAC;EAC5B,IAAIE,SAAS,GAAG,CAAC;EACjB,IAAIC,OAAO,GAAG,CAAC;EAEf,OAAOT,IAAI,EAAE;IACX,IAAIA,IAAI,CAACU,QAAQ,KAAK,CAAC,EAAE;MACvBD,OAAO,GAAGD,SAAS,GAAGR,IAAI,CAACW,WAAW,CAACC,MAAM;MAE7C,IAAIJ,SAAS,IAAID,MAAM,IAAIE,OAAO,IAAIF,MAAM,EAAE;QAC5C,OAAO;UACLP,IAAI,EAAEA,IAAI;UACVO,MAAM,EAAEA,MAAM,GAAGC;QACnB,CAAC;MACH;MAEAA,SAAS,GAAGC,OAAO;IACrB;IAEAT,IAAI,GAAGD,WAAW,CAACG,cAAc,CAACF,IAAI,CAAC,CAAC;EAC1C;AACF;AAEAa,MAAM,CAACC,OAAO,GAAGT,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}