{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\Social-Media-App-Project\\\\wsfrontend\\\\src\\\\components\\\\LikedPostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getLikedPosts } from \"../api/apiCalls\";\nimport PostView from \"./PostView\";\nimport Spinner from \"../components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikedPostFeed = _ref => {\n  _s();\n  let {\n    username\n  } = _ref;\n  const [postPage, setPostPage] = useState({\n    content: [],\n    last: true,\n    number: 0\n  });\n  useEffect(() => {\n    const loadLikedPosts = async () => {\n      try {\n        const response = await getLikedPosts(username);\n        if (response.data && response.data.content && response.data.content.length > 0) {\n          setPostPage(previousPostPage => ({\n            ...response.data,\n            content: [...previousPostPage.content, ...response.data.content]\n          }));\n          console.log(\"API Response:\", response.data); // API yanıtını kontrol et\n        } else {\n          console.log(\"Liked posts not found or empty.\");\n        }\n      } catch (error) {\n        console.error(\"Error loading liked posts:\", error);\n      }\n    };\n    loadLikedPosts();\n  }, [username]);\n  const {\n    content,\n    last\n  } = postPage;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content.length > 0 ? content.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"No liked posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(LikedPostFeed, \"G0YKbcGUvPh9MS2tnDcRiRp8zA8=\");\n_c = LikedPostFeed;\nexport default LikedPostFeed;\nvar _c;\n$RefreshReg$(_c, \"LikedPostFeed\");","map":{"version":3,"names":["React","useEffect","useState","getLikedPosts","PostView","Spinner","useParams","jsxDEV","_jsxDEV","LikedPostFeed","_ref","_s","username","postPage","setPostPage","content","last","number","loadLikedPosts","response","data","length","previousPostPage","console","log","error","children","map","post","className","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/components/LikedPostFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getLikedPosts } from \"../api/apiCalls\";\r\nimport PostView from \"./PostView\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst LikedPostFeed = ({ username }) => {\r\n  const [postPage, setPostPage] = useState({\r\n    content: [],\r\n    last: true,\r\n    number: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadLikedPosts = async () => {\r\n      try {\r\n        const response = await getLikedPosts(username);\r\n        if (response.data && response.data.content && response.data.content.length > 0) {\r\n          setPostPage((previousPostPage) => ({\r\n            ...response.data,\r\n            content: [...previousPostPage.content, ...response.data.content],\r\n          }));\r\n        console.log(\"API Response:\", response.data); // API yanıtını kontrol et\r\n\r\n        } else {\r\n          console.log(\"Liked posts not found or empty.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading liked posts:\", error);\r\n      }\r\n    };\r\n    loadLikedPosts();\r\n  }, [username]);\r\n\r\n  const { content, last } = postPage;\r\n\r\n  return (\r\n    <div>\r\n      {content.length > 0 ? (\r\n        content.map((post) => (\r\n          <div key={post.id} className=\"mb-\">\r\n            <PostView post={post}></PostView>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <b>No liked posts available.</b>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikedPostFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACvCa,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,IAAI;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,aAAa,CAACS,QAAQ,CAAC;QAC9C,IAAIO,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACL,OAAO,IAAII,QAAQ,CAACC,IAAI,CAACL,OAAO,CAACM,MAAM,GAAG,CAAC,EAAE;UAC9EP,WAAW,CAAEQ,gBAAgB,KAAM;YACjC,GAAGH,QAAQ,CAACC,IAAI;YAChBL,OAAO,EAAE,CAAC,GAAGO,gBAAgB,CAACP,OAAO,EAAE,GAAGI,QAAQ,CAACC,IAAI,CAACL,OAAO;UACjE,CAAC,CAAC,CAAC;UACLQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;QAE7C,CAAC,MAAM;UACLG,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;QAChD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDP,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAM;IAAEG,OAAO;IAAEC;EAAK,CAAC,GAAGH,QAAQ;EAElC,oBACEL,OAAA;IAAAkB,QAAA,EACGX,OAAO,CAACM,MAAM,GAAG,CAAC,GACjBN,OAAO,CAACY,GAAG,CAAEC,IAAI,iBACfpB,OAAA;MAAmBqB,SAAS,EAAC,KAAK;MAAAH,QAAA,eAChClB,OAAA,CAACJ,QAAQ;QAACwB,IAAI,EAAEA;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC,GADzBL,IAAI,CAACM,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN,CAAC,gBAEFzB,OAAA;MAAAkB,QAAA,EAAG;IAAyB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAChC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3CIF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA6CnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}