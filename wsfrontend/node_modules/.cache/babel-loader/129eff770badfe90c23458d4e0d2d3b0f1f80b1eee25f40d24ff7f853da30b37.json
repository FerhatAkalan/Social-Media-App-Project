{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar Transaction = require('./Transaction');\nvar assign = require('./Object.assign');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(forceHTML) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;\n}\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\nPooledClass.addPoolingTo(ReactReconcileTransaction);\nmodule.exports = ReactReconcileTransaction;","map":{"version":3,"names":["CallbackQueue","require","PooledClass","ReactBrowserEventEmitter","ReactDOMFeatureFlags","ReactInputSelection","Transaction","assign","SELECTION_RESTORATION","initialize","getSelectionInformation","close","restoreSelection","EVENT_SUPPRESSION","currentlyEnabled","isEnabled","setEnabled","previouslyEnabled","ON_DOM_READY_QUEUEING","reactMountReady","reset","notifyAll","TRANSACTION_WRAPPERS","ReactReconcileTransaction","forceHTML","reinitializeTransaction","renderToStaticMarkup","getPooled","useCreateElement","Mixin","getTransactionWrappers","getReactMountReady","destructor","release","prototype","addPoolingTo","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactReconcileTransaction.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(forceHTML) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}