{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\Social-Media-App-Project\\\\wsfrontend\\\\src\\\\components\\\\LikedPostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getLikedPosts, getNewPosts, getOldPosts, getNewPostCount } from \"../api/apiCalls\";\nimport PostView from \"./PostView\";\nimport Spinner from \"../components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikedPostFeed = () => {\n  _s();\n  const [postPage, setPostPage] = useState({\n    content: [],\n    last: true,\n    number: 0\n  });\n  const [newPostCount, setNewPostCount] = useState(0);\n  const {\n    t\n  } = useTranslation();\n  const {\n    username\n  } = useParams();\n  const initialPostLoadProgress = useApiProgress(\"get\", `/api/1.0/likes/user/${username}/liked-posts?page=`);\n  let lastPostId = 0;\n  let firstPostId = 0;\n  if (postPage.content.length > 0) {\n    firstPostId = postPage.content[0].id;\n    const lastPostIndex = postPage.content.length - 1;\n    lastPostId = postPage.content[lastPostIndex].id;\n  }\n  const oldPostPath = `/api/1.0/likes/user/${username}/posts/${lastPostId}`;\n  const loadOldPostProgress = useApiProgress(\"get\", oldPostPath, true);\n  const newPostPath = `/api/1.0/likes/user/${username}/posts/${firstPostId}?direction=after`;\n  const loadNewPostProgress = useApiProgress(\"get\", newPostPath, true);\n  useEffect(() => {\n    const getCount = async () => {\n      const response = await getNewPostCount(firstPostId, username);\n      setNewPostCount(response.data.count);\n    };\n    let looper = setInterval(getCount, 1000);\n    return function cleanup() {\n      clearInterval(looper);\n    };\n  }, [firstPostId, username]);\n  useEffect(() => {\n    const loadPosts = async page => {\n      try {\n        const response = await getLikedPosts(username, page);\n        setPostPage(previousPostPage => ({\n          ...response.data,\n          content: [...previousPostPage.content, ...response.data.content]\n        }));\n        console.log(\"API Response:\", response.data); // API yanıtını kontrol et\n      } catch (error) {\n        console.error(\"Error loading liked posts:\", error);\n      }\n    };\n    loadPosts();\n  }, [username]);\n  const loadOldPosts = async () => {\n    const response = await getOldPosts(lastPostId, username);\n    setPostPage(previousPostPage => ({\n      ...response.data,\n      content: [...previousPostPage.content, ...response.data.content]\n    }));\n  };\n  const loadNewPosts = async () => {\n    const response = await getNewPosts(firstPostId);\n    setPostPage(previousPostPage => ({\n      ...previousPostPage,\n      content: [...response.data, ...previousPostPage.content]\n    }));\n    setNewPostCount(0);\n  };\n  const onDeletePostSuccess = id => {\n    setPostPage(previousPostPage => ({\n      ...previousPostPage,\n      content: previousPostPage.content.filter(post => post.id !== id)\n    }));\n  };\n  const {\n    content,\n    last\n  } = postPage;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [newPostCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center mb-1\",\n      onClick: loadNewPostProgress ? () => {} : loadNewPosts,\n      style: {\n        cursor: loadNewPostProgress ? \"wait\" : \"pointer\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-regular fa-paper-plane fa-beat-fade p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), loadNewPostProgress ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this) : t(\"There are new posts. Click here to see!\"), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-regular fa-paper-plane fa-beat-fade ps-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), content.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post,\n        onDeletePost: onDeletePostSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)), !last && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary text-center\",\n      onClick: loadOldPostProgress ? () => {} : loadOldPosts,\n      style: {\n        cursor: loadOldPostProgress ? \"wait\" : \"pointer\"\n      },\n      children: loadOldPostProgress ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 34\n      }, this) : t(\"Load old posts\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(LikedPostFeed, \"qrWtNtUkRxUWGsy7jS7v/S//r7s=\", false, function () {\n  return [useTranslation, useParams, useApiProgress, useApiProgress, useApiProgress];\n});\n_c = LikedPostFeed;\nexport default LikedPostFeed;\nvar _c;\n$RefreshReg$(_c, \"LikedPostFeed\");","map":{"version":3,"names":["React","useEffect","useState","getLikedPosts","getNewPosts","getOldPosts","getNewPostCount","PostView","Spinner","useParams","useTranslation","useApiProgress","jsxDEV","_jsxDEV","LikedPostFeed","_s","postPage","setPostPage","content","last","number","newPostCount","setNewPostCount","t","username","initialPostLoadProgress","lastPostId","firstPostId","length","id","lastPostIndex","oldPostPath","loadOldPostProgress","newPostPath","loadNewPostProgress","getCount","response","data","count","looper","setInterval","cleanup","clearInterval","loadPosts","page","previousPostPage","console","log","error","loadOldPosts","loadNewPosts","onDeletePostSuccess","filter","post","children","className","onClick","style","cursor","class","fileName","_jsxFileName","lineNumber","columnNumber","map","onDeletePost","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/components/LikedPostFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getLikedPosts,getNewPosts,getOldPosts,getNewPostCount } from \"../api/apiCalls\";\r\nimport PostView from \"./PostView\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\n\r\nconst LikedPostFeed = () => {\r\n  const [postPage, setPostPage] = useState({\r\n    content: [],\r\n    last: true,\r\n    number: 0,\r\n  });\r\n  const [newPostCount, setNewPostCount] = useState(0);\r\n  const { t } = useTranslation();\r\n  const { username } = useParams();\r\n\r\n  const initialPostLoadProgress = useApiProgress(\r\n    \"get\",\r\n    `/api/1.0/likes/user/${username}/liked-posts?page=`\r\n  );\r\n\r\n  let lastPostId = 0;\r\n  let firstPostId = 0;\r\n\r\n  if (postPage.content.length > 0) {\r\n    firstPostId = postPage.content[0].id;\r\n    const lastPostIndex = postPage.content.length - 1;\r\n    lastPostId = postPage.content[lastPostIndex].id;\r\n  }\r\n\r\n  const oldPostPath = `/api/1.0/likes/user/${username}/posts/${lastPostId}`;\r\n\r\n  const loadOldPostProgress = useApiProgress(\"get\", oldPostPath, true);\r\n\r\n  const newPostPath = `/api/1.0/likes/user/${username}/posts/${firstPostId}?direction=after`;\r\n\r\n  const loadNewPostProgress = useApiProgress(\"get\", newPostPath, true);\r\n\r\n  useEffect(() => {\r\n    const getCount = async () => {\r\n      const response = await getNewPostCount(firstPostId, username);\r\n      setNewPostCount(response.data.count);\r\n    };\r\n    let looper = setInterval(getCount, 1000);\r\n    return function cleanup() {\r\n      clearInterval(looper);\r\n    };\r\n  }, [firstPostId, username]);\r\n\r\n  useEffect(() => {\r\n    const loadPosts = async (page) => {\r\n      try {\r\n        const response = await getLikedPosts(username, page);\r\n        setPostPage((previousPostPage) => ({\r\n          ...response.data,\r\n          content: [...previousPostPage.content, ...response.data.content],\r\n        }));\r\n        console.log(\"API Response:\", response.data); // API yanıtını kontrol et\r\n      } catch (error) {\r\n        console.error(\"Error loading liked posts:\", error);\r\n      }\r\n    };\r\n    loadPosts();\r\n  }, [username]);\r\n\r\n  const loadOldPosts = async () => {\r\n    const response = await getOldPosts(lastPostId, username);\r\n    setPostPage((previousPostPage) => ({\r\n      ...response.data,\r\n      content: [...previousPostPage.content, ...response.data.content],\r\n    }));\r\n  };\r\n\r\n  const loadNewPosts = async () => {\r\n    const response = await getNewPosts(firstPostId);\r\n    setPostPage((previousPostPage) => ({\r\n      ...previousPostPage,\r\n      content: [...response.data, ...previousPostPage.content],\r\n    }));\r\n    setNewPostCount(0);\r\n  };\r\n\r\n  const onDeletePostSuccess = (id) => {\r\n    setPostPage((previousPostPage) => ({\r\n      ...previousPostPage,\r\n      content: previousPostPage.content.filter((post) => post.id !== id),\r\n    }));\r\n  };\r\n\r\n  const { content, last } = postPage;\r\n\r\n  return (\r\n    <div>\r\n      {newPostCount > 0 && (\r\n        <div\r\n          className=\"alert alert-info text-center mb-1\"\r\n          onClick={loadNewPostProgress ? () => {} : loadNewPosts}\r\n          style={{ cursor: loadNewPostProgress ? \"wait\" : \"pointer\" }}\r\n        >\r\n          <i class=\"fa-regular fa-paper-plane fa-beat-fade p-2\"></i>\r\n          {loadNewPostProgress ? (\r\n            <Spinner />\r\n          ) : (\r\n            t(\"There are new posts. Click here to see!\")\r\n          )}\r\n          <i class=\"fa-regular fa-paper-plane fa-beat-fade ps-2\"></i>\r\n        </div>\r\n      )}\r\n      {content.map((post) => (\r\n        <div key={post.id} className=\"mb-\">\r\n          <PostView post={post} onDeletePost={onDeletePostSuccess}></PostView>\r\n        </div>\r\n      ))}\r\n      {!last && (\r\n        <div\r\n          className=\"alert alert-secondary text-center\"\r\n          onClick={loadOldPostProgress ? () => {} : loadOldPosts}\r\n          style={{ cursor: loadOldPostProgress ? \"wait\" : \"pointer\" }}\r\n        >\r\n          {loadOldPostProgress ? <Spinner /> : t(\"Load old posts\")}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikedPostFeed;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}