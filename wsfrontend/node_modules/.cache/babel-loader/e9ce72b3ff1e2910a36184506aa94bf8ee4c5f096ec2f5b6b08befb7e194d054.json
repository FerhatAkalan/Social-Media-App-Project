{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar assign = require('./Object.assign');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\nassign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\nPooledClass.addPoolingTo(FallbackCompositionState);\nmodule.exports = FallbackCompositionState;","map":{"version":3,"names":["PooledClass","require","assign","getTextContentAccessor","FallbackCompositionState","root","_root","_startText","getText","_fallbackText","prototype","destructor","value","getData","start","startValue","startLength","length","end","endValue","endLength","minEnd","sliceTail","undefined","slice","addPoolingTo","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/FallbackCompositionState.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAIC,MAAM,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAIE,sBAAsB,GAAGF,OAAO,CAAC,0BAA0B,CAAC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,wBAAwBA,CAACC,IAAI,EAAE;EACtC,IAAI,CAACC,KAAK,GAAGD,IAAI;EACjB,IAAI,CAACE,UAAU,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;EAChC,IAAI,CAACC,aAAa,GAAG,IAAI;AAC3B;AAEAP,MAAM,CAACE,wBAAwB,CAACM,SAAS,EAAE;EACzCC,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtB,IAAI,CAACL,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACE,aAAa,GAAG,IAAI;EAC3B,CAAC;EAED;AACF;AACA;AACA;AACA;EACED,OAAO,EAAE,SAAAA,CAAA,EAAY;IACnB,IAAI,OAAO,IAAI,IAAI,CAACF,KAAK,EAAE;MACzB,OAAO,IAAI,CAACA,KAAK,CAACM,KAAK;IACzB;IACA,OAAO,IAAI,CAACN,KAAK,CAACH,sBAAsB,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEU,OAAO,EAAE,SAAAA,CAAA,EAAY;IACnB,IAAI,IAAI,CAACJ,aAAa,EAAE;MACtB,OAAO,IAAI,CAACA,aAAa;IAC3B;IAEA,IAAIK,KAAK;IACT,IAAIC,UAAU,GAAG,IAAI,CAACR,UAAU;IAChC,IAAIS,WAAW,GAAGD,UAAU,CAACE,MAAM;IACnC,IAAIC,GAAG;IACP,IAAIC,QAAQ,GAAG,IAAI,CAACX,OAAO,CAAC,CAAC;IAC7B,IAAIY,SAAS,GAAGD,QAAQ,CAACF,MAAM;IAE/B,KAAKH,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGE,WAAW,EAAEF,KAAK,EAAE,EAAE;MAC5C,IAAIC,UAAU,CAACD,KAAK,CAAC,KAAKK,QAAQ,CAACL,KAAK,CAAC,EAAE;QACzC;MACF;IACF;IAEA,IAAIO,MAAM,GAAGL,WAAW,GAAGF,KAAK;IAChC,KAAKI,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIG,MAAM,EAAEH,GAAG,EAAE,EAAE;MAClC,IAAIH,UAAU,CAACC,WAAW,GAAGE,GAAG,CAAC,KAAKC,QAAQ,CAACC,SAAS,GAAGF,GAAG,CAAC,EAAE;QAC/D;MACF;IACF;IAEA,IAAII,SAAS,GAAGJ,GAAG,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG,GAAGK,SAAS;IAC7C,IAAI,CAACd,aAAa,GAAGU,QAAQ,CAACK,KAAK,CAACV,KAAK,EAAEQ,SAAS,CAAC;IACrD,OAAO,IAAI,CAACb,aAAa;EAC3B;AACF,CAAC,CAAC;AAEFT,WAAW,CAACyB,YAAY,CAACrB,wBAAwB,CAAC;AAElDsB,MAAM,CAACC,OAAO,GAAGvB,wBAAwB"},"metadata":{},"sourceType":"script","externalDependencies":[]}