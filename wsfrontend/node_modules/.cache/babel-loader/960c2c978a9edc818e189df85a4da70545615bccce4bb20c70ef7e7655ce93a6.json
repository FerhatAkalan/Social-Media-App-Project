{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar findDOMNode = require('./findDOMNode');\nvar warning = require('fbjs/lib/warning');\nvar didWarnKey = '_getDOMNodeDidWarn';\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function () {\n    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;\n    this.constructor[didWarnKey] = true;\n    return findDOMNode(this);\n  }\n};\nmodule.exports = ReactBrowserComponentMixin;","map":{"version":3,"names":["ReactInstanceMap","require","findDOMNode","warning","didWarnKey","ReactBrowserComponentMixin","getDOMNode","process","env","NODE_ENV","constructor","get","getName","tagName","undefined","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactBrowserComponentMixin.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar findDOMNode = require('./findDOMNode');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnKey = '_getDOMNodeDidWarn';\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function () {\n    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;\n    this.constructor[didWarnKey] = true;\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,gBAAgB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAEpD,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIE,OAAO,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAEzC,IAAIG,UAAU,GAAG,oBAAoB;AAErC,IAAIC,0BAA0B,GAAG;EAC/B;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGN,OAAO,CAAC,IAAI,CAACO,WAAW,CAACN,UAAU,CAAC,EAAE,+CAA+C,GAAG,yCAAyC,EAAEJ,gBAAgB,CAACW,GAAG,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,IAAI,IAAI,CAACC,OAAO,IAAI,SAAS,CAAC,GAAGC,SAAS;IACzP,IAAI,CAACJ,WAAW,CAACN,UAAU,CAAC,GAAG,IAAI;IACnC,OAAOF,WAAW,CAAC,IAAI,CAAC;EAC1B;AACF,CAAC;AAEDa,MAAM,CAACC,OAAO,GAAGX,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}