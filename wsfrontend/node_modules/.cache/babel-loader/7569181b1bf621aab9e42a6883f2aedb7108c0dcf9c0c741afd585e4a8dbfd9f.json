{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { fetchTranslationFromAPI } from \"../src/api/apiCalls\";\nimport { register } from \"timeago.js\";\ni18n.use(initReactI18next).init({\n  resources: {},\n  fallbackLng: \"en\",\n  ns: [\"translations\"],\n  defaultNS: \"translations\",\n  keySeperator: false,\n  interpolation: {\n    escapeValue: false,\n    formatSeperator: \",\"\n  },\n  react: {\n    wait: true\n  }\n});\nconst translationKeys = Object.keys(i18n.options.resources.en.translations);\nasync function loadTranslations(language) {\n  const translations = {};\n  for (const key of translationKeys) {\n    const text = await fetchTranslationFromAPI(key, language);\n    translations[key] = text;\n  }\n  i18n.addResourceBundle(language, \"translations\", translations, true, true);\n}\n\n// Dil değişikliğinde metinleri güncelleme\ni18n.on(\"languageChanged\", lng => {\n  loadTranslations(lng);\n});\n\n// Timeago dil desteği ekleme\nconst timeagoTR = (number, index) => {\n  // ... zaman ifadeleri\n};\nregister(\"tr\", timeagoTR);\n\n// Varsayılan olarak İngilizce metinleri yükle\nloadTranslations(\"en\");\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","fetchTranslationFromAPI","register","use","init","resources","fallbackLng","ns","defaultNS","keySeperator","interpolation","escapeValue","formatSeperator","react","wait","translationKeys","Object","keys","options","en","translations","loadTranslations","language","key","text","addResourceBundle","on","lng","timeagoTR","number","index"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/i18n.js"],"sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport { fetchTranslationFromAPI } from \"../src/api/apiCalls\";\r\nimport { register } from \"timeago.js\";\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: {},\r\n  fallbackLng: \"en\",\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n  keySeperator: false,\r\n  interpolation: {\r\n    escapeValue: false,\r\n    formatSeperator: \",\",\r\n  },\r\n  react: {\r\n    wait: true,\r\n  },\r\n});\r\nconst translationKeys = Object.keys(i18n.options.resources.en.translations);\r\n\r\nasync function loadTranslations(language) {\r\n  const translations = {};\r\n\r\n  for (const key of translationKeys) {\r\n    const text = await fetchTranslationFromAPI(key, language);\r\n    translations[key] = text;\r\n  }\r\n\r\n  i18n.addResourceBundle(language, \"translations\", translations, true, true);\r\n}\r\n\r\n\r\n\r\n// Dil değişikliğinde metinleri güncelleme\r\ni18n.on(\"languageChanged\", (lng) => {\r\n  loadTranslations(lng);\r\n});\r\n\r\n// Timeago dil desteği ekleme\r\nconst timeagoTR = (number, index) => {\r\n  // ... zaman ifadeleri\r\n};\r\nregister(\"tr\", timeagoTR);\r\n\r\n// Varsayılan olarak İngilizce metinleri yükle\r\nloadTranslations(\"en\");\r\n\r\nexport default i18n;\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,SAASC,uBAAuB,QAAQ,qBAAqB;AAC7D,SAASC,QAAQ,QAAQ,YAAY;AAErCH,IAAI,CAACI,GAAG,CAACH,gBAAgB,CAAC,CAACI,IAAI,CAAC;EAC9BC,SAAS,EAAE,CAAC,CAAC;EACbC,WAAW,EAAE,IAAI;EACjBC,EAAE,EAAE,CAAC,cAAc,CAAC;EACpBC,SAAS,EAAE,cAAc;EACzBC,YAAY,EAAE,KAAK;EACnBC,aAAa,EAAE;IACbC,WAAW,EAAE,KAAK;IAClBC,eAAe,EAAE;EACnB,CAAC;EACDC,KAAK,EAAE;IACLC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AACF,MAAMC,eAAe,GAAGC,MAAM,CAACC,IAAI,CAAClB,IAAI,CAACmB,OAAO,CAACb,SAAS,CAACc,EAAE,CAACC,YAAY,CAAC;AAE3E,eAAeC,gBAAgBA,CAACC,QAAQ,EAAE;EACxC,MAAMF,YAAY,GAAG,CAAC,CAAC;EAEvB,KAAK,MAAMG,GAAG,IAAIR,eAAe,EAAE;IACjC,MAAMS,IAAI,GAAG,MAAMvB,uBAAuB,CAACsB,GAAG,EAAED,QAAQ,CAAC;IACzDF,YAAY,CAACG,GAAG,CAAC,GAAGC,IAAI;EAC1B;EAEAzB,IAAI,CAAC0B,iBAAiB,CAACH,QAAQ,EAAE,cAAc,EAAEF,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC;AAC5E;;AAIA;AACArB,IAAI,CAAC2B,EAAE,CAAC,iBAAiB,EAAGC,GAAG,IAAK;EAClCN,gBAAgB,CAACM,GAAG,CAAC;AACvB,CAAC,CAAC;;AAEF;AACA,MAAMC,SAAS,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;EACnC;AAAA,CACD;AACD5B,QAAQ,CAAC,IAAI,EAAE0B,SAAS,CAAC;;AAEzB;AACAP,gBAAgB,CAAC,IAAI,CAAC;AAEtB,eAAetB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}