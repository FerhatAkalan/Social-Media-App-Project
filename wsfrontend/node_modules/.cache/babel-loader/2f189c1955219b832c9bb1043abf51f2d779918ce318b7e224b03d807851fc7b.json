{"ast":null,"code":"import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register';\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n  clearTimeout(tid);\n  delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n  // clear the node's exist timer\n  clear(getTimerId(node));\n  var relativeDate = opts.relativeDate,\n    minInterval = opts.minInterval;\n  // get diff seconds\n  var diff = diffSec(date, relativeDate);\n  // render\n  node.innerText = formatDiff(diff, localeFunc);\n  var tid = setTimeout(function () {\n    run(node, date, localeFunc, opts);\n  }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n  // there is no need to save node in object. Just save the key\n  TIMER_POOL[tid] = 0;\n  setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nexport function cancel(node) {\n  // cancel one\n  if (node) clear(getTimerId(node));\n  // cancel all\n  // @ts-ignore\n  else Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nexport function render(nodes, locale, opts) {\n  // by .length\n  // @ts-ignore\n  var nodeList = nodes.length ? nodes : [nodes];\n  nodeList.forEach(function (node) {\n    run(node, getDateAttribute(node), getLocale(locale), opts || {});\n  });\n  return nodeList;\n}","map":{"version":3,"names":["setTimerId","getTimerId","getDateAttribute","formatDiff","diffSec","nextInterval","getLocale","TIMER_POOL","clear","tid","clearTimeout","run","node","date","localeFunc","opts","relativeDate","minInterval","diff","innerText","setTimeout","Math","min","max","cancel","Object","keys","forEach","render","nodes","locale","nodeList","length"],"sources":["../src/realtime.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,UAAU,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,aAAa;AACtE,SAASC,UAAU,EAAEC,OAAO,EAAEC,YAAY,QAAQ,cAAc;AAChE,SAASC,SAAS,QAAQ,YAAY;AAGtC;AACA,IAAMC,UAAU,GAAc,EAAE;AAEhC;;;;AAIA,IAAMC,KAAK,GAAG,SAAAA,CAACC,GAAW;EACxBC,YAAY,CAACD,GAAG,CAAC;EACjB,OAAOF,UAAU,CAACE,GAAG,CAAC;AACxB,CAAC;AAED;AACA,SAASE,GAAGA,CAACC,IAAiB,EAAEC,IAAY,EAAEC,UAAsB,EAAEC,IAAU;EAC9E;EACAP,KAAK,CAACP,UAAU,CAACW,IAAI,CAAC,CAAC;EAEf,IAAAI,YAAA,GAAAD,IAAA,CAAAC,YAAY;IAAEC,WAAA,GAAAF,IAAA,CAAAE,WAAW;EAEjC;EACA,IAAMC,IAAI,GAAGd,OAAO,CAACS,IAAI,EAAEG,YAAY,CAAC;EACxC;EACAJ,IAAI,CAACO,SAAS,GAAGhB,UAAU,CAACe,IAAI,EAAEJ,UAAU,CAAC;EAE7C,IAAML,GAAG,GAAIW,UAAU,CAAC;IACtBT,GAAG,CAACC,IAAI,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,CAAC;EACnC,CAAC,EAAEM,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAClB,YAAY,CAACa,IAAI,CAAC,EAAED,WAAW,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,UAAU,CAAC,CAAuB;EAErG;EACAV,UAAU,CAACE,GAAG,CAAC,GAAG,CAAC;EACnBT,UAAU,CAACY,IAAI,EAAEH,GAAG,CAAC;AACvB;AAEA;;;;AAIA,OAAM,SAAUe,MAAMA,CAACZ,IAAkB;EACvC;EACA,IAAIA,IAAI,EAAEJ,KAAK,CAACP,UAAU,CAACW,IAAI,CAAC,CAAC;EACjC;EACA;EAAA,KACKa,MAAM,CAACC,IAAI,CAACnB,UAAU,CAAC,CAACoB,OAAO,CAACnB,KAAK,CAAC;AAC7C;AAEA;;;;;;AAMA,OAAM,SAAUoB,MAAMA,CAACC,KAA6C,EAAEC,MAAe,EAAEf,IAAW;EAChG;EACA;EACA,IAAMgB,QAAQ,GAAkBF,KAAK,CAACG,MAAM,GAAGH,KAAK,GAAG,CAACA,KAAK,CAAC;EAE9DE,QAAQ,CAACJ,OAAO,CAAC,UAACf,IAAiB;IACjCD,GAAG,CAACC,IAAI,EAAEV,gBAAgB,CAACU,IAAI,CAAC,EAAEN,SAAS,CAACwB,MAAM,CAAC,EAAEf,IAAI,IAAI,EAAE,CAAC;EAClE,CAAC,CAAC;EAEF,OAAOgB,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}