{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport rootReducer from \"../redux//rootReducer\"; // rootReducer dosyasını içe aktarın\nimport SecureLS from \"secure-ls\";\nimport { setAuthorizationHeader } from \"../api/apiCalls\";\nconst secureLS = new SecureLS();\nconst getStateFromStorage = () => {\n  const postAuth = secureLS.get(\"post-auth\");\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: undefined,\n    displayName: undefined,\n    image: undefined,\n    password: undefined\n  };\n  if (postAuth) {\n    return postAuth;\n  }\n  return stateInLocalStorage;\n};\nconst updateStateInStorage = newState => {\n  secureLS.set(\"post-auth\", newState);\n};\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"auth\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst configureStore = () => {\n  const initialState = getStateFromStorage();\n  setAuthorizationHeader(initialState);\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(persistedReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\n  store.subscribe(() => {\n    updateStateInStorage(store.getState());\n    setAuthorizationHeader(store.getState());\n  });\n  const persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n};\nexport default configureStore;","map":{"version":3,"names":["applyMiddleware","createStore","compose","thunk","persistStore","persistReducer","storage","rootReducer","SecureLS","setAuthorizationHeader","secureLS","getStateFromStorage","postAuth","get","stateInLocalStorage","isLoggedIn","username","undefined","displayName","image","password","updateStateInStorage","newState","set","persistConfig","key","whitelist","persistedReducer","configureStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","subscribe","getState","persistor"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/redux/configureStore.js"],"sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"../redux//rootReducer\"; // rootReducer dosyasını içe aktarın\r\nimport SecureLS from \"secure-ls\";\r\nimport { setAuthorizationHeader } from \"../api/apiCalls\";\r\n\r\nconst secureLS = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const postAuth = secureLS.get(\"post-auth\");\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined,\r\n  };\r\n\r\n  if (postAuth) {\r\n    return postAuth;\r\n  }\r\n  return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = (newState) => {\r\n  secureLS.set(\"post-auth\", newState);\r\n};\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"auth\"],\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst configureStore = () => {\r\n  const initialState = getStateFromStorage();\r\n  setAuthorizationHeader(initialState);\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(\r\n    persistedReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n    setAuthorizationHeader(store.getState());\r\n  });\r\n\r\n  const persistor = persistStore(store);\r\n\r\n  return { store, persistor };\r\n};\r\n\r\nexport default configureStore;\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC7D,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,WAAW,MAAM,uBAAuB,CAAC,CAAC;AACjD,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,sBAAsB,QAAQ,iBAAiB;AAExD,MAAMC,QAAQ,GAAG,IAAIF,QAAQ,CAAC,CAAC;AAE/B,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;EAChC,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAG,CAAC,WAAW,CAAC;EAE1C,IAAIC,mBAAmB,GAAG;IACxBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAEC,SAAS;IACnBC,WAAW,EAAED,SAAS;IACtBE,KAAK,EAAEF,SAAS;IAChBG,QAAQ,EAAEH;EACZ,CAAC;EAED,IAAIL,QAAQ,EAAE;IACZ,OAAOA,QAAQ;EACjB;EACA,OAAOE,mBAAmB;AAC5B,CAAC;AAED,MAAMO,oBAAoB,GAAIC,QAAQ,IAAK;EACzCZ,QAAQ,CAACa,GAAG,CAAC,WAAW,EAAED,QAAQ,CAAC;AACrC,CAAC;AAED,MAAME,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXnB,OAAO;EACPoB,SAAS,EAAE,CAAC,MAAM;AACpB,CAAC;AACD,MAAMC,gBAAgB,GAAGtB,cAAc,CAACmB,aAAa,EAAEjB,WAAW,CAAC;AAEnE,MAAMqB,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,YAAY,GAAGlB,mBAAmB,CAAC,CAAC;EAC1CF,sBAAsB,CAACoB,YAAY,CAAC;EACpC,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAI9B,OAAO;EACxD,MAAM+B,KAAK,GAAGhC,WAAW,CACvB0B,gBAAgB,EAChBE,YAAY,EACZC,gBAAgB,CAAC9B,eAAe,CAACG,KAAK,CAAC,CACzC,CAAC;EAED8B,KAAK,CAACC,SAAS,CAAC,MAAM;IACpBb,oBAAoB,CAACY,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;IACtC1B,sBAAsB,CAACwB,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAGhC,YAAY,CAAC6B,KAAK,CAAC;EAErC,OAAO;IAAEA,KAAK;IAAEG;EAAU,CAAC;AAC7B,CAAC;AAED,eAAeR,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}