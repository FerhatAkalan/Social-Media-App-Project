{"ast":null,"code":"import * as ACTIONS from \"./Constants\";\nimport { login, signup, logout, likePostApi, unlikePostApi } from \"../api/apiCalls\";\nexport const loginSuccess = authState => {\n  return async dispatch => {\n    dispatch({\n      type: ACTIONS.LOGIN_SUCCES,\n      payload: authState\n    });\n    if (authState.isLoggedIn) {\n      // Kullanıcı giriş yaptığında yapılması gereken işlemler\n      const likedPosts = await fetchLikedPosts(authState.username);\n      dispatch(updateLikedPosts(likedPosts));\n    }\n  };\n};\nexport const logoutSuccess = () => {\n  return async dispatch => {\n    await logout();\n    dispatch({\n      type: ACTIONS.LOGOUT_SUCCES\n    });\n    dispatch(updateLikedPosts({}));\n  };\n};\nexport const updateLikedPosts = likedPosts => {\n  return {\n    type: ACTIONS.UPDATE_LIKED_POSTS,\n    payload: likedPosts\n  };\n};\nexport const updateSuccess = _ref => {\n  let {\n    displayName,\n    image\n  } = _ref;\n  return {\n    type: ACTIONS.UPDATE_SUCCESS,\n    payload: {\n      displayName,\n      image\n    }\n  };\n};\nexport const updateAdminStatus = admin => ({\n  type: ACTIONS.UPDATE_ADMIN_STATUS,\n  payload: {\n    admin\n  }\n});\nexport const loginHandler = credentials => {\n  return async function (dispatch) {\n    const response = await login(credentials);\n    const authState = {\n      ...response.data.user,\n      password: credentials.password,\n      token: response.data.token\n    };\n    dispatch(loginSuccess(authState));\n    dispatch(updateAdminStatus(response.data.user.admin));\n    return response;\n  };\n};\nexport const signupHandler = user => {\n  return async function (dispatch) {\n    const response = await signup(user);\n    await dispatch(loginHandler(user));\n    return response;\n  };\n};\nexport const likePost = (postId, loggedInUsername) => {\n  return async dispatch => {\n    try {\n      await likePostApi(postId, loggedInUsername);\n      dispatch({\n        type: 'LIKE_POST',\n        payload: postId\n      });\n      dispatch(updateLikedPosts(await fetchLikedPosts(loggedInUsername)));\n    } catch (error) {\n      console.error('Error liking post:', error);\n    }\n  };\n};\nexport const unlikePost = (postId, loggedInUsername) => {\n  return async dispatch => {\n    try {\n      await unlikePostApi(postId, loggedInUsername);\n      dispatch({\n        type: 'UNLIKE_POST',\n        payload: postId\n      });\n      dispatch(updateLikedPosts(await fetchLikedPosts(loggedInUsername)));\n    } catch (error) {\n      console.error('Error unliking post:', error);\n    }\n  };\n};","map":{"version":3,"names":["ACTIONS","login","signup","logout","likePostApi","unlikePostApi","loginSuccess","authState","dispatch","type","LOGIN_SUCCES","payload","isLoggedIn","likedPosts","fetchLikedPosts","username","updateLikedPosts","logoutSuccess","LOGOUT_SUCCES","UPDATE_LIKED_POSTS","updateSuccess","_ref","displayName","image","UPDATE_SUCCESS","updateAdminStatus","admin","UPDATE_ADMIN_STATUS","loginHandler","credentials","response","data","user","password","token","signupHandler","likePost","postId","loggedInUsername","error","console","unlikePost"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/redux/authActions.js"],"sourcesContent":["import * as ACTIONS from \"./Constants\";\r\nimport { login, signup, logout,likePostApi,unlikePostApi } from \"../api/apiCalls\";\r\n\r\nexport const loginSuccess = (authState) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: ACTIONS.LOGIN_SUCCES,\r\n      payload: authState,\r\n    });\r\n\r\n    if (authState.isLoggedIn) {\r\n      // Kullanıcı giriş yaptığında yapılması gereken işlemler\r\n      const likedPosts = await fetchLikedPosts(authState.username);\r\n      dispatch(updateLikedPosts(likedPosts));\r\n    }\r\n  };\r\n};\r\n\r\nexport const logoutSuccess = () => {\r\n  return async (dispatch) => {\r\n    await logout();\r\n    dispatch({\r\n      type: ACTIONS.LOGOUT_SUCCES,\r\n    });\r\n    dispatch(updateLikedPosts({}));\r\n  };\r\n};\r\n\r\nexport const updateLikedPosts = (likedPosts) => {\r\n  return {\r\n    type: ACTIONS.UPDATE_LIKED_POSTS,\r\n    payload: likedPosts,\r\n  };\r\n};\r\n\r\n\r\nexport const updateSuccess = ({ displayName, image }) => {\r\n  return {\r\n    type: ACTIONS.UPDATE_SUCCESS,\r\n    payload: {\r\n      displayName,\r\n      image,\r\n    },\r\n  };\r\n};\r\n\r\nexport const updateAdminStatus = (admin) => ({\r\n  type: ACTIONS.UPDATE_ADMIN_STATUS,\r\n  payload: { admin },\r\n});\r\n\r\nexport const loginHandler = (credentials) => {\r\n  return async function (dispatch) {\r\n    const response = await login(credentials);\r\n    const authState = {\r\n      ...response.data.user,\r\n      password: credentials.password,\r\n      token: response.data.token,\r\n    };\r\n    dispatch(loginSuccess(authState));\r\n    dispatch(updateAdminStatus(response.data.user.admin));\r\n    return response;\r\n  };\r\n};\r\n\r\nexport const signupHandler = (user) => {\r\n  return async function (dispatch) {\r\n    const response = await signup(user);\r\n    await dispatch(loginHandler(user));\r\n    return response;\r\n  };\r\n};\r\nexport const likePost = (postId, loggedInUsername) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await likePostApi(postId, loggedInUsername);\r\n      dispatch({ type: 'LIKE_POST', payload: postId });\r\n      dispatch(updateLikedPosts(await fetchLikedPosts(loggedInUsername)));\r\n    } catch (error) {\r\n      console.error('Error liking post:', error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const unlikePost = (postId, loggedInUsername) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await unlikePostApi(postId, loggedInUsername);\r\n      dispatch({ type: 'UNLIKE_POST', payload: postId });\r\n      dispatch(updateLikedPosts(await fetchLikedPosts(loggedInUsername)));\r\n    } catch (error) {\r\n      console.error('Error unliking post:', error);\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}