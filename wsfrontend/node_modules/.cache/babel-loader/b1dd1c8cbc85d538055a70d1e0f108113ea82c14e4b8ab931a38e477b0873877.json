{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\ws-project\\\\wsfrontend\\\\src\\\\components\\\\ProfileCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileCard = props => {\n  _s();\n  const {} = useSelector(store => ({\n    username: store.username\n  }));\n  const pathUsername = props.match.params.username;\n  let message = \"We cannot edit.\";\n  if (pathUsername === props.loggedInUsername) {\n    message = \"We can edit.\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_s(ProfileCard, \"fDfkvjlIHcdOBqKOeXZ2copZz2I=\", false, function () {\n  return [useSelector];\n});\n_c = ProfileCard;\nconst mapStateToProps = store => {\n  return {\n    loggedInUsername: store.username\n  };\n};\nexport default connect(mapStateToProps)(withRouter(ProfileCard));\nvar _c;\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"names":["React","withRouter","useSelector","jsxDEV","_jsxDEV","ProfileCard","props","_s","store","username","pathUsername","match","params","message","loggedInUsername","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","connect","$RefreshReg$"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/components/ProfileCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProfileCard = (props) => {\r\n  const{}=useSelector((store)=>({\r\n    username:store.username\r\n  }))\r\n  const pathUsername = props.match.params.username;\r\n  let message = \"We cannot edit.\";\r\n  if (pathUsername === props.loggedInUsername) {\r\n    message = \"We can edit.\";\r\n  }\r\n  return <div>{message}</div>;\r\n};\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    loggedInUsername: store.username,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(ProfileCard));\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAK,CAAC,CAAC,GAACL,WAAW,CAAEM,KAAK,KAAI;IAC5BC,QAAQ,EAACD,KAAK,CAACC;EACjB,CAAC,CAAC,CAAC;EACH,MAAMC,YAAY,GAAGJ,KAAK,CAACK,KAAK,CAACC,MAAM,CAACH,QAAQ;EAChD,IAAII,OAAO,GAAG,iBAAiB;EAC/B,IAAIH,YAAY,KAAKJ,KAAK,CAACQ,gBAAgB,EAAE;IAC3CD,OAAO,GAAG,cAAc;EAC1B;EACA,oBAAOT,OAAA;IAAAW,QAAA,EAAMF;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7B,CAAC;AAACZ,EAAA,CAVIF,WAAW;EAAA,QACPH,WAAW;AAAA;AAAAkB,EAAA,GADff,WAAW;AAYjB,MAAMgB,eAAe,GAAIb,KAAK,IAAK;EACjC,OAAO;IACLM,gBAAgB,EAAEN,KAAK,CAACC;EAC1B,CAAC;AACH,CAAC;AAED,eAAea,OAAO,CAACD,eAAe,CAAC,CAACpB,UAAU,CAACI,WAAW,CAAC,CAAC;AAAC,IAAAe,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}