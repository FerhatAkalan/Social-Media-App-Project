{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n  'optgroup': selectWrap,\n  'option': selectWrap,\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\nmodule.exports = getMarkupWrap;","map":{"version":3,"names":["ExecutionEnvironment","require","invariant","dummyNode","canUseDOM","document","createElement","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","markupWrap","svgElements","forEach","nodeName","getMarkupWrap","process","env","NODE_ENV","undefined","hasOwnProperty","innerHTML","firstChild","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/fbjs/lib/getMarkupWrap.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}