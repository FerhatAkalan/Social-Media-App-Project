{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\ws-project\\\\wsfrontend\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport \"./bootstrap-override.scss\";\nimport App from \"./container/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./i18n\";\nimport ApiProgress from \"./shared/ApiProgress\";\n//import AuthenticationContext from \"./shared/AuthenticationContext\";\nimport { Provider } from \"react-redux\";\nimport { legacy_createStore as createStore } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loggedInState = {\n  isLoggedIN: true,\n  username: \"user1\",\n  displayName: \"display1\",\n  image: null,\n  password: \"P4ssword\"\n};\nconst defaultState = {\n  isLoggedIn: false,\n  username: undefined,\n  displayName: undefined,\n  image: undefined,\n  password: undefined\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    ...defaultState\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"logout-success\") {\n    return defaultState;\n  }\n  return state;\n};\nconst store = createStore(reducer, loggedInState);\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","ApiProgress","Provider","legacy_createStore","createStore","jsxDEV","_jsxDEV","loggedInState","isLoggedIN","username","displayName","image","password","defaultState","isLoggedIn","undefined","reducer","state","arguments","length","action","type","store","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport \"./bootstrap-override.scss\";\r\nimport App from \"./container/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./i18n\";\r\nimport ApiProgress from \"./shared/ApiProgress\";\r\n//import AuthenticationContext from \"./shared/AuthenticationContext\";\r\nimport { Provider } from \"react-redux\";\r\nimport { legacy_createStore as createStore } from \"redux\";\r\n\r\nconst loggedInState = {\r\n  isLoggedIN: true,\r\n  username: \"user1\",\r\n  displayName: \"display1\",\r\n  image: null,\r\n  password: \"P4ssword\",\r\n};\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  username: undefined,\r\n  displayName: undefined,\r\n  image: undefined,\r\n  password: undefined,\r\n};\r\n\r\nconst reducer = (state= {...defaultState}, action) => {\r\n  if (action.type === \"logout-success\") {\r\n    return defaultState;\r\n  }\r\n  return state;\r\n};\r\nconst store = createStore(reducer, loggedInState);\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAO,2BAA2B;AAClC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,QAAQ;AACf,OAAOC,WAAW,MAAM,sBAAsB;AAC9C;AACA,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE,OAAO;EACjBC,WAAW,EAAE,UAAU;EACvBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,KAAK;EACjBL,QAAQ,EAAEM,SAAS;EACnBL,WAAW,EAAEK,SAAS;EACtBJ,KAAK,EAAEI,SAAS;EAChBH,QAAQ,EAAEG;AACZ,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAsC;EAAA,IAArCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAH,SAAA,GAAAG,SAAA,MAAE;IAAC,GAAGL;EAAY,CAAC;EAAA,IAAEO,MAAM,GAAAF,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAH,SAAA;EAC/C,IAAIK,MAAM,CAACC,IAAI,KAAK,gBAAgB,EAAE;IACpC,OAAOR,YAAY;EACrB;EACA,OAAOI,KAAK;AACd,CAAC;AACD,MAAMK,KAAK,GAAGlB,WAAW,CAACY,OAAO,EAAET,aAAa,CAAC;AAEjD,MAAMgB,IAAI,GAAGzB,QAAQ,CAAC0B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTrB,OAAA,CAACJ,QAAQ;EAACoB,KAAK,EAAEA,KAAM;EAAAM,QAAA,eACrBtB,OAAA,CAACP,GAAG;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACZ,CAAC;;AAED;AACA;AACA;AACAhC,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}