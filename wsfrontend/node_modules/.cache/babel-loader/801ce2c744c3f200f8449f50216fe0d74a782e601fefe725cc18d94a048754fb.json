{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n};\nmodule.exports = ReactInstanceMap;","map":{"version":3,"names":["ReactInstanceMap","remove","key","_reactInternalInstance","undefined","get","has","set","value","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactInstanceMap.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAIA,gBAAgB,GAAG;EAErB;AACF;AACA;AACA;AACA;EACEC,MAAM,EAAE,SAAAA,CAAUC,GAAG,EAAE;IACrBA,GAAG,CAACC,sBAAsB,GAAGC,SAAS;EACxC,CAAC;EAEDC,GAAG,EAAE,SAAAA,CAAUH,GAAG,EAAE;IAClB,OAAOA,GAAG,CAACC,sBAAsB;EACnC,CAAC;EAEDG,GAAG,EAAE,SAAAA,CAAUJ,GAAG,EAAE;IAClB,OAAOA,GAAG,CAACC,sBAAsB,KAAKC,SAAS;EACjD,CAAC;EAEDG,GAAG,EAAE,SAAAA,CAAUL,GAAG,EAAEM,KAAK,EAAE;IACzBN,GAAG,CAACC,sBAAsB,GAAGK,KAAK;EACpC;AAEF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGV,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}