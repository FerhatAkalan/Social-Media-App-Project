{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactPerf = require('./ReactPerf');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  return Component(this.props, this.context, this.updater);\n};\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(context);\n    var Component = this._currentElement.type;\n\n    // Initialize the public class\n    var inst;\n    var renderedElement;\n\n    // This is a way to detect if Component is a stateless arrow function\n    // component, which is not newable. It might not be 100% reliable but is\n    // something we can do until we start detecting that Component extends\n    // React.Component. We already assume that typeof Component === 'function'.\n    var canInstantiate = ('prototype' in Component);\n    if (canInstantiate) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactCurrentOwner.current = this;\n        try {\n          inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n        } finally {\n          ReactCurrentOwner.current = null;\n        }\n      } else {\n        inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n      }\n    }\n    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {\n      renderedElement = inst;\n      inst = new StatelessComponent(Component);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;\n      } else {\n        // We support ES6 inheriting from React.Component, the module pattern,\n        // and stateless components, but not ES6 classes that don't extend\n        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;\n      }\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = ReactUpdateQueue;\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;\n    }\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    if (inst.componentWillMount) {\n      inst.componentWillMount();\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n    this._renderedComponent = this._instantiateReactComponent(renderedElement);\n    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n    return markup;\n  },\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function () {\n    var inst = this._instance;\n    if (inst.componentWillUnmount) {\n      inst.componentWillUnmount();\n    }\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n    this._instance = null;\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var maskedContext = null;\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n      }\n    }\n    return maskedContext;\n  },\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;\n      }\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function (newProps) {\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.propTypes) {\n        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);\n      }\n    }\n    return newProps;\n  },\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function (propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n          error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // top-level render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;\n          } else {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;\n          }\n        }\n      }\n    }\n  },\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n    this._pendingElement = null;\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);\n    }\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    }\n  },\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);\n    var nextProps;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement === nextParentElement) {\n      // Skip checking prop types again -- we don't read inst.props to avoid\n      // warning for DOM component props in this upgrade\n      nextProps = nextParentElement.props;\n    } else {\n      nextProps = this._processProps(nextParentElement.props);\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;\n    }\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n    if (!queue) {\n      return inst.state;\n    }\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n    return nextState;\n  },\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var inst = this._instance;\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n    this._updateRenderedComponent(transaction, unmaskedContext);\n    if (hasComponentDidUpdate) {\n      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n    }\n  },\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);\n      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n  },\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n    return renderedComponent;\n  },\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedComponent;\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactCurrentOwner.current = null;\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n    return renderedComponent;\n  },\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (inst instanceof StatelessComponent) {\n      return null;\n    }\n    return inst;\n  },\n  // Stub\n  _instantiateReactComponent: null\n};\nReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent',\n  _renderValidatedComponent: '_renderValidatedComponent'\n});\nvar ReactCompositeComponent = {\n  Mixin: ReactCompositeComponentMixin\n};\nmodule.exports = ReactCompositeComponent;","map":{"version":3,"names":["ReactComponentEnvironment","require","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdateQueue","assign","emptyObject","invariant","shouldUpdateReactComponent","warning","getDeclarationErrorAddendum","component","owner","_currentElement","_owner","name","getName","StatelessComponent","Component","prototype","render","get","type","props","context","updater","nextMountID","ReactCompositeComponentMixin","construct","element","_rootNodeID","_instance","_pendingElement","_pendingStateQueue","_pendingReplaceState","_pendingForceUpdate","_renderedComponent","_context","_mountOrder","_topLevelWrapper","_pendingCallbacks","mountComponent","rootID","transaction","publicProps","_processProps","publicContext","_processContext","inst","renderedElement","canInstantiate","process","env","NODE_ENV","current","isValidElement","displayName","undefined","isReactComponent","refs","set","getInitialState","isReactClassApproved","getDefaultProps","propTypes","contextTypes","componentShouldUpdate","componentDidUnmount","componentWillRecieveProps","initialState","state","Array","isArray","componentWillMount","_processPendingState","_renderValidatedComponent","_instantiateReactComponent","markup","_processChildContext","componentDidMount","getReactMountReady","enqueue","unmountComponent","componentWillUnmount","remove","_maskContext","maskedContext","contextName","_checkPropTypes","currentContext","childContext","getChildContext","childContextTypes","newProps","prop","location","componentName","propName","hasOwnProperty","error","ex","Error","addendum","message","receiveComponent","nextElement","nextContext","prevElement","prevContext","updateComponent","performUpdateIfNecessary","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","nextProps","componentWillReceiveProps","nextState","shouldUpdate","shouldComponentUpdate","_performComponentUpdate","queue","replace","length","i","partial","call","unmaskedContext","hasComponentDidUpdate","Boolean","componentDidUpdate","prevProps","prevState","componentWillUpdate","_updateRenderedComponent","bind","prevComponentInstance","prevRenderedElement","nextRenderedElement","thisID","prevComponentID","nextMarkup","_replaceNodeWithMarkupByID","replaceNodeWithMarkupByID","_renderValidatedComponentWithoutOwnerOrContext","renderedComponent","_isMockFunction","attachRef","ref","getPublicInstance","publicComponentInstance","detachRef","constructor","measureMethods","ReactCompositeComponent","Mixin","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactCompositeComponent.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactPerf = require('./ReactPerf');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  return Component(this.props, this.context, this.updater);\n};\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedComponent = null;\n\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    // Initialize the public class\n    var inst;\n    var renderedElement;\n\n    // This is a way to detect if Component is a stateless arrow function\n    // component, which is not newable. It might not be 100% reliable but is\n    // something we can do until we start detecting that Component extends\n    // React.Component. We already assume that typeof Component === 'function'.\n    var canInstantiate = ('prototype' in Component);\n\n    if (canInstantiate) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactCurrentOwner.current = this;\n        try {\n          inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n        } finally {\n          ReactCurrentOwner.current = null;\n        }\n      } else {\n        inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n      }\n    }\n\n    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {\n      renderedElement = inst;\n      inst = new StatelessComponent(Component);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;\n      } else {\n        // We support ES6 inheriting from React.Component, the module pattern,\n        // and stateless components, but not ES6 classes that don't extend\n        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;\n      }\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = ReactUpdateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    if (inst.componentWillMount) {\n      inst.componentWillMount();\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    this._renderedComponent = this._instantiateReactComponent(renderedElement);\n\n    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function () {\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount) {\n      inst.componentWillUnmount();\n    }\n\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n    this._instance = null;\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var maskedContext = null;\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;\n      }\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function (newProps) {\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.propTypes) {\n        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);\n      }\n    }\n    return newProps;\n  },\n\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function (propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n          error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // top-level render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;\n          } else {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;\n          }\n        }\n      }\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);\n    }\n\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n\n    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);\n    var nextProps;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement === nextParentElement) {\n      // Skip checking prop types again -- we don't read inst.props to avoid\n      // warning for DOM component props in this upgrade\n      nextProps = nextParentElement.props;\n    } else {\n      nextProps = this._processProps(nextParentElement.props);\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n\n    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;\n    }\n\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n\n      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);\n      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedComponent;\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactCurrentOwner.current = null;\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (inst instanceof StatelessComponent) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent',\n  _renderValidatedComponent: '_renderValidatedComponent'\n});\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}