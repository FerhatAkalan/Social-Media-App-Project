{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const useApiProgress = (apiMethod, apiPath) => {\n  _s();\n  const [pendingApiCall, setPendingApiCall] = useState(false);\n  useEffect(() => {\n    let requestInterceptor, responseInterceptor;\n    const updateApiCallFor = (method, url, inProgress) => {\n      if (url.startsWith(apiPath) && method === apiMethod) {\n        setPendingApiCall(inProgress);\n      }\n    };\n    const registerInterceptors = () => {\n      requestInterceptor = axios.interceptors.request.use(request => {\n        const {\n          url,\n          method\n        } = request;\n        updateApiCallFor(method, url, true);\n        return request;\n      });\n      responseInterceptor = axios.interceptors.response.use(response => {\n        const {\n          url,\n          method\n        } = response.config;\n        updateApiCallFor(method, url, false);\n        return response;\n      }, error => {\n        const {\n          url,\n          method\n        } = error.config;\n        updateApiCallFor(method, url, false);\n        throw error;\n      });\n    };\n    const unregisterInterceptor = () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n    registerInterceptors();\n    return function unmount() {\n      unregisterInterceptor();\n    };\n  }, [apiPath, apiMethod]);\n  return pendingApiCall;\n};\n_s(useApiProgress, \"dxeikoFXtsTGpF/7CQdkmajlavs=\");","map":{"version":3,"names":["useState","useEffect","axios","useApiProgress","apiMethod","apiPath","_s","pendingApiCall","setPendingApiCall","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","registerInterceptors","interceptors","request","use","response","config","error","unregisterInterceptor","eject","unmount"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/shared/ApiProgress.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useApiProgress = (apiMethod, apiPath) => {\r\n  const [pendingApiCall, setPendingApiCall] = useState(false);\r\n  useEffect(() => {\r\n    let requestInterceptor, responseInterceptor;\r\n\r\n    const updateApiCallFor = (method, url, inProgress) => {\r\n      if (url.startsWith(apiPath) && method === apiMethod) {\r\n        setPendingApiCall(inProgress);\r\n      }\r\n    };\r\n    const registerInterceptors = () => {\r\n      requestInterceptor = axios.interceptors.request.use((request) => {\r\n        const { url, method } = request;\r\n        updateApiCallFor(method, url, true);\r\n        return request;\r\n      });\r\n\r\n      responseInterceptor = axios.interceptors.response.use(\r\n        (response) => {\r\n          const { url, method } = response.config;\r\n          updateApiCallFor(method, url, false);\r\n          return response;\r\n        },\r\n        (error) => {\r\n          const { url, method } = error.config;\r\n          updateApiCallFor(method, url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    };\r\n    const unregisterInterceptor = () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n\r\n    registerInterceptors();\r\n    return function unmount() {\r\n      unregisterInterceptor();\r\n    };\r\n  }, [apiPath, apiMethod]);\r\n  return pendingApiCall;\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,cAAc,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3DC,SAAS,CAAC,MAAM;IACd,IAAIQ,kBAAkB,EAAEC,mBAAmB;IAE3C,MAAMC,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,GAAG,EAAEC,UAAU,KAAK;MACpD,IAAID,GAAG,CAACE,UAAU,CAACV,OAAO,CAAC,IAAIO,MAAM,KAAKR,SAAS,EAAE;QACnDI,iBAAiB,CAACM,UAAU,CAAC;MAC/B;IACF,CAAC;IACD,MAAME,oBAAoB,GAAGA,CAAA,KAAM;MACjCP,kBAAkB,GAAGP,KAAK,CAACe,YAAY,CAACC,OAAO,CAACC,GAAG,CAAED,OAAO,IAAK;QAC/D,MAAM;UAAEL,GAAG;UAAED;QAAO,CAAC,GAAGM,OAAO;QAC/BP,gBAAgB,CAACC,MAAM,EAAEC,GAAG,EAAE,IAAI,CAAC;QACnC,OAAOK,OAAO;MAChB,CAAC,CAAC;MAEFR,mBAAmB,GAAGR,KAAK,CAACe,YAAY,CAACG,QAAQ,CAACD,GAAG,CAClDC,QAAQ,IAAK;QACZ,MAAM;UAAEP,GAAG;UAAED;QAAO,CAAC,GAAGQ,QAAQ,CAACC,MAAM;QACvCV,gBAAgB,CAACC,MAAM,EAAEC,GAAG,EAAE,KAAK,CAAC;QACpC,OAAOO,QAAQ;MACjB,CAAC,EACAE,KAAK,IAAK;QACT,MAAM;UAAET,GAAG;UAAED;QAAO,CAAC,GAAGU,KAAK,CAACD,MAAM;QACpCV,gBAAgB,CAACC,MAAM,EAAEC,GAAG,EAAE,KAAK,CAAC;QACpC,MAAMS,KAAK;MACb,CACF,CAAC;IACH,CAAC;IACD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;MAClCrB,KAAK,CAACe,YAAY,CAACC,OAAO,CAACM,KAAK,CAACf,kBAAkB,CAAC;MACpDP,KAAK,CAACe,YAAY,CAACG,QAAQ,CAACI,KAAK,CAACd,mBAAmB,CAAC;IACxD,CAAC;IAEDM,oBAAoB,CAAC,CAAC;IACtB,OAAO,SAASS,OAAOA,CAAA,EAAG;MACxBF,qBAAqB,CAAC,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAAClB,OAAO,EAAED,SAAS,CAAC,CAAC;EACxB,OAAOG,cAAc;AACvB,CAAC;AAACD,EAAA,CAzCWH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}