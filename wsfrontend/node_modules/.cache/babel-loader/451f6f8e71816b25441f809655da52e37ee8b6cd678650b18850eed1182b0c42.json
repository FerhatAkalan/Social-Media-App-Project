{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n    return selection || {\n      start: 0,\n      end: 0\n    };\n  },\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\nmodule.exports = ReactInputSelection;","map":{"version":3,"names":["ReactDOMSelection","require","containsNode","focusNode","getActiveElement","isInDocument","node","document","documentElement","ReactInputSelection","hasSelectionCapabilities","elem","nodeName","toLowerCase","type","contentEditable","getSelectionInformation","focusedElem","selectionRange","getSelection","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","setSelection","input","selection","start","selectionStart","end","selectionEnd","range","createRange","parentElement","moveStart","value","length","moveEnd","getOffsets","offsets","Math","min","createTextRange","collapse","select","setOffsets","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactInputSelection.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}