{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\Social-Media-App-Project\\\\wsfrontend\\\\src\\\\components\\\\LikedPostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getLikedPosts } from \"../api/apiCalls\";\nimport PostView from \"./PostView\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikedPostFeed = () => {\n  _s();\n  const [likedPosts, setLikedPosts] = useState([]);\n  const {\n    username\n  } = useParams();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    const loadLikedPosts = async () => {\n      try {\n        const response = await getLikedPosts(username);\n        setLikedPosts(response.content); // Sadece beğenilen postları set ediyoruz\n      } catch (error) {\n        console.error(\"Error loading liked posts:\", error);\n      }\n    };\n    loadLikedPosts();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: likedPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger text-center\",\n      children: t(\"No liked posts yet.\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : likedPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LikedPostFeed, \"xh1+tmvxjhFrIZx0VHMhywSqANA=\", false, function () {\n  return [useParams, useTranslation];\n});\n_c = LikedPostFeed;\nexport default LikedPostFeed;\nvar _c;\n$RefreshReg$(_c, \"LikedPostFeed\");","map":{"version":3,"names":["React","useEffect","useState","getLikedPosts","PostView","useParams","useTranslation","jsxDEV","_jsxDEV","LikedPostFeed","_s","likedPosts","setLikedPosts","username","t","loadLikedPosts","response","content","error","console","children","length","className","fileName","_jsxFileName","lineNumber","columnNumber","map","post","id","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/components/LikedPostFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getLikedPosts } from \"../api/apiCalls\";\r\nimport PostView from \"./PostView\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst LikedPostFeed = () => {\r\n  const [likedPosts, setLikedPosts] = useState([]);\r\n  const { username } = useParams();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const loadLikedPosts = async () => {\r\n      try {\r\n        const response = await getLikedPosts(username);\r\n        setLikedPosts(response.content); // Sadece beğenilen postları set ediyoruz\r\n      } catch (error) {\r\n        console.error(\"Error loading liked posts:\", error);\r\n      }\r\n    };\r\n    loadLikedPosts();\r\n  }, [username]);\r\n\r\n  return (\r\n    <div>\r\n      {likedPosts.length === 0 ? (\r\n        <div className=\"alert alert-danger text-center\">\r\n          {t(\"No liked posts yet.\")}\r\n        </div>\r\n      ) : (\r\n        likedPosts.map((post) => (\r\n          <div key={post.id} className=\"mb-\">\r\n            <PostView post={post}></PostView>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikedPostFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEW;EAAS,CAAC,GAAGR,SAAS,CAAC,CAAC;EAChC,MAAM;IAAES;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IACd,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,aAAa,CAACU,QAAQ,CAAC;QAC9CD,aAAa,CAACI,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDH,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAAY,QAAA,EACGT,UAAU,CAACU,MAAM,KAAK,CAAC,gBACtBb,OAAA;MAAKc,SAAS,EAAC,gCAAgC;MAAAF,QAAA,EAC5CN,CAAC,CAAC,qBAAqB;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,GAENf,UAAU,CAACgB,GAAG,CAAEC,IAAI,iBAClBpB,OAAA;MAAmBc,SAAS,EAAC,KAAK;MAAAF,QAAA,eAChCZ,OAAA,CAACJ,QAAQ;QAACwB,IAAI,EAAEA;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC,GADzBE,IAAI,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCID,aAAa;EAAA,QAEIJ,SAAS,EAChBC,cAAc;AAAA;AAAAwB,EAAA,GAHxBrB,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}