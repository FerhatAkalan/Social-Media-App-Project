{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\Social-Media-App-Project\\\\wsfrontend\\\\src\\\\components\\\\LikedPostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getLikedPosts } from \"../api/apiCalls\";\nimport PostView from \"./PostView\";\nimport Spinner from \"../components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikedPostFeed = () => {\n  _s();\n  const [likedPosts, setLikedPosts] = useState([]);\n  const {\n    username\n  } = useParams();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    const loadLikedPosts = async () => {\n      try {\n        const response = await getLikedPosts(username);\n        console.log(\"API Response:\", response); // API yanıtını kontrol et\n        setLikedPosts(response.content); // Sadece beğenilen postları set ediyoruz\n      } catch (error) {\n        console.error(\"Error loading liked posts:\", error);\n      }\n    };\n    loadLikedPosts();\n  }, [username]);\n  const loggedInUser = useSelector(store => store.username); // Burada login olan kullanıcının adını aldığınızı varsayıyorum\n  const filteredLikedPosts = likedPosts.filter(post => post.user.username !== loggedInUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredLikedPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center\",\n      children: t(\"No liked posts yet.\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : filteredLikedPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LikedPostFeed, \"8wZNQA19ttCa61h7Anog9whuoJU=\", false, function () {\n  return [useParams, useTranslation, useSelector];\n});\n_c = LikedPostFeed;\nexport default LikedPostFeed;\nvar _c;\n$RefreshReg$(_c, \"LikedPostFeed\");","map":{"version":3,"names":["React","useEffect","useState","getLikedPosts","PostView","Spinner","useParams","useTranslation","useSelector","jsxDEV","_jsxDEV","LikedPostFeed","_s","likedPosts","setLikedPosts","username","t","loadLikedPosts","response","console","log","content","error","loggedInUser","store","filteredLikedPosts","filter","post","user","children","length","className","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/components/LikedPostFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getLikedPosts } from \"../api/apiCalls\";\r\nimport PostView from \"./PostView\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst LikedPostFeed = () => {\r\n  const [likedPosts, setLikedPosts] = useState([]);\r\n  const { username } = useParams();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const loadLikedPosts = async () => {\r\n      try {\r\n        const response = await getLikedPosts(username);\r\n        console.log(\"API Response:\", response); // API yanıtını kontrol et\r\n        setLikedPosts(response.content); // Sadece beğenilen postları set ediyoruz\r\n      } catch (error) {\r\n        console.error(\"Error loading liked posts:\", error);\r\n      }\r\n    };\r\n    loadLikedPosts();\r\n  }, [username]);\r\n\r\n  const loggedInUser = useSelector((store) => store.username); // Burada login olan kullanıcının adını aldığınızı varsayıyorum\r\n  const filteredLikedPosts = likedPosts.filter(post => post.user.username !== loggedInUser);\r\n\r\n  return (\r\n    <div>\r\n      {filteredLikedPosts.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          {t(\"No liked posts yet.\")}\r\n        </div>\r\n      ) : (\r\n        filteredLikedPosts.map((post) => (\r\n          <div key={post.id} className=\"mb-\">\r\n            <PostView post={post}></PostView>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikedPostFeed;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEa;EAAS,CAAC,GAAGT,SAAS,CAAC,CAAC;EAChC,MAAM;IAAEU;EAAE,CAAC,GAAGT,cAAc,CAAC,CAAC;EAE9BN,SAAS,CAAC,MAAM;IACd,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,aAAa,CAACY,QAAQ,CAAC;QAC9CI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC,CAAC,CAAC;QACxCJ,aAAa,CAACI,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,MAAMQ,YAAY,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACT,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAMU,kBAAkB,GAAGZ,UAAU,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACb,QAAQ,KAAKQ,YAAY,CAAC;EAEzF,oBACEb,OAAA;IAAAmB,QAAA,EACGJ,kBAAkB,CAACK,MAAM,KAAK,CAAC,gBAC9BpB,OAAA;MAAKqB,SAAS,EAAC,8BAA8B;MAAAF,QAAA,EAC1Cb,CAAC,CAAC,qBAAqB;IAAC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,GAENV,kBAAkB,CAACW,GAAG,CAAET,IAAI,iBAC1BjB,OAAA;MAAmBqB,SAAS,EAAC,KAAK;MAAAF,QAAA,eAChCnB,OAAA,CAACN,QAAQ;QAACuB,IAAI,EAAEA;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC,GADzBR,IAAI,CAACU,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CApCID,aAAa;EAAA,QAEIL,SAAS,EAChBC,cAAc,EAePC,WAAW;AAAA;AAAA8B,EAAA,GAlB5B3B,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}