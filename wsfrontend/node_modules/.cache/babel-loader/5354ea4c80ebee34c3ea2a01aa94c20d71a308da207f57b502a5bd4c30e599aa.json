{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\nvar valueContextKey = ReactDOMSelect.valueContextKey;\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, context) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;\n    }\n\n    // Look up whether this option is 'selected' via context\n    var selectValue = context[valueContextKey];\n\n    // If context key is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === '' + props.value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === '' + props.value;\n      }\n    }\n    inst._wrapperState = {\n      selected: selected\n    };\n  },\n  getNativeProps: function (inst, props, context) {\n    var nativeProps = assign({\n      selected: undefined,\n      children: undefined\n    }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      nativeProps.selected = inst._wrapperState.selected;\n    }\n    var content = '';\n\n    // Flatten children and warn if they aren't strings or numbers;\n    // invalid types are ignored.\n    ReactChildren.forEach(props.children, function (child) {\n      if (child == null) {\n        return;\n      }\n      if (typeof child === 'string' || typeof child === 'number') {\n        content += child;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;\n      }\n    });\n    if (content) {\n      nativeProps.children = content;\n    }\n    return nativeProps;\n  }\n};\nmodule.exports = ReactDOMOption;","map":{"version":3,"names":["ReactChildren","require","ReactDOMSelect","assign","warning","valueContextKey","ReactDOMOption","mountWrapper","inst","props","context","process","env","NODE_ENV","selected","undefined","selectValue","Array","isArray","i","length","value","_wrapperState","getNativeProps","nativeProps","children","content","forEach","child","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactDOMOption.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = ReactDOMSelect.valueContextKey;\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, context) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;\n    }\n\n    // Look up whether this option is 'selected' via context\n    var selectValue = context[valueContextKey];\n\n    // If context key is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === '' + props.value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === '' + props.value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  getNativeProps: function (inst, props, context) {\n    var nativeProps = assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      nativeProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = '';\n\n    // Flatten children and warn if they aren't strings or numbers;\n    // invalid types are ignored.\n    ReactChildren.forEach(props.children, function (child) {\n      if (child == null) {\n        return;\n      }\n      if (typeof child === 'string' || typeof child === 'number') {\n        content += child;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;\n      }\n    });\n\n    if (content) {\n      nativeProps.children = content;\n    }\n\n    return nativeProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAEhD,IAAIE,MAAM,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AACvC,IAAIG,OAAO,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAEzC,IAAII,eAAe,GAAGH,cAAc,CAACG,eAAe;;AAEpD;AACA;AACA;AACA,IAAIC,cAAc,GAAG;EACnBC,YAAY,EAAE,SAAAA,CAAUC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAC5C;IACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzCF,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAACK,KAAK,CAACK,QAAQ,IAAI,IAAI,EAAE,iEAAiE,GAAG,iCAAiC,CAAC,GAAGC,SAAS;IAC5L;;IAEA;IACA,IAAIC,WAAW,GAAGN,OAAO,CAACL,eAAe,CAAC;;IAE1C;IACA;IACA,IAAIS,QAAQ,GAAG,IAAI;IACnB,IAAIE,WAAW,IAAI,IAAI,EAAE;MACvBF,QAAQ,GAAG,KAAK;MAChB,IAAIG,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAE;QAC9B;QACA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UAC3C,IAAI,EAAE,GAAGH,WAAW,CAACG,CAAC,CAAC,KAAK,EAAE,GAAGV,KAAK,CAACY,KAAK,EAAE;YAC5CP,QAAQ,GAAG,IAAI;YACf;UACF;QACF;MACF,CAAC,MAAM;QACLA,QAAQ,GAAG,EAAE,GAAGE,WAAW,KAAK,EAAE,GAAGP,KAAK,CAACY,KAAK;MAClD;IACF;IAEAb,IAAI,CAACc,aAAa,GAAG;MAAER,QAAQ,EAAEA;IAAS,CAAC;EAC7C,CAAC;EAEDS,cAAc,EAAE,SAAAA,CAAUf,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAC9C,IAAIc,WAAW,GAAGrB,MAAM,CAAC;MAAEW,QAAQ,EAAEC,SAAS;MAAEU,QAAQ,EAAEV;IAAU,CAAC,EAAEN,KAAK,CAAC;;IAE7E;IACA;IACA,IAAID,IAAI,CAACc,aAAa,CAACR,QAAQ,IAAI,IAAI,EAAE;MACvCU,WAAW,CAACV,QAAQ,GAAGN,IAAI,CAACc,aAAa,CAACR,QAAQ;IACpD;IAEA,IAAIY,OAAO,GAAG,EAAE;;IAEhB;IACA;IACA1B,aAAa,CAAC2B,OAAO,CAAClB,KAAK,CAACgB,QAAQ,EAAE,UAAUG,KAAK,EAAE;MACrD,IAAIA,KAAK,IAAI,IAAI,EAAE;QACjB;MACF;MACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC1DF,OAAO,IAAIE,KAAK;MAClB,CAAC,MAAM;QACLjB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGT,OAAO,CAAC,KAAK,EAAE,8DAA8D,CAAC,GAAGW,SAAS;MACpI;IACF,CAAC,CAAC;IAEF,IAAIW,OAAO,EAAE;MACXF,WAAW,CAACC,QAAQ,GAAGC,OAAO;IAChC;IAEA,OAAOF,WAAW;EACpB;AAEF,CAAC;AAEDK,MAAM,CAACC,OAAO,GAAGxB,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}