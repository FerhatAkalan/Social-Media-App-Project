{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\ws-project\\\\wsfrontend\\\\src\\\\components\\\\PostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getPosts } from \"../api/apiCalls\";\nimport { useTranslation } from \"react-i18next\";\nimport PostView from \"./PostView\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport Spinner from \"../components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostFeed = () => {\n  _s();\n  const [postPage, setPostPage] = useState({\n    content: [],\n    last: true,\n    number: 0\n  });\n  const {\n    t\n  } = useTranslation();\n  const {\n    username\n  } = useParams();\n  const path = username ? `/api/1.0/users/${username}/posts?page=` : \"/api/1.0/posts?page=\";\n  const pendingApiCall = useApiProgress(\"get\", path);\n  useEffect(() => {\n    loadPosts();\n  }, []);\n  const loadPosts = async page => {\n    try {\n      const response = await getPosts(username, page);\n      setPostPage(previousPostPage => ({\n        ...response.data,\n        content: [...previousPostPage.content, ...response.data.content]\n      }));\n    } catch (error) {}\n  };\n  const {\n    content,\n    last,\n    number\n  } = postPage;\n  if (content.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary text-center\",\n      children: t(\"There are no posts\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [content.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 flex-grow-1\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), !last && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary text-center\",\n      onClick: pendingApiCall ? () => {} : () => loadPosts(number + 1),\n      style: {\n        cursor: pendingApiCall ? \"wait\" : \"pointer\"\n      },\n      children: pendingApiCall ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this) : t(\"Load old posts\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PostFeed, \"/B1oIVADFggckPKAdtt1dkHOzVs=\", false, function () {\n  return [useTranslation, useParams, useApiProgress];\n});\n_c = PostFeed;\nexport default PostFeed;\nvar _c;\n$RefreshReg$(_c, \"PostFeed\");","map":{"version":3,"names":["React","useEffect","useState","getPosts","useTranslation","PostView","useApiProgress","Spinner","useParams","jsxDEV","_jsxDEV","PostFeed","_s","postPage","setPostPage","content","last","number","t","username","path","pendingApiCall","loadPosts","page","response","previousPostPage","data","error","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","id","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/components/PostFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getPosts } from \"../api/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PostView from \"./PostView\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PostFeed = () => {\r\n  const [postPage, setPostPage] = useState({\r\n    content: [],\r\n    last: true,\r\n    number: 0,\r\n  });\r\n\r\n  const { t } = useTranslation();\r\n  const { username } = useParams();\r\n  const path = username ? `/api/1.0/users/${username}/posts?page=` : \"/api/1.0/posts?page=\";\r\n  \r\n  const pendingApiCall = useApiProgress(\"get\", path);\r\n\r\n  useEffect(() => {\r\n    loadPosts();\r\n  }, []);\r\n\r\n  const loadPosts = async (page) => {\r\n    try {\r\n      const response = await getPosts(username,page);\r\n      setPostPage((previousPostPage) => ({\r\n        ...response.data,\r\n        content: [...previousPostPage.content, ...response.data.content],\r\n      }));\r\n    } catch (error) {}\r\n  };\r\n\r\n  const { content, last, number } = postPage;\r\n\r\n  if (content.length === 0) {\r\n    return (\r\n      <div className=\"alert alert-secondary text-center\">\r\n        {t(\"There are no posts\")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {content.map((post) => (\r\n        <div key={post.id} className=\"mb-2 flex-grow-1\">\r\n          <PostView post={post}></PostView>\r\n        </div>\r\n      ))}\r\n      {!last && (\r\n        <div\r\n          className=\"alert alert-secondary text-center\"\r\n          onClick={pendingApiCall ? () => {} : () => loadPosts(number + 1)}\r\n          style={{ cursor: pendingApiCall ? \"wait\" : \"pointer\" }}\r\n        >\r\n          {pendingApiCall ? <Spinner /> : t(\"Load old posts\")}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostFeed;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}