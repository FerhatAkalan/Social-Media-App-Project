{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar assign = require('./Object.assign');\nvar canDefineProperty = require('./canDefineProperty');\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    Object.freeze(element.props);\n    Object.freeze(element);\n  }\n  return element;\n};\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n};\nReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\n  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);\n  if (process.env.NODE_ENV !== 'production') {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n  return newElement;\n};\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\nmodule.exports = ReactElement;","map":{"version":3,"names":["ReactCurrentOwner","require","assign","canDefineProperty","REACT_ELEMENT_TYPE","Symbol","RESERVED_PROPS","key","ref","__self","__source","ReactElement","type","self","source","owner","props","element","$$typeof","_owner","process","env","NODE_ENV","_store","Object","defineProperty","configurable","enumerable","writable","value","validated","_self","_source","freeze","createElement","config","children","propName","undefined","hasOwnProperty","childrenLength","arguments","length","childArray","Array","i","defaultProps","current","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","cloneAndReplaceProps","newProps","cloneElement","isValidElement","object","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactElement.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar assign = require('./Object.assign');\nvar canDefineProperty = require('./canDefineProperty');\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    Object.freeze(element.props);\n    Object.freeze(element);\n  }\n\n  return element;\n};\n\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\nReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\n  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n\n  return newElement;\n};\n\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}