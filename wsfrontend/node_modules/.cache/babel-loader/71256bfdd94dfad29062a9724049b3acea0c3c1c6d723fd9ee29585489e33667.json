{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\Social-Media-App-Project\\\\wsfrontend\\\\src\\\\components\\\\LikedPostFeed.js\",\n  _s = $RefreshSig$();\n// LikedPostFeed.js\nimport React, { useEffect, useState } from \"react\";\nimport { getLikedPosts } from \"../api/apiCalls\";\nimport Spinner from \"../components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport PostView from \"./PostView\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LikedPostFeed = () => {\n  _s();\n  const [newPostCount, setNewPostCount] = useState(0);\n  const {\n    t\n  } = useTranslation();\n  const {\n    username\n  } = useParams();\n  const path = username ? `/api/1.0/users/${username}/posts?page=` : \"/api/1.0/posts?page=\";\n  const initialPostLoadProgress = useApiProgress(\"get\", path);\n  let lastPostId = 0;\n  let firstPostId = 0;\n  if (postPage.content.length > 0) {\n    firstPostId = postPage.content[0].id;\n    const lastPostIndex = postPage.content.length - 1;\n    lastPostId = postPage.content[lastPostIndex].id;\n  }\n  const oldPostPath = username ? `/api/1.0/users/${username}/posts/${lastPostId}` : `/api/1.0/posts/${lastPostId}`;\n  const loadOldPostProgress = useApiProgress(\"get\", oldPostPath, true);\n  const newPostPath = username ? `/api/1.0/users/${username}/posts/${firstPostId}?direction=after` : `/api/1.0/posts/${firstPostId}?direction=after`;\n  const loadNewPostProgress = useApiProgress(\"get\", newPostPath, true);\n  useEffect(() => {\n    const loadLikedPosts = async () => {\n      try {\n        const response = await getLikedPosts(username);\n        setPostPage(previousPostPage => ({\n          ...response.data,\n          content: [...previousPostPage.content, ...response.data.content]\n        }));\n      } catch (error) {\n        console.error(\"Error loading liked posts:\", error);\n      }\n    };\n    loadLikedPosts();\n  }, [username]);\n  const loadOldPosts = async () => {\n    const response = await getOldPosts(lastPostId, username);\n    setPostPage(previousPostPage => ({\n      ...response.data,\n      content: [...previousPostPage.content, ...response.data.content]\n    }));\n  };\n  const loadNewPosts = async () => {\n    const response = await getNewPosts(firstPostId);\n    setPostPage(previousPostPage => ({\n      ...previousPostPage,\n      content: [...response.data, ...previousPostPage.content]\n    }));\n    setNewPostCount(0);\n  };\n  const onDeletePostSuccess = id => {\n    setPostPage(previousPostPage => ({\n      ...previousPostPage,\n      content: previousPostPage.content.filter(post => post.id !== id)\n    }));\n  };\n  const {\n    content,\n    last\n  } = postPage;\n  if (content.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary text-center\",\n      children: initialPostLoadProgress ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 36\n      }, this) : t(\"There are no posts\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [newPostCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center mb-1\",\n      onClick: loadNewPostProgress ? () => {} : loadNewPosts,\n      style: {\n        cursor: loadNewPostProgress ? \"wait\" : \"pointer\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-regular fa-paper-plane fa-beat-fade p-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), loadNewPostProgress ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this) : t(\"There are new posts. Click here to see!\"), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-regular fa-paper-plane fa-beat-fade ps-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), content.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)), !last && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary text-center\",\n      onClick: loadOldPostProgress ? () => {} : loadOldPosts,\n      style: {\n        cursor: loadOldPostProgress ? \"wait\" : \"pointer\"\n      },\n      children: loadOldPostProgress ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 34\n      }, this) : t(\"Load old posts\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(LikedPostFeed, \"iwI30S4xWBImUQiMrTZWWd4rdMQ=\", false, function () {\n  return [useTranslation, useParams, useApiProgress, useApiProgress, useApiProgress];\n});\n_c = LikedPostFeed;\nexport default LikedPostFeed;\nvar _c;\n$RefreshReg$(_c, \"LikedPostFeed\");","map":{"version":3,"names":["React","useEffect","useState","getLikedPosts","Spinner","useParams","useTranslation","PostView","useApiProgress","jsxDEV","_jsxDEV","LikedPostFeed","_s","newPostCount","setNewPostCount","t","username","path","initialPostLoadProgress","lastPostId","firstPostId","postPage","content","length","id","lastPostIndex","oldPostPath","loadOldPostProgress","newPostPath","loadNewPostProgress","loadLikedPosts","response","setPostPage","previousPostPage","data","error","console","loadOldPosts","getOldPosts","loadNewPosts","getNewPosts","onDeletePostSuccess","filter","post","last","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","class","map","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/components/LikedPostFeed.js"],"sourcesContent":["// LikedPostFeed.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getLikedPosts } from \"../api/apiCalls\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PostView from \"./PostView\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nconst LikedPostFeed = () => {\r\n    const [newPostCount, setNewPostCount] = useState(0);\r\n    const { t } = useTranslation();\r\n    const { username } = useParams();\r\n    const path = username\r\n      ? `/api/1.0/users/${username}/posts?page=`\r\n      : \"/api/1.0/posts?page=\";\r\n  \r\n    const initialPostLoadProgress = useApiProgress(\"get\", path);\r\n  \r\n    let lastPostId = 0;\r\n    let firstPostId = 0;\r\n  \r\n    if (postPage.content.length > 0) {\r\n      firstPostId = postPage.content[0].id;\r\n      const lastPostIndex = postPage.content.length - 1;\r\n      lastPostId = postPage.content[lastPostIndex].id;\r\n    }\r\n  \r\n    const oldPostPath = username\r\n      ? `/api/1.0/users/${username}/posts/${lastPostId}`\r\n      : `/api/1.0/posts/${lastPostId}`;\r\n  \r\n    const loadOldPostProgress = useApiProgress(\"get\", oldPostPath, true);\r\n  \r\n    const newPostPath = username\r\n      ? `/api/1.0/users/${username}/posts/${firstPostId}?direction=after`\r\n      : `/api/1.0/posts/${firstPostId}?direction=after`;\r\n  \r\n    const loadNewPostProgress = useApiProgress(\"get\", newPostPath, true);\r\n  useEffect(() => {\r\n    const loadLikedPosts = async () => {\r\n      try {\r\n        const response = await getLikedPosts(username);\r\n        setPostPage((previousPostPage) => ({\r\n          ...response.data,\r\n          content: [...previousPostPage.content, ...response.data.content],\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error loading liked posts:\", error);\r\n      }\r\n    };\r\n    loadLikedPosts();\r\n  }, [username]);\r\n  \r\n  const loadOldPosts = async () => {\r\n    const response = await getOldPosts(lastPostId, username);\r\n    setPostPage((previousPostPage) => ({\r\n      ...response.data,\r\n      content: [...previousPostPage.content, ...response.data.content],\r\n    }));\r\n  };\r\n\r\n  const loadNewPosts = async () => {\r\n    const response = await getNewPosts(firstPostId);\r\n    setPostPage((previousPostPage) => ({\r\n      ...previousPostPage,\r\n      content: [...response.data, ...previousPostPage.content],\r\n    }));\r\n    setNewPostCount(0);\r\n  };\r\n\r\n  const onDeletePostSuccess = (id) => {\r\n    setPostPage((previousPostPage) => ({\r\n      ...previousPostPage,\r\n      content: previousPostPage.content.filter((post) => post.id !== id),\r\n    }));\r\n  };\r\n\r\n  const { content, last } = postPage;\r\n\r\n  if (content.length === 0) {\r\n    return (\r\n      <div className=\"alert alert-secondary text-center\">\r\n        {initialPostLoadProgress ? <Spinner /> : t(\"There are no posts\")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        {newPostCount > 0 && (\r\n        <div\r\n          className=\"alert alert-info text-center mb-1\"\r\n          onClick={loadNewPostProgress ? () => {} : loadNewPosts}\r\n          style={{ cursor: loadNewPostProgress ? \"wait\" : \"pointer\" }}\r\n        >\r\n          <i class=\"fa-regular fa-paper-plane fa-beat-fade p-2\"></i>\r\n          {loadNewPostProgress ? (\r\n            <Spinner />\r\n          ) : (\r\n            t(\"There are new posts. Click here to see!\")\r\n          )}\r\n          <i class=\"fa-regular fa-paper-plane fa-beat-fade ps-2\"></i>\r\n        </div>\r\n      )}\r\n      {content.map((post) => (\r\n        <div key={post.id} className=\"mb-\">\r\n          <PostView post={post}></PostView>\r\n        </div>\r\n      ))}\r\n      {!last && (\r\n        <div\r\n          className=\"alert alert-secondary text-center\"\r\n          onClick={loadOldPostProgress ? () => {} : loadOldPosts}\r\n          style={{ cursor: loadOldPostProgress ? \"wait\" : \"pointer\" }}\r\n        >\r\n          {loadOldPostProgress ? <Spinner /> : t(\"Load old posts\")}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikedPostFeed;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM;IAAEa;EAAE,CAAC,GAAGT,cAAc,CAAC,CAAC;EAC9B,MAAM;IAAEU;EAAS,CAAC,GAAGX,SAAS,CAAC,CAAC;EAChC,MAAMY,IAAI,GAAGD,QAAQ,GAChB,kBAAiBA,QAAS,cAAa,GACxC,sBAAsB;EAE1B,MAAME,uBAAuB,GAAGV,cAAc,CAAC,KAAK,EAAES,IAAI,CAAC;EAE3D,IAAIE,UAAU,GAAG,CAAC;EAClB,IAAIC,WAAW,GAAG,CAAC;EAEnB,IAAIC,QAAQ,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;IAC/BH,WAAW,GAAGC,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,CAACE,EAAE;IACpC,MAAMC,aAAa,GAAGJ,QAAQ,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC;IACjDJ,UAAU,GAAGE,QAAQ,CAACC,OAAO,CAACG,aAAa,CAAC,CAACD,EAAE;EACjD;EAEA,MAAME,WAAW,GAAGV,QAAQ,GACvB,kBAAiBA,QAAS,UAASG,UAAW,EAAC,GAC/C,kBAAiBA,UAAW,EAAC;EAElC,MAAMQ,mBAAmB,GAAGnB,cAAc,CAAC,KAAK,EAAEkB,WAAW,EAAE,IAAI,CAAC;EAEpE,MAAME,WAAW,GAAGZ,QAAQ,GACvB,kBAAiBA,QAAS,UAASI,WAAY,kBAAiB,GAChE,kBAAiBA,WAAY,kBAAiB;EAEnD,MAAMS,mBAAmB,GAAGrB,cAAc,CAAC,KAAK,EAAEoB,WAAW,EAAE,IAAI,CAAC;EACtE3B,SAAS,CAAC,MAAM;IACd,MAAM6B,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM5B,aAAa,CAACa,QAAQ,CAAC;QAC9CgB,WAAW,CAAEC,gBAAgB,KAAM;UACjC,GAAGF,QAAQ,CAACG,IAAI;UAChBZ,OAAO,EAAE,CAAC,GAAGW,gBAAgB,CAACX,OAAO,EAAE,GAAGS,QAAQ,CAACG,IAAI,CAACZ,OAAO;QACjE,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEd,MAAMqB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMN,QAAQ,GAAG,MAAMO,WAAW,CAACnB,UAAU,EAAEH,QAAQ,CAAC;IACxDgB,WAAW,CAAEC,gBAAgB,KAAM;MACjC,GAAGF,QAAQ,CAACG,IAAI;MAChBZ,OAAO,EAAE,CAAC,GAAGW,gBAAgB,CAACX,OAAO,EAAE,GAAGS,QAAQ,CAACG,IAAI,CAACZ,OAAO;IACjE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMR,QAAQ,GAAG,MAAMS,WAAW,CAACpB,WAAW,CAAC;IAC/CY,WAAW,CAAEC,gBAAgB,KAAM;MACjC,GAAGA,gBAAgB;MACnBX,OAAO,EAAE,CAAC,GAAGS,QAAQ,CAACG,IAAI,EAAE,GAAGD,gBAAgB,CAACX,OAAO;IACzD,CAAC,CAAC,CAAC;IACHR,eAAe,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAM2B,mBAAmB,GAAIjB,EAAE,IAAK;IAClCQ,WAAW,CAAEC,gBAAgB,KAAM;MACjC,GAAGA,gBAAgB;MACnBX,OAAO,EAAEW,gBAAgB,CAACX,OAAO,CAACoB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACnB,EAAE,KAAKA,EAAE;IACnE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM;IAAEF,OAAO;IAAEsB;EAAK,CAAC,GAAGvB,QAAQ;EAElC,IAAIC,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;IACxB,oBACEb,OAAA;MAAKmC,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EAC/C5B,uBAAuB,gBAAGR,OAAA,CAACN,OAAO;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAGnC,CAAC,CAAC,oBAAoB;IAAC;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAEV;EAEA,oBACExC,OAAA;IAAAoC,QAAA,GACKjC,YAAY,GAAG,CAAC,iBACjBH,OAAA;MACEmC,SAAS,EAAC,mCAAmC;MAC7CM,OAAO,EAAEtB,mBAAmB,GAAG,MAAM,CAAC,CAAC,GAAGU,YAAa;MACvDa,KAAK,EAAE;QAAEC,MAAM,EAAExB,mBAAmB,GAAG,MAAM,GAAG;MAAU,CAAE;MAAAiB,QAAA,gBAE5DpC,OAAA;QAAG4C,KAAK,EAAC;MAA4C;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzDrB,mBAAmB,gBAClBnB,OAAA,CAACN,OAAO;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAEXnC,CAAC,CAAC,yCAAyC,CAC5C,eACDL,OAAA;QAAG4C,KAAK,EAAC;MAA6C;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CACN,EACA5B,OAAO,CAACiC,GAAG,CAAEZ,IAAI,iBAChBjC,OAAA;MAAmBmC,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChCpC,OAAA,CAACH,QAAQ;QAACoC,IAAI,EAAEA;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC,GADzBP,IAAI,CAACnB,EAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN,CAAC,EACD,CAACN,IAAI,iBACJlC,OAAA;MACEmC,SAAS,EAAC,mCAAmC;MAC7CM,OAAO,EAAExB,mBAAmB,GAAG,MAAM,CAAC,CAAC,GAAGU,YAAa;MACvDe,KAAK,EAAE;QAAEC,MAAM,EAAE1B,mBAAmB,GAAG,MAAM,GAAG;MAAU,CAAE;MAAAmB,QAAA,EAE3DnB,mBAAmB,gBAAGjB,OAAA,CAACN,OAAO;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAAGnC,CAAC,CAAC,gBAAgB;IAAC;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtC,EAAA,CAhHID,aAAa;EAAA,QAEDL,cAAc,EACPD,SAAS,EAKEG,cAAc,EAelBA,cAAc,EAMdA,cAAc;AAAA;AAAAgD,EAAA,GA7BxC7C,aAAa;AAkHnB,eAAeA,aAAa;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}