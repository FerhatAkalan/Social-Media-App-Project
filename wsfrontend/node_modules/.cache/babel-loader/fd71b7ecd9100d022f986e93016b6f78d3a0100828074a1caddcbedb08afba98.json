{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n  return to;\n}\nmodule.exports = assign;","map":{"version":3,"names":["assign","target","sources","TypeError","to","Object","hasOwnProperty","prototype","nextIndex","arguments","length","nextSource","from","key","call","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/Object.assign.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY;;AAEZ,SAASA,MAAMA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAC/B,IAAID,MAAM,IAAI,IAAI,EAAE;IAClB,MAAM,IAAIE,SAAS,CAAC,kDAAkD,CAAC;EACzE;EAEA,IAAIC,EAAE,GAAGC,MAAM,CAACJ,MAAM,CAAC;EACvB,IAAIK,cAAc,GAAGD,MAAM,CAACE,SAAS,CAACD,cAAc;EAEpD,KAAK,IAAIE,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAGC,SAAS,CAACC,MAAM,EAAEF,SAAS,EAAE,EAAE;IACjE,IAAIG,UAAU,GAAGF,SAAS,CAACD,SAAS,CAAC;IACrC,IAAIG,UAAU,IAAI,IAAI,EAAE;MACtB;IACF;IAEA,IAAIC,IAAI,GAAGP,MAAM,CAACM,UAAU,CAAC;;IAE7B;IACA;IACA;IACA;;IAEA,KAAK,IAAIE,GAAG,IAAID,IAAI,EAAE;MACpB,IAAIN,cAAc,CAACQ,IAAI,CAACF,IAAI,EAAEC,GAAG,CAAC,EAAE;QAClCT,EAAE,CAACS,GAAG,CAAC,GAAGD,IAAI,CAACC,GAAG,CAAC;MACrB;IACF;EACF;EAEA,OAAOT,EAAE;AACX;AAEAW,MAAM,CAACC,OAAO,GAAGhB,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}