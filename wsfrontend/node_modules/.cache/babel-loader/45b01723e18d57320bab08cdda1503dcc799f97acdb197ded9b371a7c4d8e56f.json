{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar canDefineProperty = require('./canDefineProperty');\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\nvar loggedTypeFailures = {};\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);\n  if (addenda === null) {\n    // we already showed the warning\n    return;\n  }\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} messageType A key used for de-duping warnings.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n * @returns {?object} A set of addenda to use in the warning message, or null\n * if the warning has already been shown before (and shouldn't be shown again).\n */\nfunction getAddendaForKeyUse(messageType, element, parentType) {\n  var addendum = getDeclarationErrorAddendum();\n  if (!addendum) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      addendum = ' Check the top-level render call using <' + parentName + '>.';\n    }\n  }\n  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});\n  if (memoizer[addendum]) {\n    return null;\n  }\n  memoizer[addendum] = true;\n  var addenda = {\n    parentOrOwner: addendum,\n    url: ' See https://fb.me/react-warning-keys for more information.',\n    childOwner: null\n  };\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\n  }\n  return addenda;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n        error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n      } catch (ex) {\n        error = ex;\n      }\n      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        var addendum = getDeclarationErrorAddendum();\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;\n  }\n}\nvar ReactElementValidator = {\n  createElement: function (type, props, children) {\n    var validType = typeof type === 'string' || typeof type === 'function';\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n    if (validType) {\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], type);\n      }\n    }\n    validatePropTypes(element);\n    return element;\n  },\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n    if (process.env.NODE_ENV !== 'production') {\n      if (canDefineProperty) {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n    }\n    return validatedFactory;\n  },\n  cloneElement: function (element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n};\nmodule.exports = ReactElementValidator;","map":{"version":3,"names":["ReactElement","require","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","canDefineProperty","getIteratorFn","invariant","warning","getDeclarationErrorAddendum","current","name","getName","ownerHasKeyUseWarning","loggedTypeFailures","validateExplicitKey","element","parentType","_store","validated","key","addenda","getAddendaForKeyUse","process","env","NODE_ENV","parentOrOwner","childOwner","url","undefined","messageType","addendum","parentName","displayName","memoizer","_owner","validateChildKeys","node","Array","isArray","i","length","child","isValidElement","iteratorFn","entries","iterator","call","step","next","done","value","checkPropTypes","componentName","propTypes","props","location","propName","hasOwnProperty","error","ex","Error","message","validatePropTypes","componentClass","type","prop","getDefaultProps","isReactClassApproved","ReactElementValidator","createElement","children","validType","apply","arguments","createFactory","validatedFactory","bind","Object","defineProperty","enumerable","get","cloneElement","newElement","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactElementValidator.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);\n  if (addenda === null) {\n    // we already showed the warning\n    return;\n  }\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} messageType A key used for de-duping warnings.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n * @returns {?object} A set of addenda to use in the warning message, or null\n * if the warning has already been shown before (and shouldn't be shown again).\n */\nfunction getAddendaForKeyUse(messageType, element, parentType) {\n  var addendum = getDeclarationErrorAddendum();\n  if (!addendum) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      addendum = ' Check the top-level render call using <' + parentName + '>.';\n    }\n  }\n\n  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});\n  if (memoizer[addendum]) {\n    return null;\n  }\n  memoizer[addendum] = true;\n\n  var addenda = {\n    parentOrOwner: addendum,\n    url: ' See https://fb.me/react-warning-keys for more information.',\n    childOwner: null\n  };\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\n  }\n\n  return addenda;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n        error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n      } catch (ex) {\n        error = ex;\n      }\n      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum();\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;\n  }\n}\n\nvar ReactElementValidator = {\n\n  createElement: function (type, props, children) {\n    var validType = typeof type === 'string' || typeof type === 'function';\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n    if (validType) {\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], type);\n      }\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (canDefineProperty) {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n    }\n\n    return validatedFactory;\n  },\n\n  cloneElement: function (element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}