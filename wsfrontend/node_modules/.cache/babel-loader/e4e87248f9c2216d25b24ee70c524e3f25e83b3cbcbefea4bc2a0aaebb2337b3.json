{"ast":null,"code":"import * as ACTIONS from \"./Constants\";\nconst defaultState = {\n  isLoggedIn: false,\n  username: undefined,\n  displayName: undefined,\n  image: undefined,\n  password: undefined,\n  admin: undefined,\n  likes: {},\n  likedPosts: [] // Y\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    ...defaultState\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === ACTIONS.LOGOUT_SUCCES) {\n    return defaultState;\n  } else if (action.type === ACTIONS.LOGIN_SUCCES) {\n    return {\n      ...action.payload,\n      isLoggedIn: true,\n      likes: state.likes\n    };\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\n    return {\n      ...state,\n      ...action.payload\n    };\n  } else if (action.type === ACTIONS.UPDATE_ADMIN_STATUS) {\n    return {\n      ...state,\n      admin: action.payload.admin\n    };\n  } else if (action.type === \"LIKE_POST\") {\n    const postId = action.payload;\n    return {\n      ...state,\n      likedPosts: [...state.likedPosts, postId],\n      // Beğeniyi ekleyin\n\n      likes: {\n        ...state.likes,\n        [postId]: true // Beğeni durumunu güncelleyin\n      }\n    };\n  } else if (action.type === ACTIONS.UNLIKE_POST) {\n    const postId = action.payload;\n    const newLikedPosts = state.likedPosts.filter(id => id !== postId); // Define 'newLikedPosts'\n    const newLikes = {\n      ...state.likes\n    };\n    delete newLikes[postId];\n    return {\n      ...state,\n      likedPosts: newLikedPosts,\n      likes: newLikes\n    };\n  } else if (action.type === ACTIONS.UPDATE_LIKED_POSTS) {\n    return {\n      ...state,\n      likes: action.payload\n    };\n  }\n  return state;\n};\nexport default authReducer;","map":{"version":3,"names":["ACTIONS","defaultState","isLoggedIn","username","undefined","displayName","image","password","admin","likes","likedPosts","authReducer","state","arguments","length","action","type","LOGOUT_SUCCES","LOGIN_SUCCES","payload","UPDATE_SUCCESS","UPDATE_ADMIN_STATUS","postId","UNLIKE_POST","newLikedPosts","filter","id","newLikes","UPDATE_LIKED_POSTS"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/redux/authReducer.js"],"sourcesContent":["import * as ACTIONS from \"./Constants\";\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  username: undefined,\r\n  displayName: undefined,\r\n  image: undefined,\r\n  password: undefined,\r\n  admin: undefined,\r\n  likes: {},\r\n\r\n  likedPosts: [], // Y\r\n};\r\n\r\nconst authReducer = (state = { ...defaultState }, action) => {\r\n  if (action.type === ACTIONS.LOGOUT_SUCCES) {\r\n    return defaultState;\r\n  } else if (action.type === ACTIONS.LOGIN_SUCCES) {\r\n    return {\r\n      ...action.payload,\r\n      isLoggedIn: true,\r\n      likes: state.likes,\r\n    };\r\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\r\n    return { ...state, ...action.payload };\r\n  } else if (action.type === ACTIONS.UPDATE_ADMIN_STATUS) {\r\n    return { ...state, admin: action.payload.admin };\r\n  } else if (action.type === \"LIKE_POST\") {\r\n    const postId = action.payload;\r\n    return {\r\n      ...state,\r\n      likedPosts: [...state.likedPosts, postId], // Beğeniyi ekleyin\r\n\r\n      likes: {\r\n        ...state.likes,\r\n        [postId]: true, // Beğeni durumunu güncelleyin\r\n      },\r\n    };\r\n  }  else if (action.type === ACTIONS.UNLIKE_POST) {\r\n    const postId = action.payload;\r\n    const newLikedPosts = state.likedPosts.filter((id) => id !== postId); // Define 'newLikedPosts'\r\n    const newLikes = { ...state.likes };\r\n    delete newLikes[postId];\r\n    return { ...state, likedPosts: newLikedPosts, likes: newLikes };\r\n  }\r\n   else if (action.type === ACTIONS.UPDATE_LIKED_POSTS) {\r\n    return { ...state, likes: action.payload };\r\n  }\r\n   \r\n  return state;\r\n};\r\n\r\nexport default authReducer;\r\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,aAAa;AAEtC,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAEC,SAAS;EACnBC,WAAW,EAAED,SAAS;EACtBE,KAAK,EAAEF,SAAS;EAChBG,QAAQ,EAAEH,SAAS;EACnBI,KAAK,EAAEJ,SAAS;EAChBK,KAAK,EAAE,CAAC,CAAC;EAETC,UAAU,EAAE,EAAE,CAAE;AAClB,CAAC;;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAyC;EAAA,IAAxCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAT,SAAA,GAAAS,SAAA,MAAG;IAAE,GAAGZ;EAAa,CAAC;EAAA,IAAEc,MAAM,GAAAF,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAT,SAAA;EACtD,IAAIW,MAAM,CAACC,IAAI,KAAKhB,OAAO,CAACiB,aAAa,EAAE;IACzC,OAAOhB,YAAY;EACrB,CAAC,MAAM,IAAIc,MAAM,CAACC,IAAI,KAAKhB,OAAO,CAACkB,YAAY,EAAE;IAC/C,OAAO;MACL,GAAGH,MAAM,CAACI,OAAO;MACjBjB,UAAU,EAAE,IAAI;MAChBO,KAAK,EAAEG,KAAK,CAACH;IACf,CAAC;EACH,CAAC,MAAM,IAAIM,MAAM,CAACC,IAAI,KAAKhB,OAAO,CAACoB,cAAc,EAAE;IACjD,OAAO;MAAE,GAAGR,KAAK;MAAE,GAAGG,MAAM,CAACI;IAAQ,CAAC;EACxC,CAAC,MAAM,IAAIJ,MAAM,CAACC,IAAI,KAAKhB,OAAO,CAACqB,mBAAmB,EAAE;IACtD,OAAO;MAAE,GAAGT,KAAK;MAAEJ,KAAK,EAAEO,MAAM,CAACI,OAAO,CAACX;IAAM,CAAC;EAClD,CAAC,MAAM,IAAIO,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IACtC,MAAMM,MAAM,GAAGP,MAAM,CAACI,OAAO;IAC7B,OAAO;MACL,GAAGP,KAAK;MACRF,UAAU,EAAE,CAAC,GAAGE,KAAK,CAACF,UAAU,EAAEY,MAAM,CAAC;MAAE;;MAE3Cb,KAAK,EAAE;QACL,GAAGG,KAAK,CAACH,KAAK;QACd,CAACa,MAAM,GAAG,IAAI,CAAE;MAClB;IACF,CAAC;EACH,CAAC,MAAO,IAAIP,MAAM,CAACC,IAAI,KAAKhB,OAAO,CAACuB,WAAW,EAAE;IAC/C,MAAMD,MAAM,GAAGP,MAAM,CAACI,OAAO;IAC7B,MAAMK,aAAa,GAAGZ,KAAK,CAACF,UAAU,CAACe,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKJ,MAAM,CAAC,CAAC,CAAC;IACtE,MAAMK,QAAQ,GAAG;MAAE,GAAGf,KAAK,CAACH;IAAM,CAAC;IACnC,OAAOkB,QAAQ,CAACL,MAAM,CAAC;IACvB,OAAO;MAAE,GAAGV,KAAK;MAAEF,UAAU,EAAEc,aAAa;MAAEf,KAAK,EAAEkB;IAAS,CAAC;EACjE,CAAC,MACK,IAAIZ,MAAM,CAACC,IAAI,KAAKhB,OAAO,CAAC4B,kBAAkB,EAAE;IACpD,OAAO;MAAE,GAAGhB,KAAK;MAAEH,KAAK,EAAEM,MAAM,CAACI;IAAQ,CAAC;EAC5C;EAEA,OAAOP,KAAK;AACd,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}