{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar ReactUpdates = require('./ReactUpdates');\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getNativeProps: function (inst, props, context) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    var nativeProps = assign({}, props, {\n      defaultValue: undefined,\n      value: undefined,\n      children: inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n    return nativeProps;\n  },\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n    }\n    var defaultValue = props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = props.children;\n    if (children != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;\n      }\n      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;\n      if (Array.isArray(children)) {\n        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;\n        children = children[0];\n      }\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue),\n      onChange: _handleChange.bind(inst)\n    };\n  },\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n    }\n  }\n};\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\nmodule.exports = ReactDOMTextarea;","map":{"version":3,"names":["LinkedValueUtils","require","ReactDOMIDOperations","ReactUpdates","assign","invariant","warning","forceUpdateIfMounted","_rootNodeID","ReactDOMTextarea","updateWrapper","getNativeProps","inst","props","context","dangerouslySetInnerHTML","process","env","NODE_ENV","undefined","nativeProps","defaultValue","value","children","_wrapperState","initialValue","onChange","mountWrapper","checkPropTypes","_currentElement","_owner","Array","isArray","length","getValue","_handleChange","bind","updatePropertyByID","event","returnValue","executeOnChange","asap","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactDOMTextarea.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getNativeProps: function (inst, props, context) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    var nativeProps = assign({}, props, {\n      defaultValue: undefined,\n      value: undefined,\n      children: inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return nativeProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n    }\n\n    var defaultValue = props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = props.children;\n    if (children != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;\n      }\n      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;\n      if (Array.isArray(children)) {\n        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;\n        children = children[0];\n      }\n\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(props);\n\n    inst._wrapperState = {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue),\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}