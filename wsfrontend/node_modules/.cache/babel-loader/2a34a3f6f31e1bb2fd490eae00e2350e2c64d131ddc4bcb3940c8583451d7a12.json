{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n}\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n}\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  },\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\nmodule.exports = LinkedValueUtils;","map":{"version":3,"names":["ReactPropTypes","require","ReactPropTypeLocations","invariant","warning","hasReadOnlyValue","_assertSingleLink","inputProps","checkedLink","valueLink","process","env","NODE_ENV","undefined","_assertValueLink","value","onChange","_assertCheckedLink","checked","propTypes","props","propName","componentName","type","readOnly","disabled","Error","func","loggedTypeFailures","getDeclarationErrorAddendum","owner","name","getName","LinkedValueUtils","checkPropTypes","tagName","hasOwnProperty","error","prop","message","addendum","getValue","getChecked","executeOnChange","event","requestChange","target","call","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/LinkedValueUtils.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}