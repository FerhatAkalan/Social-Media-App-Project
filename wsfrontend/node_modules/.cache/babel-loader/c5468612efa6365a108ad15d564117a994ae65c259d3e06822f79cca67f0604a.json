{"ast":null,"code":"import * as ACTIONS from \"./Constants\";\nimport { saveLikedPostsToStorage, loadLikedPostsFromStorage } from \"../redux/authActions\";\nconst defaultState = {\n  isLoggedIn: false,\n  username: undefined,\n  displayName: undefined,\n  image: undefined,\n  password: undefined,\n  admin: undefined,\n  likes: storedLikedPosts // Bu satırı güncelledik\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    ...defaultState\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === ACTIONS.LOGOUT_SUCCES) {\n    return defaultState;\n  } else if (action.type === ACTIONS.LOGIN_SUCCES) {\n    return {\n      ...action.payload,\n      isLoggedIn: true,\n      likes: state.likes\n    };\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\n    return {\n      ...state,\n      ...action.payload\n    };\n  } else if (action.type === ACTIONS.UPDATE_ADMIN_STATUS) {\n    return {\n      ...state,\n      admin: action.payload.admin\n    };\n  } else if (action.type === \"LIKE_POST\") {\n    const postId = action.payload;\n    saveLikedPostsToStorage(updatedLikes);\n    return {\n      ...state,\n      likes: {\n        ...state.likes,\n        [postId]: true // Beğeni durumunu güncelleyin\n      }\n    };\n  } else if (action.type === \"UNLIKE_POST\") {\n    const postId = action.payload;\n    const newLikes = {\n      ...state.likes\n    };\n    delete newLikes[postId];\n    saveLikedPostsToStorage(newLikes);\n    return {\n      ...state,\n      likes: newLikes\n    };\n  }\n  return state;\n};\nexport default authReducer;","map":{"version":3,"names":["ACTIONS","saveLikedPostsToStorage","loadLikedPostsFromStorage","defaultState","isLoggedIn","username","undefined","displayName","image","password","admin","likes","storedLikedPosts","authReducer","state","arguments","length","action","type","LOGOUT_SUCCES","LOGIN_SUCCES","payload","UPDATE_SUCCESS","UPDATE_ADMIN_STATUS","postId","updatedLikes","newLikes"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/redux/authReducer.js"],"sourcesContent":["import * as ACTIONS from \"./Constants\";\r\nimport { saveLikedPostsToStorage, loadLikedPostsFromStorage } from \"../redux/authActions\";\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  username: undefined,\r\n  displayName: undefined,\r\n  image: undefined,\r\n  password: undefined,\r\n  admin: undefined,\r\n  likes: storedLikedPosts, // Bu satırı güncelledik\r\n\r\n};\r\n\r\nconst authReducer = (state = { ...defaultState }, action) => {\r\n  if (action.type === ACTIONS.LOGOUT_SUCCES) {\r\n    return defaultState;\r\n  } else if (action.type === ACTIONS.LOGIN_SUCCES) {\r\n    return {\r\n      ...action.payload,\r\n      isLoggedIn: true,\r\n      likes: state.likes,\r\n    };\r\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\r\n    return { ...state, ...action.payload };\r\n  } else if (action.type === ACTIONS.UPDATE_ADMIN_STATUS) {\r\n    return { ...state, admin: action.payload.admin };\r\n  } else if (action.type === \"LIKE_POST\") {\r\n    const postId = action.payload;\r\n    saveLikedPostsToStorage(updatedLikes); \r\n    return {\r\n      ...state,\r\n      likes: {\r\n        ...state.likes,\r\n        [postId]: true, // Beğeni durumunu güncelleyin\r\n      },\r\n    };\r\n  } else if (action.type === \"UNLIKE_POST\") {\r\n    const postId = action.payload;\r\n    const newLikes = { ...state.likes };\r\n    delete newLikes[postId];\r\n    saveLikedPostsToStorage(newLikes);\r\n    return { ...state, likes: newLikes };\r\n  } \r\n  return state;\r\n};\r\n\r\nexport default authReducer;\r\n"],"mappings":"AAAA,OAAO,KAAKA,OAAO,MAAM,aAAa;AACtC,SAASC,uBAAuB,EAAEC,yBAAyB,QAAQ,sBAAsB;AAEzF,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAEC,SAAS;EACnBC,WAAW,EAAED,SAAS;EACtBE,KAAK,EAAEF,SAAS;EAChBG,QAAQ,EAAEH,SAAS;EACnBI,KAAK,EAAEJ,SAAS;EAChBK,KAAK,EAAEC,gBAAgB,CAAE;AAE3B,CAAC;;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAyC;EAAA,IAAxCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAT,SAAA,GAAAS,SAAA,MAAG;IAAE,GAAGZ;EAAa,CAAC;EAAA,IAAEc,MAAM,GAAAF,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAT,SAAA;EACtD,IAAIW,MAAM,CAACC,IAAI,KAAKlB,OAAO,CAACmB,aAAa,EAAE;IACzC,OAAOhB,YAAY;EACrB,CAAC,MAAM,IAAIc,MAAM,CAACC,IAAI,KAAKlB,OAAO,CAACoB,YAAY,EAAE;IAC/C,OAAO;MACL,GAAGH,MAAM,CAACI,OAAO;MACjBjB,UAAU,EAAE,IAAI;MAChBO,KAAK,EAAEG,KAAK,CAACH;IACf,CAAC;EACH,CAAC,MAAM,IAAIM,MAAM,CAACC,IAAI,KAAKlB,OAAO,CAACsB,cAAc,EAAE;IACjD,OAAO;MAAE,GAAGR,KAAK;MAAE,GAAGG,MAAM,CAACI;IAAQ,CAAC;EACxC,CAAC,MAAM,IAAIJ,MAAM,CAACC,IAAI,KAAKlB,OAAO,CAACuB,mBAAmB,EAAE;IACtD,OAAO;MAAE,GAAGT,KAAK;MAAEJ,KAAK,EAAEO,MAAM,CAACI,OAAO,CAACX;IAAM,CAAC;EAClD,CAAC,MAAM,IAAIO,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IACtC,MAAMM,MAAM,GAAGP,MAAM,CAACI,OAAO;IAC7BpB,uBAAuB,CAACwB,YAAY,CAAC;IACrC,OAAO;MACL,GAAGX,KAAK;MACRH,KAAK,EAAE;QACL,GAAGG,KAAK,CAACH,KAAK;QACd,CAACa,MAAM,GAAG,IAAI,CAAE;MAClB;IACF,CAAC;EACH,CAAC,MAAM,IAAIP,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IACxC,MAAMM,MAAM,GAAGP,MAAM,CAACI,OAAO;IAC7B,MAAMK,QAAQ,GAAG;MAAE,GAAGZ,KAAK,CAACH;IAAM,CAAC;IACnC,OAAOe,QAAQ,CAACF,MAAM,CAAC;IACvBvB,uBAAuB,CAACyB,QAAQ,CAAC;IACjC,OAAO;MAAE,GAAGZ,KAAK;MAAEH,KAAK,EAAEe;IAAS,CAAC;EACtC;EACA,OAAOZ,KAAK;AACd,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}