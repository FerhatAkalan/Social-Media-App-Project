{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\nvar assign = require('./Object.assign');\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\nfunction handleTopLevelImpl(bookKeeping) {\n  // TODO: Re-enable event.path handling\n  //\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n  //   // New browsers have a path attribute on native events\n  //   handleTopLevelWithPath(bookKeeping);\n  // } else {\n  //   // Legacy browsers don't have a path attribute on native events\n  //   handleTopLevelWithoutPath(bookKeeping);\n  // }\n\n  void handleTopLevelWithPath; // temporarily unused\n  handleTopLevelWithoutPath(bookKeeping);\n}\n\n// Legacy browsers don't have a path attribute on native events\nfunction handleTopLevelWithoutPath(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\n// New browsers have a path attribute on native events\nfunction handleTopLevelWithPath(bookKeeping) {\n  var path = bookKeeping.nativeEvent.path;\n  var currentNativeTarget = path[0];\n  var eventsFired = 0;\n  for (var i = 0; i < path.length; i++) {\n    var currentPathElement = path[i];\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n      currentNativeTarget = path[i + 1];\n    }\n    // TODO: slow\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n    if (reactParent === currentPathElement) {\n      var currentPathElementID = ReactMount.getID(currentPathElement);\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n      bookKeeping.ancestors.push(currentPathElement);\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n      eventsFired++;\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\n\n      // Jump to the root of this React render tree\n      while (currentPathElementID !== newRootID) {\n        i++;\n        currentPathElement = path[i];\n        currentPathElementID = ReactMount.getID(currentPathElement);\n      }\n    }\n  }\n  if (eventsFired === 0) {\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\nmodule.exports = ReactEventListener;","map":{"version":3,"names":["EventListener","require","ExecutionEnvironment","PooledClass","ReactInstanceHandles","ReactMount","ReactUpdates","assign","getEventTarget","getUnboundedScrollPosition","DOCUMENT_FRAGMENT_NODE_TYPE","findParent","node","nodeID","getID","rootID","getReactRootIDFromNodeID","container","findReactContainerForID","parent","getFirstReactDOM","TopLevelCallbackBookKeeping","topLevelType","nativeEvent","ancestors","prototype","destructor","length","addPoolingTo","twoArgumentPooler","handleTopLevelImpl","bookKeeping","handleTopLevelWithPath","handleTopLevelWithoutPath","topLevelTarget","window","ancestor","push","i","topLevelTargetID","ReactEventListener","_handleTopLevel","path","currentNativeTarget","eventsFired","currentPathElement","nodeType","reactParent","currentPathElementID","newRootID","scrollValueMonitor","cb","scrollPosition","_enabled","WINDOW_HANDLE","canUseDOM","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","trapBubbledEvent","handlerBaseName","handle","element","listen","dispatchEvent","bind","trapCapturedEvent","capture","monitorScrollValue","refresh","callback","getPooled","batchedUpdates","release","module","exports"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/node_modules/react-emoji-picker/node_modules/react/lib/ReactEventListener.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  // TODO: Re-enable event.path handling\n  //\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n  //   // New browsers have a path attribute on native events\n  //   handleTopLevelWithPath(bookKeeping);\n  // } else {\n  //   // Legacy browsers don't have a path attribute on native events\n  //   handleTopLevelWithoutPath(bookKeeping);\n  // }\n\n  void handleTopLevelWithPath; // temporarily unused\n  handleTopLevelWithoutPath(bookKeeping);\n}\n\n// Legacy browsers don't have a path attribute on native events\nfunction handleTopLevelWithoutPath(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\n// New browsers have a path attribute on native events\nfunction handleTopLevelWithPath(bookKeeping) {\n  var path = bookKeeping.nativeEvent.path;\n  var currentNativeTarget = path[0];\n  var eventsFired = 0;\n  for (var i = 0; i < path.length; i++) {\n    var currentPathElement = path[i];\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n      currentNativeTarget = path[i + 1];\n    }\n    // TODO: slow\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n    if (reactParent === currentPathElement) {\n      var currentPathElementID = ReactMount.getID(currentPathElement);\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n      bookKeeping.ancestors.push(currentPathElement);\n\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n      eventsFired++;\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\n\n      // Jump to the root of this React render tree\n      while (currentPathElementID !== newRootID) {\n        i++;\n        currentPathElement = path[i];\n        currentPathElementID = ReactMount.getID(currentPathElement);\n      }\n    }\n  }\n  if (eventsFired === 0) {\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}