{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\ws-project\\\\wsfrontend\\\\src\\\\components\\\\ProfileCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\nimport { useTranslation } from \"react-i18next\";\nimport Input from \"../components/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileCard = _ref => {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [inEditMode, setInEditMode] = useState(false);\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\n  const {\n    username: loggedInUsername\n  } = useSelector(store => ({\n    username: store.username\n  }));\n  const routeParams = useParams();\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    if (!inEditMode) {\n      setUpdatedDisplayName(undefined);\n    } else {\n      setUpdatedDisplayName(displayName);\n    }\n  }, [inEditMode]);\n  const onClickSave = () => {\n    console.log(updatedDisplayName);\n  };\n  const {\n    username,\n    displayName,\n    image\n  } = user;\n  const pathUsername = routeParams.username;\n  let message = \"We cannot edit.\";\n  if (pathUsername === loggedInUsername) {\n    message = \"We can edit.\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(ProfileImageWithDefault, {\n        className: \"rounded-circle shadow\",\n        width: \"200\",\n        height: \"200\",\n        alt: `${username} profile`,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [!inEditMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"10px\"\n            },\n            children: displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            children: [\"- @\", username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success d-inline-flex\",\n          onClick: () => setInEditMode(true),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), t(\"Edit\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), inEditMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: t(\"Change Display Name\"),\n          defaultValue: displayName,\n          onChange: event => {\n            setUpdatedDisplayName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary d-inline-flex mr-2\",\n            onClick: onClickSave,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              children: \"save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), t(\"Save\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-light d-inline-flex ml-1\",\n            onClick: () => setInEditMode(false),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), t(\"Cancel\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileCard, \"JSOq13nGTUZvcRM2bTXiLBWDo3I=\", false, function () {\n  return [useSelector, useParams, useTranslation];\n});\n_c = ProfileCard;\nexport default ProfileCard;\nvar _c;\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useParams","ProfileImageWithDefault","useTranslation","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileCard","_ref","_s","user","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","username","loggedInUsername","store","routeParams","t","undefined","displayName","onClickSave","console","log","image","pathUsername","message","className","children","width","height","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","onClick","label","defaultValue","onChange","event","target","value","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/components/ProfileCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Input from \"../components/Input\";\r\n\r\nconst ProfileCard = ({ user }) => {\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const { username: loggedInUsername } = useSelector((store) => ({\r\n    username: store.username,\r\n  }));\r\n  const routeParams = useParams();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(()=>{\r\n    if(!inEditMode){\r\n      setUpdatedDisplayName(undefined);\r\n    }\r\n    else{\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  },[inEditMode]);\r\n\r\n  const onClickSave = () =>{\r\n    console.log(updatedDisplayName);\r\n  }\r\n  \r\n  const { username, displayName, image } = user;\r\n\r\n  const pathUsername = routeParams.username;\r\n  let message = \"We cannot edit.\";\r\n  if (pathUsername === loggedInUsername) {\r\n    message = \"We can edit.\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {!inEditMode && (\r\n          <>\r\n            {\" \"}\r\n            <h3>\r\n              <span style={{ padding: \"10px\" }}>{displayName}</span>\r\n              <span className=\"text-muted\">- @{username}</span>\r\n            </h3>\r\n            <button\r\n              className=\"btn btn-success d-inline-flex\"\r\n              onClick={() => setInEditMode(true)}\r\n            >\r\n              <i className=\"material-icons\">edit</i>\r\n              {t(\"Edit\")}\r\n            </button>\r\n          </>\r\n        )}\r\n        {inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t(\"Change Display Name\")}\r\n              defaultValue={displayName}\r\n              onChange={(event)=>{setUpdatedDisplayName(event.target.value)}}\r\n            />\r\n            <div className=\"mt-2\">\r\n              <button className=\"btn btn-primary d-inline-flex mr-2\" onClick={onClickSave}>\r\n                <i className=\"material-icons\">save</i>\r\n                {t(\"Save\")}\r\n              </button>\r\n              <button\r\n                className=\"btn btn-light d-inline-flex ml-1\"\r\n                onClick={() => setInEditMode(false)}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n                {t(\"Cancel\")}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}