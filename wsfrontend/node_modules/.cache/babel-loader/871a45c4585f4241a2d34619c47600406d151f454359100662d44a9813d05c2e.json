{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\ws-project\\\\wsfrontend\\\\src\\\\components\\\\PostSubmit.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\nimport { useSelector } from \"react-redux\";\nimport { postIt } from \"../api/apiCalls\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport ButtonWithProgress from \"../pages/ButtonWithProgress\";\nimport EmojiPicker from \"react-emoji-picker\";\nimport emojiDictionary from \"emoji-dictionary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostSubmit = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    image\n  } = useSelector(store => ({\n    image: store.image\n  }));\n  const [focused, setFocused] = useState(false);\n  const [post, setPost] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const onSelectEmoji = emoji => {\n    setPost(post + emoji);\n  };\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(prevState => !prevState);\n  };\n  const parseEmoji = metin => {\n    return metin.replace(/:[a-z_]+:/g, eslesme => {\n      const emojiKodu = eslesme.replace(/:/g, \"\");\n      return emojiDictionary.getUnicode(emojiKodu) || eslesme;\n    });\n  };\n  useEffect(() => {\n    if (!focused) {\n      setPost(\"\");\n      setErrors({});\n    }\n  }, [focused]);\n  useEffect(() => {\n    setErrors({});\n  }, [post]);\n  const pendingApiCall = useApiProgress(\"post\", \"/api/1.0/posts\");\n  const onClickPostIt = async () => {\n    const body = {\n      content: post\n    };\n    try {\n      await postIt(body);\n      setFocused(false);\n    } catch (error) {\n      if (error.response.data.validationErrors) {\n        setErrors(error.response.data.validationErrors);\n      }\n    }\n  };\n  let textAreaClass = \"mb-2 form-control\";\n  if (errors.content) {\n    textAreaClass += \" is-invalid\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card p-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap align-items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 col-md-1\",\n        children: /*#__PURE__*/_jsxDEV(ProfileImageWithDefault, {\n          className: \"rounded-circle\",\n          image: image,\n          width: \"32\",\n          height: \"32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 col-md-11\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: textAreaClass,\n          rows: focused ? \"4\" : \"3\",\n          onFocus: () => setFocused(true),\n          placeholder: t(\"What's happening?\"),\n          onChange: event => {\n            setPost(event.target.value);\n          },\n          value: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: errors.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: [focused && /*#__PURE__*/_jsxDEV(ButtonWithProgress, {\n            className: \"btn btn-info d-flex align-items-center\",\n            onClick: onClickPostIt,\n            pendingApiCall: pendingApiCall,\n            disabled: pendingApiCall,\n            text: t(\" TalkIt\"),\n            icon: \"fa-regular fa-paper-plane fa-beat me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), focused && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-light d-inline-flex align-items-center ml-1\",\n            onClick: toggleEmojiPicker // Toggle emoji picker when the emoji button is clicked\n            ,\n            disabled: false,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              children: \"emoji_emotions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), focused && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-light d-inline-flex ml-1\",\n            onClick: () => setFocused(false),\n            disabled: pendingApiCall,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              children: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), t(\"Cancel\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(EmojiPicker, {\n          onSelect: onSelectEmoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(PostSubmit, \"GeqkpHTElsaFcqDguWYQYys3KKU=\", false, function () {\n  return [useTranslation, useSelector, useApiProgress];\n});\n_c = PostSubmit;\nexport default PostSubmit;\nvar _c;\n$RefreshReg$(_c, \"PostSubmit\");","map":{"version":3,"names":["React","useEffect","useState","useTranslation","ProfileImageWithDefault","useSelector","postIt","useApiProgress","ButtonWithProgress","EmojiPicker","emojiDictionary","jsxDEV","_jsxDEV","PostSubmit","_s","t","image","store","focused","setFocused","post","setPost","errors","setErrors","showEmojiPicker","setShowEmojiPicker","onSelectEmoji","emoji","toggleEmojiPicker","prevState","parseEmoji","metin","replace","eslesme","emojiKodu","getUnicode","pendingApiCall","onClickPostIt","body","content","error","response","data","validationErrors","textAreaClass","className","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","rows","onFocus","placeholder","onChange","event","target","value","onClick","disabled","text","icon","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/components/PostSubmit.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postIt } from \"../api/apiCalls\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport ButtonWithProgress from \"../pages/ButtonWithProgress\";\r\nimport EmojiPicker from \"react-emoji-picker\";\r\nimport emojiDictionary from \"emoji-dictionary\";\r\n\r\nconst PostSubmit = () => {\r\n  const { t } = useTranslation();\r\n  const { image } = useSelector((store) => ({ image: store.image }));\r\n  const [focused, setFocused] = useState(false);\r\n  const [post, setPost] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n\r\n  const onSelectEmoji = (emoji) => {\r\n    setPost(post + emoji);\r\n  };\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker((prevState) => !prevState);\r\n  };\r\n  const parseEmoji = (metin) => {\r\n    return metin.replace(/:[a-z_]+:/g, (eslesme) => {\r\n      const emojiKodu = eslesme.replace(/:/g, \"\");\r\n      return emojiDictionary.getUnicode(emojiKodu) || eslesme;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!focused) {\r\n      setPost(\"\");\r\n      setErrors({});\r\n    }\r\n  }, [focused]);\r\n\r\n  useEffect(() => {\r\n    setErrors({});\r\n  }, [post]);\r\n\r\n  const pendingApiCall = useApiProgress(\"post\", \"/api/1.0/posts\");\r\n\r\n  const onClickPostIt = async () => {\r\n    const body = {\r\n      content: post,\r\n    };\r\n    try {\r\n      await postIt(body);\r\n      setFocused(false);\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n  let textAreaClass = \"mb-2 form-control\";\r\n  if (errors.content) {\r\n    textAreaClass += \" is-invalid\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"card p-2\">\r\n      <div className=\"d-flex flex-wrap align-items-start\">\r\n        <div className=\"col-2 col-md-1\">\r\n          <ProfileImageWithDefault\r\n            className=\"rounded-circle\"\r\n            image={image}\r\n            width=\"32\"\r\n            height=\"32\"\r\n          />\r\n        </div>\r\n        <div className=\"col-10 col-md-11\">\r\n          <textarea\r\n            className={textAreaClass}\r\n            rows={focused ? \"4\" : \"3\"}\r\n            onFocus={() => setFocused(true)}\r\n            placeholder={t(\"What's happening?\")}\r\n            onChange={(event) => {\r\n              setPost(event.target.value);\r\n            }}\r\n            value={post}\r\n          ></textarea>\r\n\r\n          <div className=\"invalid-feedback\">{errors.content}</div>\r\n\r\n          <div className=\"d-flex justify-content-end\">\r\n            {focused && (\r\n              <ButtonWithProgress\r\n                className=\"btn btn-info d-flex align-items-center\"\r\n                onClick={onClickPostIt}\r\n                pendingApiCall={pendingApiCall}\r\n                disabled={pendingApiCall}\r\n                text={t(\" TalkIt\")}\r\n                icon=\"fa-regular fa-paper-plane fa-beat me-2\"\r\n              >\r\n                {/* <i className=\"material-icons me-1\">send</i> */}\r\n                {/* <span className=\"ml-1\">{t(\" TalkIt\")}</span> */}\r\n              </ButtonWithProgress>\r\n            )}\r\n            {focused && (\r\n              <button\r\n                className=\"btn btn-light d-inline-flex align-items-center ml-1\"\r\n                onClick={toggleEmojiPicker} // Toggle emoji picker when the emoji button is clicked\r\n                disabled={false}\r\n              >\r\n                <i className=\"material-icons\">emoji_emotions</i>\r\n              </button>\r\n            )}\r\n            {focused && (\r\n              <button\r\n                className=\"btn btn-light d-inline-flex ml-1\"\r\n                onClick={() => setFocused(false)}\r\n                disabled={pendingApiCall}\r\n              >\r\n                <i className=\"material-icons\">close</i>\r\n                {t(\"Cancel\")}\r\n              </button>\r\n            )}\r\n          </div>\r\n          {showEmojiPicker && (\r\n            <EmojiPicker onSelect={onSelectEmoji} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostSubmit;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}