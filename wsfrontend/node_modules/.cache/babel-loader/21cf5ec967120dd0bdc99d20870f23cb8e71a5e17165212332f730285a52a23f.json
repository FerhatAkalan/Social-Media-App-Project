{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\Social-Media-App-Project\\\\wsfrontend\\\\src\\\\components\\\\FollowingFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getNewPostCount, getFollowingPosts, getOldPosts, getNewPosts } from \"../api/apiCalls\";\nimport { useTranslation } from \"react-i18next\";\nimport PostView from \"./PostView\";\nimport { useApiProgress } from \"../shared/ApiProgress\";\nimport Spinner from \"../components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FollowingFeed = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPostCount, setNewPostCount] = useState(0);\n  const {\n    t\n  } = useTranslation();\n  const {\n    username\n  } = useSelector(store => ({\n    username: store.username\n  }));\n  const path = `/api/1.0/users/${username}/following/posts?page=`;\n  const initialPostLoadProgress = useApiProgress(\"get\", path);\n  let lastPostId = 0;\n  let firstPostId = 0;\n  const {\n    content,\n    last\n  } = posts;\n  if (posts.length > 0) {\n    firstPostId = posts[0].id;\n    lastPostId = posts[posts.length - 1].id;\n  }\n  const oldPostPath = `/api/1.0/users/${username}/following/posts/${lastPostId}`;\n  const loadOldPostProgress = useApiProgress(\"get\", oldPostPath, true);\n  const newPostPath = `/api/1.0/users/${username}/following/posts/${firstPostId}?direction=after`;\n  const loadNewPostProgress = useApiProgress(\"get\", newPostPath, true);\n  useEffect(() => {\n    const getCount = async () => {\n      const response = await getNewPostCount(firstPostId, username);\n      setNewPostCount(response.data.count);\n    };\n    let looper = setInterval(getCount, 1000);\n    return function cleanup() {\n      clearInterval(looper);\n    };\n  }, [firstPostId, username]);\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const response = await getFollowingPosts();\n        setPosts(previousPosts => [...previousPosts, ...response.data.content]);\n      } catch (error) {\n        console.error(\"Error loading posts:\", error);\n      }\n    };\n    loadPosts();\n  }, []);\n  const loadOldPosts = async () => {\n    const response = await getOldPosts(lastPostId, username);\n    setPosts(previousPosts => [...previousPosts, ...response.data]);\n  };\n  const loadNewPosts = async () => {\n    const response = await getNewPosts(firstPostId);\n    setPosts(previousPosts => [...response.data, ...previousPosts]);\n    setNewPostCount(0);\n  };\n  const onDeletePostSuccess = id => {\n    setPosts(previousPosts => previousPosts.filter(post => post.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [newPostCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center mb-1\",\n      onClick: loadNewPostProgress ? () => {} : loadNewPosts,\n      style: {\n        cursor: loadNewPostProgress ? \"wait\" : \"pointer\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post,\n        onDeletePost: onDeletePostSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)), !last && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary text-center\",\n      onClick: loadOldPostProgress ? () => {} : loadOldPosts,\n      style: {\n        cursor: loadOldPostProgress ? \"wait\" : \"pointer\"\n      },\n      children: loadOldPostProgress ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 34\n      }, this) : t(\"Load old posts\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(FollowingFeed, \"vdqcIfypaI3xmJMvKx/tXZAnb1o=\", false, function () {\n  return [useTranslation, useSelector, useApiProgress, useApiProgress, useApiProgress];\n});\n_c = FollowingFeed;\nexport default FollowingFeed;\nvar _c;\n$RefreshReg$(_c, \"FollowingFeed\");","map":{"version":3,"names":["React","useEffect","useState","getNewPostCount","getFollowingPosts","getOldPosts","getNewPosts","useTranslation","PostView","useApiProgress","Spinner","useParams","useSelector","jsxDEV","_jsxDEV","FollowingFeed","_s","posts","setPosts","newPostCount","setNewPostCount","t","username","store","path","initialPostLoadProgress","lastPostId","firstPostId","content","last","length","id","oldPostPath","loadOldPostProgress","newPostPath","loadNewPostProgress","getCount","response","data","count","looper","setInterval","cleanup","clearInterval","loadPosts","previousPosts","error","console","loadOldPosts","loadNewPosts","onDeletePostSuccess","filter","post","children","className","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","map","onDeletePost","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/components/FollowingFeed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getNewPostCount, getFollowingPosts, getOldPosts, getNewPosts } from \"../api/apiCalls\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PostView from \"./PostView\";\r\nimport { useApiProgress } from \"../shared/ApiProgress\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst FollowingFeed = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [newPostCount, setNewPostCount] = useState(0);\r\n  const { t } = useTranslation();\r\n  const { username } = useSelector((store) => ({\r\n    username: store.username,\r\n  }));\r\n\r\n  const path = `/api/1.0/users/${username}/following/posts?page=`;\r\n\r\n  const initialPostLoadProgress = useApiProgress(\"get\", path);\r\n\r\n  let lastPostId = 0;\r\n  let firstPostId = 0;const { content, last } = posts;\r\n\r\n  if (posts.length > 0) {\r\n    firstPostId = posts[0].id;\r\n    lastPostId = posts[posts.length - 1].id;\r\n  }\r\n\r\n  const oldPostPath = `/api/1.0/users/${username}/following/posts/${lastPostId}`;\r\n  const loadOldPostProgress = useApiProgress(\"get\", oldPostPath, true);\r\n\r\n  const newPostPath = `/api/1.0/users/${username}/following/posts/${firstPostId}?direction=after`;\r\n  const loadNewPostProgress = useApiProgress(\"get\", newPostPath, true);\r\n\r\n  useEffect(() => {\r\n    const getCount = async () => {\r\n      const response = await getNewPostCount(firstPostId, username);\r\n      setNewPostCount(response.data.count);\r\n    };\r\n    let looper = setInterval(getCount, 1000);\r\n    return function cleanup() {\r\n      clearInterval(looper);\r\n    };\r\n  }, [firstPostId, username]);\r\n\r\n  useEffect(() => {\r\n    const loadPosts = async () => {\r\n      try {\r\n        const response = await getFollowingPosts();\r\n        setPosts((previousPosts) => [...previousPosts, ...response.data.content]);\r\n      } catch (error) {\r\n        console.error(\"Error loading posts:\", error);\r\n      }\r\n    };\r\n    loadPosts();\r\n  }, []);\r\n  \r\n\r\n  const loadOldPosts = async () => {\r\n    const response = await getOldPosts(lastPostId, username);\r\n    setPosts((previousPosts) => [...previousPosts, ...response.data]);\r\n  };\r\n\r\n  const loadNewPosts = async () => {\r\n    const response = await getNewPosts(firstPostId);\r\n    setPosts((previousPosts) => [...response.data, ...previousPosts]);\r\n    setNewPostCount(0);\r\n  };\r\n\r\n  const onDeletePostSuccess = (id) => {\r\n    setPosts((previousPosts) => previousPosts.filter((post) => post.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {newPostCount > 0 && (\r\n        <div\r\n          className=\"alert alert-info text-center mb-1\"\r\n          onClick={loadNewPostProgress ? () => {} : loadNewPosts}\r\n          style={{ cursor: loadNewPostProgress ? \"wait\" : \"pointer\" }}\r\n        >\r\n          {/* Yeni postlar bildirimi burada görüntülenir */}\r\n        </div>\r\n      )}\r\n      {posts.map((post) => (\r\n        <div key={post.id} className=\"mb-\">\r\n          <PostView post={post} onDeletePost={onDeletePostSuccess}></PostView>\r\n        </div>\r\n      ))}\r\n     {!last && (\r\n        <div\r\n          className=\"alert alert-secondary text-center\"\r\n          onClick={loadOldPostProgress ? () => {} : loadOldPosts}\r\n          style={{ cursor: loadOldPostProgress ? \"wait\" : \"pointer\" }}\r\n        >\r\n          {loadOldPostProgress ? <Spinner /> : t(\"Load old posts\")}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowingFeed;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}