{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\Social-Media-App-Project\\\\wsfrontend\\\\src\\\\pages\\\\HashtagPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getPostsByHashtag } from \"../api/apiCalls\"; // Örnek bir API çağrısı\nimport PostView from \"./PostView\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport Spinner from \"../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HashtagPage = () => {\n  _s();\n  const [hashtagPosts, setHashtagPosts] = useState([]);\n  const {\n    hashtagName\n  } = useParams(); // URL parametresinden hashtag adını al\n  const {\n    t\n  } = useTranslation();\n  useEffect(() => {\n    const loadHashtagPosts = async () => {\n      try {\n        const response = await getPostsByHashtag(hashtagName);\n        setHashtagPosts(response); // Hashtag'a ait postları set ediyoruz\n      } catch (error) {\n        console.error(\"Error loading hashtag posts:\", error);\n      }\n    };\n    loadHashtagPosts();\n  }, [hashtagName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [t(\"Posts with\"), \" #\", hashtagName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), hashtagPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), t(\"No posts with this hashtag yet.\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : hashtagPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-\",\n      children: /*#__PURE__*/_jsxDEV(PostView, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(HashtagPage, \"R4LpFTJMWMq+n7p2CVL/l41WqYo=\", false, function () {\n  return [useParams, useTranslation];\n});\n_c = HashtagPage;\nexport default HashtagPage;\nvar _c;\n$RefreshReg$(_c, \"HashtagPage\");","map":{"version":3,"names":["React","useEffect","useState","getPostsByHashtag","PostView","useParams","useTranslation","Spinner","jsxDEV","_jsxDEV","HashtagPage","_s","hashtagPosts","setHashtagPosts","hashtagName","t","loadHashtagPosts","response","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","post","id","_c","$RefreshReg$"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/pages/HashtagPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getPostsByHashtag } from \"../api/apiCalls\"; // Örnek bir API çağrısı\r\nimport PostView from \"./PostView\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst HashtagPage = () => {\r\n  const [hashtagPosts, setHashtagPosts] = useState([]);\r\n  const { hashtagName } = useParams(); // URL parametresinden hashtag adını al\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    const loadHashtagPosts = async () => {\r\n      try {\r\n        const response = await getPostsByHashtag(hashtagName);\r\n        setHashtagPosts(response); // Hashtag'a ait postları set ediyoruz\r\n      } catch (error) {\r\n        console.error(\"Error loading hashtag posts:\", error);\r\n      }\r\n    };\r\n    loadHashtagPosts();\r\n  }, [hashtagName]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{t(\"Posts with\")} #{hashtagName}</h2>\r\n      {hashtagPosts.length === 0 ? (\r\n        <div className=\"alert alert-info text-center\">\r\n          <Spinner />\r\n          {t(\"No posts with this hashtag yet.\")}\r\n        </div>\r\n      ) : (\r\n        hashtagPosts.map((post) => (\r\n          <div key={post.id} className=\"mb-\">\r\n            <PostView post={post}></PostView>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HashtagPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,iBAAiB,CAAC,CAAC;AACrD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM;IAAEY;EAAY,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM;IAAEU;EAAE,CAAC,GAAGT,cAAc,CAAC,CAAC;EAE9BL,SAAS,CAAC,MAAM;IACd,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,iBAAiB,CAACW,WAAW,CAAC;QACrDD,eAAe,CAACI,QAAQ,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IACDF,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,GAAKL,CAAC,CAAC,YAAY,CAAC,EAAC,IAAE,EAACD,WAAW;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACxCZ,YAAY,CAACa,MAAM,KAAK,CAAC,gBACxBhB,OAAA;MAAKiB,SAAS,EAAC,8BAA8B;MAAAN,QAAA,gBAC3CX,OAAA,CAACF,OAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACVT,CAAC,CAAC,iCAAiC,CAAC;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,GAENZ,YAAY,CAACe,GAAG,CAAEC,IAAI,iBACpBnB,OAAA;MAAmBiB,SAAS,EAAC,KAAK;MAAAN,QAAA,eAChCX,OAAA,CAACL,QAAQ;QAACwB,IAAI,EAAEA;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC,GADzBI,IAAI,CAACC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CAlCID,WAAW;EAAA,QAESL,SAAS,EACnBC,cAAc;AAAA;AAAAwB,EAAA,GAHxBpB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}