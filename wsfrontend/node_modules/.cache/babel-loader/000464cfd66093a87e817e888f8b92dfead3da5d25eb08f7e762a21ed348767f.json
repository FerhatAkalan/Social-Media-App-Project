{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ferhat\\\\ws-project\\\\wsfrontend\\\\src\\\\shared\\\\ApiProgress.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n}\nexport function withApiProgress(WrappedComponent, apiPath) {\n  var _class;\n  return _class = class extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        pendingApiCall: false\n      };\n      this.updateApiCallFor = (url, inProgress) => {\n        if (url === apiPath) {\n          this.setState({\n            pendingApiCall: inProgress\n          });\n        }\n      };\n    }\n    componentDidMount() {\n      this.requestInterceptor = axios.interceptors.request.use(request => {\n        this.updateApiCallFor(request.url, true);\n        return request;\n      });\n      this.responseInterceptor = axios.interceptors.response.use(response => {\n        this.updateApiCallFor(response.config.url, false);\n        return response;\n      }, error => {\n        this.updateApiCallFor(error.config.url, false);\n        throw error;\n      });\n    }\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.requestInterceptor);\n      axios.interceptors.response.eject(this.responseInterceptor);\n    }\n    render() {\n      const pendingApiCall = this.state.pendingApiCall || this.props.pendingApiCall;\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        ...this.props,\n        pendingApiCall: pendingApiCall\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n  }, _class.displayName = \"ApiProgress(\" + getDisplayName(WrappedComponent) + \")\", _class;\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","getDisplayName","WrappedComponent","displayName","name","withApiProgress","apiPath","_class","constructor","arguments","state","pendingApiCall","updateApiCallFor","url","inProgress","setState","componentDidMount","requestInterceptor","interceptors","request","use","responseInterceptor","response","config","error","componentWillUnmount","eject","render","props","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Ferhat/ws-project/wsfrontend/src/shared/ApiProgress.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction getDisplayName(WrappedComponent) {\r\n  return WrappedComponent.displayName || WrappedComponent.name || \"Component\";\r\n}\r\n\r\nexport function withApiProgress(WrappedComponent, apiPath) {\r\n  return class extends Component {\r\n    static displayName =\r\n      \"ApiProgress(\" + getDisplayName(WrappedComponent) + \")\";\r\n    state = {\r\n      pendingApiCall: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.requestInterceptor = axios.interceptors.request.use((request) => {\r\n        this.updateApiCallFor(request.url, true);\r\n        return request;\r\n      });\r\n\r\n      this.responseInterceptor = axios.interceptors.response.use(\r\n        (response) => {\r\n          this.updateApiCallFor(response.config.url, false);\r\n\r\n          return response;\r\n        },\r\n        (error) => {\r\n          this.updateApiCallFor(error.config.url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      axios.interceptors.request.eject(this.requestInterceptor)\r\n      axios.interceptors.response.eject(this.responseInterceptor)\r\n    }\r\n\r\n    updateApiCallFor = (url, inProgress) => {\r\n      if (url === apiPath) {\r\n        this.setState({ pendingApiCall: inProgress });\r\n      }\r\n    };\r\n    render() {\r\n      const pendingApiCall = this.state.pendingApiCall || this.props.pendingApiCall;\r\n      return (\r\n        <WrappedComponent  {...this.props} pendingApiCall={pendingApiCall}/>\r\n      );\r\n    }\r\n  };\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,cAAcA,CAACC,gBAAgB,EAAE;EACxC,OAAOA,gBAAgB,CAACC,WAAW,IAAID,gBAAgB,CAACE,IAAI,IAAI,WAAW;AAC7E;AAEA,OAAO,SAASC,eAAeA,CAACH,gBAAgB,EAAEI,OAAO,EAAE;EAAA,IAAAC,MAAA;EACzD,OAAAA,MAAA,GAAO,cAAcV,SAAS,CAAC;IAAAW,YAAA;MAAA,SAAAC,SAAA;MAAA,KAG7BC,KAAK,GAAG;QACNC,cAAc,EAAE;MAClB,CAAC;MAAA,KA0BDC,gBAAgB,GAAG,CAACC,GAAG,EAAEC,UAAU,KAAK;QACtC,IAAID,GAAG,KAAKP,OAAO,EAAE;UACnB,IAAI,CAACS,QAAQ,CAAC;YAAEJ,cAAc,EAAEG;UAAW,CAAC,CAAC;QAC/C;MACF,CAAC;IAAA;IA5BDE,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACC,kBAAkB,GAAGnB,KAAK,CAACoB,YAAY,CAACC,OAAO,CAACC,GAAG,CAAED,OAAO,IAAK;QACpE,IAAI,CAACP,gBAAgB,CAACO,OAAO,CAACN,GAAG,EAAE,IAAI,CAAC;QACxC,OAAOM,OAAO;MAChB,CAAC,CAAC;MAEF,IAAI,CAACE,mBAAmB,GAAGvB,KAAK,CAACoB,YAAY,CAACI,QAAQ,CAACF,GAAG,CACvDE,QAAQ,IAAK;QACZ,IAAI,CAACV,gBAAgB,CAACU,QAAQ,CAACC,MAAM,CAACV,GAAG,EAAE,KAAK,CAAC;QAEjD,OAAOS,QAAQ;MACjB,CAAC,EACAE,KAAK,IAAK;QACT,IAAI,CAACZ,gBAAgB,CAACY,KAAK,CAACD,MAAM,CAACV,GAAG,EAAE,KAAK,CAAC;QAC9C,MAAMW,KAAK;MACb,CACF,CAAC;IACH;IAEAC,oBAAoBA,CAAA,EAAE;MACpB3B,KAAK,CAACoB,YAAY,CAACC,OAAO,CAACO,KAAK,CAAC,IAAI,CAACT,kBAAkB,CAAC;MACzDnB,KAAK,CAACoB,YAAY,CAACI,QAAQ,CAACI,KAAK,CAAC,IAAI,CAACL,mBAAmB,CAAC;IAC7D;IAOAM,MAAMA,CAAA,EAAG;MACP,MAAMhB,cAAc,GAAG,IAAI,CAACD,KAAK,CAACC,cAAc,IAAI,IAAI,CAACiB,KAAK,CAACjB,cAAc;MAC7E,oBACEX,OAAA,CAACE,gBAAgB;QAAA,GAAM,IAAI,CAAC0B,KAAK;QAAEjB,cAAc,EAAEA;MAAe;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAExE;EACF,CAAC,EAAAzB,MAAA,CAzCQJ,WAAW,GAChB,cAAc,GAAGF,cAAc,CAACC,gBAAgB,CAAC,GAAG,GAAG,EAAAK,MAAA;AAyC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}