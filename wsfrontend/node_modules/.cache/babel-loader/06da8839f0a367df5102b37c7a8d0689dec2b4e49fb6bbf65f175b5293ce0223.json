{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\"; // legacy_createStore yerine createStore kullanıyorum\nimport authReducer from \"./authReducer\";\nimport SecureLS from \"secure-ls\";\nimport thunk from \"redux-thunk\";\nimport { setAuthorizationHeader } from \"../api/apiCalls\";\nconst secureLS = new SecureLS();\nconst getStateFromStorage = () => {\n  const storedState = secureLS.get(\"post-auth\");\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: undefined,\n    displayName: undefined,\n    image: undefined,\n    password: undefined\n  };\n  if (storedState) {\n    return storedState; // Durum depolanmışsa geri döndür\n  }\n\n  return stateInLocalStorage;\n};\nconst updateStateInStorage = newState => {\n  secureLS.set(\"post-auth\", newState);\n};\nconst configureStore = () => {\n  const initialState = getStateFromStorage();\n  setAuthorizationHeader(initialState);\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\n  store.subscribe(() => {\n    updateStateInStorage(store.getState());\n    setAuthorizationHeader(store.getState());\n  });\n\n  // Sayfa yüklendiğinde oturum durumunu geri yükle\n  window.addEventListener('load', () => {\n    const storedState = getStateFromStorage();\n    if (storedState.isLoggedIn) {\n      store.dispatch(loginSuccess(storedState));\n    }\n  });\n  return store;\n};\nexport default configureStore;","map":{"version":3,"names":["applyMiddleware","createStore","compose","authReducer","SecureLS","thunk","setAuthorizationHeader","secureLS","getStateFromStorage","storedState","get","stateInLocalStorage","isLoggedIn","username","undefined","displayName","image","password","updateStateInStorage","newState","set","configureStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","subscribe","getState","addEventListener","dispatch","loginSuccess"],"sources":["C:/Users/Ferhat/Social-Media-App-Project/wsfrontend/src/redux/configureStore.js"],"sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\"; // legacy_createStore yerine createStore kullanıyorum\r\nimport authReducer from \"./authReducer\";\r\nimport SecureLS from \"secure-ls\";\r\nimport thunk from \"redux-thunk\";\r\nimport { setAuthorizationHeader } from \"../api/apiCalls\";\r\n\r\nconst secureLS = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const storedState = secureLS.get(\"post-auth\");\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined,\r\n  };\r\n\r\n  if (storedState) {\r\n    return storedState; // Durum depolanmışsa geri döndür\r\n  }\r\n  return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = (newState) => {\r\n  secureLS.set(\"post-auth\", newState);\r\n};\r\n\r\nconst configureStore = () => {\r\n  const initialState = getStateFromStorage();\r\n  setAuthorizationHeader(initialState);\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(\r\n    authReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n    setAuthorizationHeader(store.getState());\r\n  });\r\n\r\n  // Sayfa yüklendiğinde oturum durumunu geri yükle\r\n  window.addEventListener('load', () => {\r\n    const storedState = getStateFromStorage();\r\n    if (storedState.isLoggedIn) {\r\n      store.dispatch(loginSuccess(storedState));\r\n    }\r\n  });\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO,CAAC,CAAC;AAC/D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,sBAAsB,QAAQ,iBAAiB;AAExD,MAAMC,QAAQ,GAAG,IAAIH,QAAQ,CAAC,CAAC;AAE/B,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;EAChC,MAAMC,WAAW,GAAGF,QAAQ,CAACG,GAAG,CAAC,WAAW,CAAC;EAE7C,IAAIC,mBAAmB,GAAG;IACxBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAEC,SAAS;IACnBC,WAAW,EAAED,SAAS;IACtBE,KAAK,EAAEF,SAAS;IAChBG,QAAQ,EAAEH;EACZ,CAAC;EAED,IAAIL,WAAW,EAAE;IACf,OAAOA,WAAW,CAAC,CAAC;EACtB;;EACA,OAAOE,mBAAmB;AAC5B,CAAC;AAED,MAAMO,oBAAoB,GAAIC,QAAQ,IAAK;EACzCZ,QAAQ,CAACa,GAAG,CAAC,WAAW,EAAED,QAAQ,CAAC;AACrC,CAAC;AAED,MAAME,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,YAAY,GAAGd,mBAAmB,CAAC,CAAC;EAC1CF,sBAAsB,CAACgB,YAAY,CAAC;EACpC,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAIvB,OAAO;EACxD,MAAMwB,KAAK,GAAGzB,WAAW,CACvBE,WAAW,EACXmB,YAAY,EACZC,gBAAgB,CAACvB,eAAe,CAACK,KAAK,CAAC,CACzC,CAAC;EAEDqB,KAAK,CAACC,SAAS,CAAC,MAAM;IACpBT,oBAAoB,CAACQ,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;IACtCtB,sBAAsB,CAACoB,KAAK,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC;;EAEF;EACAJ,MAAM,CAACK,gBAAgB,CAAC,MAAM,EAAE,MAAM;IACpC,MAAMpB,WAAW,GAAGD,mBAAmB,CAAC,CAAC;IACzC,IAAIC,WAAW,CAACG,UAAU,EAAE;MAC1Bc,KAAK,CAACI,QAAQ,CAACC,YAAY,CAACtB,WAAW,CAAC,CAAC;IAC3C;EACF,CAAC,CAAC;EAEF,OAAOiB,KAAK;AACd,CAAC;AAED,eAAeL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}